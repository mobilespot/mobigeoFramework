(function mobiGeoInitialize(){var _module,_exports;if(typeof module==="object"&&typeof module.exports==="object"){_module=module;module=undefined}if(typeof exports==="object"){_exports=exports;exports=undefined}if(typeof window.MobiGeo!=="undefined"){console.error("MobiGeo is already loaded.",window.MobiGeo)}else{(function(){var lastTime=0;var vendors=["ms","moz","webkit","o"];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;++x){window.requestAnimationFrame=window[vendors[x]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[vendors[x]+"CancelAnimationFrame"]||window[vendors[x]+"CancelRequestAnimationFrame"]}if(!window.requestAnimationFrame)window.requestAnimationFrame=function(callback,element){var currTime=(new Date).getTime();var timeToCall=Math.max(0,16-(currTime-lastTime));var id=window.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);lastTime=currTime+timeToCall;return id};if(!window.cancelAnimationFrame)window.cancelAnimationFrame=function(id){clearTimeout(id)}})();(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.ES6Promise=factory()})(this,function(){"use strict";function objectOrFunction(x){var type=typeof x;return x!==null&&(type==="object"||type==="function")}function isFunction(x){return typeof x==="function"}var _isArray=void 0;if(Array.isArray){_isArray=Array.isArray}else{_isArray=function(x){return Object.prototype.toString.call(x)==="[object Array]"}}var isArray=_isArray;var len=0;var vertxNext=void 0;var customSchedulerFn=void 0;var asap=function asap(callback,arg){queue[len]=callback;queue[len+1]=arg;len+=2;if(len===2){if(customSchedulerFn){customSchedulerFn(flush)}else{scheduleFlush()}}};function setScheduler(scheduleFn){customSchedulerFn=scheduleFn}function setAsap(asapFn){asap=asapFn}var browserWindow=typeof window!=="undefined"?window:undefined;var browserGlobal=browserWindow||{};var BrowserMutationObserver=browserGlobal.MutationObserver||browserGlobal.WebKitMutationObserver;var isNode=typeof self==="undefined"&&typeof process!=="undefined"&&{}.toString.call(process)==="[object process]";var isWorker=typeof Uint8ClampedArray!=="undefined"&&typeof importScripts!=="undefined"&&typeof MessageChannel!=="undefined";function useNextTick(){return function(){return process.nextTick(flush)}}function useVertxTimer(){if(typeof vertxNext!=="undefined"){return function(){vertxNext(flush)}}return useSetTimeout()}function useMutationObserver(){var iterations=0;var observer=new BrowserMutationObserver(flush);var node=document.createTextNode("");observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2}}function useMessageChannel(){var channel=new MessageChannel;channel.port1.onmessage=flush;return function(){return channel.port2.postMessage(0)}}function useSetTimeout(){var globalSetTimeout=setTimeout;return function(){return globalSetTimeout(flush,1)}}var queue=new Array(1e3);function flush(){for(var i=0;i<len;i+=2){var callback=queue[i];var arg=queue[i+1];callback(arg);queue[i]=undefined;queue[i+1]=undefined}len=0}function attemptVertx(){try{var vertx=Function("return this")().require("vertx");vertxNext=vertx.runOnLoop||vertx.runOnContext;return useVertxTimer()}catch(e){return useSetTimeout()}}var scheduleFlush=void 0;if(isNode){scheduleFlush=useNextTick()}else if(BrowserMutationObserver){scheduleFlush=useMutationObserver()}else if(isWorker){scheduleFlush=useMessageChannel()}else if(browserWindow===undefined&&typeof require==="function"){scheduleFlush=attemptVertx()}else{scheduleFlush=useSetTimeout()}function then(onFulfillment,onRejection){var parent=this;var child=new this.constructor(noop);if(child[PROMISE_ID]===undefined){makePromise(child)}var _state=parent._state;if(_state){var callback=arguments[_state-1];asap(function(){return invokeCallback(_state,child,callback,parent._result)})}else{subscribe(parent,child,onFulfillment,onRejection)}return child}function resolve$1(object){var Constructor=this;if(object&&typeof object==="object"&&object.constructor===Constructor){return object}var promise=new Constructor(noop);resolve(promise,object);return promise}var PROMISE_ID=Math.random().toString(36).substring(2);function noop(){}var PENDING=void 0;var FULFILLED=1;var REJECTED=2;function selfFulfillment(){return new TypeError("You cannot resolve a promise with itself")}function cannotReturnOwn(){return new TypeError("A promises callback cannot return that same promise.")}function tryThen(then$1,value,fulfillmentHandler,rejectionHandler){try{then$1.call(value,fulfillmentHandler,rejectionHandler)}catch(e){return e}}function handleForeignThenable(promise,thenable,then$1){asap(function(promise){var sealed=false;var error=tryThen(then$1,thenable,function(value){if(sealed){return}sealed=true;if(thenable!==value){resolve(promise,value)}else{fulfill(promise,value)}},function(reason){if(sealed){return}sealed=true;reject(promise,reason)},"Settle: "+(promise._label||" unknown promise"));if(!sealed&&error){sealed=true;reject(promise,error)}},promise)}function handleOwnThenable(promise,thenable){if(thenable._state===FULFILLED){fulfill(promise,thenable._result)}else if(thenable._state===REJECTED){reject(promise,thenable._result)}else{subscribe(thenable,undefined,function(value){return resolve(promise,value)},function(reason){return reject(promise,reason)})}}function handleMaybeThenable(promise,maybeThenable,then$1){if(maybeThenable.constructor===promise.constructor&&then$1===then&&maybeThenable.constructor.resolve===resolve$1){handleOwnThenable(promise,maybeThenable)}else{if(then$1===undefined){fulfill(promise,maybeThenable)}else if(isFunction(then$1)){handleForeignThenable(promise,maybeThenable,then$1)}else{fulfill(promise,maybeThenable)}}}function resolve(promise,value){if(promise===value){reject(promise,selfFulfillment())}else if(objectOrFunction(value)){var then$1=void 0;try{then$1=value.then}catch(error){reject(promise,error);return}handleMaybeThenable(promise,value,then$1)}else{fulfill(promise,value)}}function publishRejection(promise){if(promise._onerror){promise._onerror(promise._result)}publish(promise)}function fulfill(promise,value){if(promise._state!==PENDING){return}promise._result=value;promise._state=FULFILLED;if(promise._subscribers.length!==0){asap(publish,promise)}}function reject(promise,reason){if(promise._state!==PENDING){return}promise._state=REJECTED;promise._result=reason;asap(publishRejection,promise)}function subscribe(parent,child,onFulfillment,onRejection){var _subscribers=parent._subscribers;var length=_subscribers.length;parent._onerror=null;_subscribers[length]=child;_subscribers[length+FULFILLED]=onFulfillment;_subscribers[length+REJECTED]=onRejection;if(length===0&&parent._state){asap(publish,parent)}}function publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return}var child=void 0,callback=void 0,detail=promise._result;for(var i=0;i<subscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){invokeCallback(settled,child,callback,detail)}else{callback(detail)}}promise._subscribers.length=0}function invokeCallback(settled,promise,callback,detail){var hasCallback=isFunction(callback),value=void 0,error=void 0,succeeded=true;if(hasCallback){try{value=callback(detail)}catch(e){succeeded=false;error=e}if(promise===value){reject(promise,cannotReturnOwn());return}}else{value=detail}if(promise._state!==PENDING){}else if(hasCallback&&succeeded){resolve(promise,value)}else if(succeeded===false){reject(promise,error)}else if(settled===FULFILLED){fulfill(promise,value)}else if(settled===REJECTED){reject(promise,value)}}function initializePromise(promise,resolver){try{resolver(function resolvePromise(value){resolve(promise,value)},function rejectPromise(reason){reject(promise,reason)})}catch(e){reject(promise,e)}}var id=0;function nextId(){return id++}function makePromise(promise){promise[PROMISE_ID]=id++;promise._state=undefined;promise._result=undefined;promise._subscribers=[]}function validationError(){return new Error("Array Methods must be provided an Array")}var Enumerator=function(){function Enumerator(Constructor,input){this._instanceConstructor=Constructor;this.promise=new Constructor(noop);if(!this.promise[PROMISE_ID]){makePromise(this.promise)}if(isArray(input)){this.length=input.length;this._remaining=input.length;this._result=new Array(this.length);if(this.length===0){fulfill(this.promise,this._result)}else{this.length=this.length||0;this._enumerate(input);if(this._remaining===0){fulfill(this.promise,this._result)}}}else{reject(this.promise,validationError())}}Enumerator.prototype._enumerate=function _enumerate(input){for(var i=0;this._state===PENDING&&i<input.length;i++){this._eachEntry(input[i],i)}};Enumerator.prototype._eachEntry=function _eachEntry(entry,i){var c=this._instanceConstructor;var resolve$1=c.resolve;if(resolve$1===resolve$1){var _then=void 0;var error=void 0;var didError=false;try{_then=entry.then}catch(e){didError=true;error=e}if(_then===then&&entry._state!==PENDING){this._settledAt(entry._state,i,entry._result)}else if(typeof _then!=="function"){this._remaining--;this._result[i]=entry}else if(c===Promise$2){var promise=new c(noop);if(didError){reject(promise,error)}else{handleMaybeThenable(promise,entry,_then)}this._willSettleAt(promise,i)}else{this._willSettleAt(new c(function(resolve$1){return resolve$1(entry)}),i)}}else{this._willSettleAt(resolve$1(entry),i)}};Enumerator.prototype._settledAt=function _settledAt(state,i,value){var promise=this.promise;if(promise._state===PENDING){this._remaining--;if(state===REJECTED){reject(promise,value)}else{this._result[i]=value}}if(this._remaining===0){fulfill(promise,this._result)}};Enumerator.prototype._willSettleAt=function _willSettleAt(promise,i){var enumerator=this;subscribe(promise,undefined,function(value){return enumerator._settledAt(FULFILLED,i,value)},function(reason){return enumerator._settledAt(REJECTED,i,reason)})};return Enumerator}();function all(entries){return new Enumerator(this,entries).promise}function race(entries){var Constructor=this;if(!isArray(entries)){return new Constructor(function(_,reject){return reject(new TypeError("You must pass an array to race."))})}else{return new Constructor(function(resolve,reject){var length=entries.length;for(var i=0;i<length;i++){Constructor.resolve(entries[i]).then(resolve,reject)}})}}function reject$1(reason){var Constructor=this;var promise=new Constructor(noop);reject(promise,reason);return promise}function needsResolver(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function needsNew(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}var Promise$2=function(){function Promise(resolver){this[PROMISE_ID]=nextId();this._result=this._state=undefined;this._subscribers=[];if(noop!==resolver){typeof resolver!=="function"&&needsResolver();this instanceof Promise?initializePromise(this,resolver):needsNew()}}Promise.prototype.catch=function _catch(onRejection){return this.then(null,onRejection)};Promise.prototype.finally=function _finally(callback){var promise=this;var constructor=promise.constructor;if(isFunction(callback)){return promise.then(function(value){return constructor.resolve(callback()).then(function(){return value})},function(reason){return constructor.resolve(callback()).then(function(){throw reason})})}return promise.then(callback,callback)};return Promise}();Promise$2.prototype.then=then;Promise$2.all=all;Promise$2.race=race;Promise$2.resolve=resolve$1;Promise$2.reject=reject$1;Promise$2._setScheduler=setScheduler;Promise$2._setAsap=setAsap;Promise$2._asap=asap;function polyfill(){var local=void 0;if(typeof global!=="undefined"){local=global}else if(typeof self!=="undefined"){local=self}else{try{local=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}}var P=local.Promise;if(P){var promiseToString=null;try{promiseToString=Object.prototype.toString.call(P.resolve())}catch(e){}if(promiseToString==="[object Promise]"&&!P.cast){return}}local.Promise=Promise$2}Promise$2.polyfill=polyfill;Promise$2.Promise=Promise$2;Promise$2.polyfill();return Promise$2});!function(e,t,n){function r(e,t){return typeof e===t}function o(){var e,t,n,o,i,s,a;for(var f in y)if(y.hasOwnProperty(f)){if(e=[],t=y[f],t.name&&(e.push(t.name.toLowerCase()),t.options&&t.options.aliases&&t.options.aliases.length))for(n=0;n<t.options.aliases.length;n++)e.push(t.options.aliases[n].toLowerCase());for(o=r(t.fn,"function")?t.fn():t.fn,i=0;i<e.length;i++)s=e[i],a=s.split("."),1===a.length?Modernizr[a[0]]=o:(!Modernizr[a[0]]||Modernizr[a[0]]instanceof Boolean||(Modernizr[a[0]]=new Boolean(Modernizr[a[0]])),Modernizr[a[0]][a[1]]=o),x.push((o?"":"no-")+a.join("-"))}}function i(e,t){return!!~(""+e).indexOf(t)}function s(){return"function"!=typeof t.createElement?t.createElement(arguments[0]):b?t.createElementNS.call(t,"http://www.w3.org/2000/svg",arguments[0]):t.createElement.apply(t,arguments)}function a(){var e=t.body;return e||(e=s(b?"svg":"body"),e.fake=!0),e}function f(e,n,r,o){var i,f,u,d,l="modernizr",p=s("div"),c=a();if(parseInt(r,10))for(;r--;)u=s("div"),u.id=o?o[r]:l+(r+1),p.appendChild(u);return i=s("style"),i.type="text/css",i.id="s"+l,(c.fake?c:p).appendChild(i),c.appendChild(p),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(t.createTextNode(e)),p.id=l,c.fake&&(c.style.background="",c.style.overflow="hidden",d=S.style.overflow,S.style.overflow="hidden",S.appendChild(c)),f=n(p,e),c.fake?(c.parentNode.removeChild(c),S.style.overflow=d,S.offsetHeight):p.parentNode.removeChild(p),!!f}function u(e){return e.replace(/([A-Z])/g,function(e,t){return"-"+t.toLowerCase()}).replace(/^ms-/,"-ms-")}function d(t,r){var o=t.length;if("CSS"in e&&"supports"in e.CSS){for(;o--;)if(e.CSS.supports(u(t[o]),r))return!0;return!1}if("CSSSupportsRule"in e){for(var i=[];o--;)i.push("("+u(t[o])+":"+r+")");return i=i.join(" or "),f("@supports ("+i+") { #modernizr { position: absolute; } }",function(e){return"absolute"==getComputedStyle(e,null).position})}return n}function l(e){return e.replace(/([a-z])-([a-z])/g,function(e,t,n){return t+n.toUpperCase()}).replace(/^-/,"")}function p(e,t,o,a){function f(){p&&(delete T.style,delete T.modElem)}if(a=r(a,"undefined")?!1:a,!r(o,"undefined")){var u=d(e,o);if(!r(u,"undefined"))return u}for(var p,c,v,m,h,y=["modernizr","tspan"];!T.style;)p=!0,T.modElem=s(y.shift()),T.style=T.modElem.style;for(v=e.length,c=0;v>c;c++)if(m=e[c],h=T.style[m],i(m,"-")&&(m=l(m)),T.style[m]!==n){if(a||r(o,"undefined"))return f(),"pfx"==t?m:!0;try{T.style[m]=o}catch(g){}if(T.style[m]!=h)return f(),"pfx"==t?m:!0}return f(),!1}function c(e,t){return function(){return e.apply(t,arguments)}}function v(e,t,n){var o;for(var i in e)if(e[i]in t)return n===!1?e[i]:(o=t[e[i]],r(o,"function")?c(o,n||t):o);return!1}function m(e,t,n,o,i){var s=e.charAt(0).toUpperCase()+e.slice(1),a=(e+" "+w.join(s+" ")+s).split(" ");return r(t,"string")||r(t,"undefined")?p(a,t,o,i):(a=(e+" "+z.join(s+" ")+s).split(" "),v(a,t,n))}function h(e,t,r){return m(e,n,n,t,r)}var y=[],g={_version:"3.3.1",_config:{classPrefix:"",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,t){var n=this;setTimeout(function(){t(n[e])},0)},addTest:function(e,t,n){y.push({name:e,fn:t,options:n})},addAsyncTest:function(e){y.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=g,Modernizr=new Modernizr;var x=[],C="Moz O ms Webkit",w=g._config.usePrefixes?C.split(" "):[];g._cssomPrefixes=w;var S=t.documentElement,b="svg"===S.nodeName.toLowerCase(),_={elem:s("modernizr")};Modernizr._q.push(function(){delete _.elem});var T={style:_.elem.style};Modernizr._q.unshift(function(){delete T.style});var z=g._config.usePrefixes?C.toLowerCase().split(" "):[];g._domPrefixes=z,g.testAllProps=m;var E=function(t){var r,o=O.length,i=e.CSSRule;if("undefined"==typeof i)return n;if(!t)return!1;if(t=t.replace(/^@/,""),r=t.replace(/-/g,"_").toUpperCase()+"_RULE",r in i)return"@"+t;for(var s=0;o>s;s++){var a=O[s],f=a.toUpperCase()+"_"+r;if(f in i)return"@-"+a.toLowerCase()+"-"+t}return!1};g.atRule=E;var P=g.prefixed=function(e,t,n){return 0===e.indexOf("@")?E(e):(-1!=e.indexOf("-")&&(e=l(e)),t?m(e,t,n):m(e,"pfx"))},A=(g.prefixedCSS=function(e){var t=P(e);return t&&u(t)},function(e,t){var n=!1,r=s("div"),o=r.style;if(e in o){var i=z.length;for(o[e]=t,n=o[e];i--&&!n;)o[e]="-"+z[i]+"-"+t,n=o[e]}return""===n&&(n=!1),n});g.prefixedCSSValue=A,g.testAllProps=h,Modernizr.addTest("flexbox",h("flexBasis","1px",!0)),Modernizr.addTest("flexwrap",h("flexWrap","wrap",!0));var k=g.testStyles=f,L="CSS"in e&&"supports"in e.CSS,j="supportsCSS"in e;Modernizr.addTest("supports",L||j),Modernizr.addTest("csstransforms3d",function(){var e=!!h("perspective","1px",!0),t=Modernizr._config.usePrefixes;if(e&&(!t||"webkitPerspective"in S.style)){var n,r="#modernizr{width:0;height:0}";Modernizr.supports?n="@supports (perspective: 1px)":(n="@media (transform-3d)",t&&(n+=",(-webkit-transform-3d)")),n+="{#modernizr{width:7px;height:18px;margin:0;padding:0;border:0}}",k(r+n,function(t){e=7===t.offsetWidth&&18===t.offsetHeight})}return e}),Modernizr.addTest("dataset",function(){var e=s("div");return e.setAttribute("data-a-b","c"),!(!e.dataset||"c"!==e.dataset.aB)});var N=function(){function e(e,t){var o;return e?(t&&"string"!=typeof t||(t=s(t||"div")),e="on"+e,o=e in t,!o&&r&&(t.setAttribute||(t=s("div")),t.setAttribute(e,""),o="function"==typeof t[e],t[e]!==n&&(t[e]=n),t.removeAttribute(e)),o):!1}var r=!("onblur"in t.documentElement);return e}();g.hasEvent=N,Modernizr.addTest("pointerevents",function(){var e=!1,t=z.length;for(e=Modernizr.hasEvent("pointerdown");t--&&!e;)N(z[t]+"pointerdown")&&(e=!0);return e});var O=g._config.usePrefixes?" -webkit- -moz- -o- -ms- ".split(" "):[];g._prefixes=O,Modernizr.addTest("touchevents",function(){var n;if("ontouchstart"in e||e.DocumentTouch&&t instanceof DocumentTouch)n=!0;else{var r=["@media (",O.join("touch-enabled),("),"heartz",")","{#modernizr{top:9px;position:absolute}}"].join("");k(r,function(e){n=9===e.offsetTop})}return n}),o(),delete g.addTest,delete g.addAsyncTest;for(var q=0;q<Modernizr._q.length;q++)Modernizr._q[q]();e.Modernizr=Modernizr}(window,document);if("document"in self){if(!("classList"in document.createElement("_"))||document.createElementNS&&!("classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))){(function(t){"use strict";if(!("Element"in t))return;var e="classList",i="prototype",n=t.Element[i],s=Object,r=String[i].trim||function(){return this.replace(/^\s+|\s+$/g,"")},a=Array[i].indexOf||function(t){var e=0,i=this.length;for(;e<i;e++){if(e in this&&this[e]===t){return e}}return-1},o=function(t,e){this.name=t;this.code=DOMException[t];this.message=e},l=function(t,e){if(e===""){throw new o("SYNTAX_ERR","An invalid or illegal string was specified")}if(/\s/.test(e)){throw new o("INVALID_CHARACTER_ERR","String contains an invalid character")}return a.call(t,e)},c=function(t){var e=r.call(t.getAttribute("class")||""),i=e?e.split(/\s+/):[],n=0,s=i.length;for(;n<s;n++){this.push(i[n])}this._updateClassName=function(){t.setAttribute("class",this.toString())}},u=c[i]=[],f=function(){return new c(this)};o[i]=Error[i];u.item=function(t){return this[t]||null};u.contains=function(t){t+="";return l(this,t)!==-1};u.add=function(){var t=arguments,e=0,i=t.length,n,s=false;do{n=t[e]+"";if(l(this,n)===-1){this.push(n);s=true}}while(++e<i);if(s){this._updateClassName()}};u.remove=function(){var t=arguments,e=0,i=t.length,n,s=false,r;do{n=t[e]+"";r=l(this,n);while(r!==-1){this.splice(r,1);s=true;r=l(this,n)}}while(++e<i);if(s){this._updateClassName()}};u.toggle=function(t,e){t+="";var i=this.contains(t),n=i?e!==true&&"remove":e!==false&&"add";if(n){this[n](t)}if(e===true||e===false){return e}else{return!i}};u.toString=function(){return this.join(" ")};if(s.defineProperty){var h={get:f,enumerable:true,configurable:true};try{s.defineProperty(n,e,h)}catch(d){if(d.number===-2146823252){h.enumerable=false;s.defineProperty(n,e,h)}}}else if(s[i].__defineGetter__){n.__defineGetter__(e,f)}})(self)}else{(function(){"use strict";var t=document.createElement("_");t.classList.add("c1","c2");if(!t.classList.contains("c2")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var i,n=arguments.length;for(i=0;i<n;i++){t=arguments[i];e.call(this,t)}}};e("add");e("remove")}t.classList.toggle("c3",false);if(t.classList.contains("c3")){var i=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){if(1 in arguments&&!this.contains(t)===!e){return e}else{return i.call(this,t)}}}t=null})()}}!function r(e,t,n){function o(u,f){if(!t[u]){if(!e[u]){var c="function"==typeof require&&require;if(!f&&c)return c(u,!0);if(i)return i(u,!0);var a=new Error("Cannot find module '"+u+"'");throw a.code="MODULE_NOT_FOUND",a}var l=t[u]={exports:{}};e[u][0].call(l.exports,function(r){var t=e[u][1][r];return o(t?t:r)},l,l.exports,r,e,t,n)}return t[u].exports}for(var i="function"==typeof require&&require,u=0;u<n.length;u++)o(n[u]);return o}({1:[function(r,e,t){"use strict";r("./index").polyfill()},{"./index":2}],2:[function(r,e,t){"use strict";function n(r,e){if(void 0===r||null===r)throw new TypeError("Cannot convert first argument to object");for(var t=Object(r),n=1;n<arguments.length;n++){var o=arguments[n];if(void 0!==o&&null!==o)for(var i=Object.keys(Object(o)),u=0,f=i.length;u<f;u++){var c=i[u],a=Object.getOwnPropertyDescriptor(o,c);void 0!==a&&a.enumerable&&(t[c]=o[c])}}return t}function o(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:n})}e.exports={assign:n,polyfill:o}},{}]},{},[1]);if(!Array.prototype.find){Object.defineProperty(Array.prototype,"find",{value:function(predicate){if(this==null){throw new TypeError('"this" is null or not defined')}var o=Object(this);var len=o.length>>>0;if(typeof predicate!=="function"){throw new TypeError("predicate must be a function")}var thisArg=arguments[1];var k=0;while(k<len){var kValue=o[k];if(predicate.call(thisArg,kValue,k,o)){return kValue}k++}return undefined},configurable:true,writable:true})}if(typeof Hogan==="undefined"){var Hogan={};!function(t){function n(t,n,e){var i;return n&&"object"==typeof n&&(void 0!==n[t]?i=n[t]:e&&n.get&&"function"==typeof n.get&&(i=n.get(t))),i}function e(t,n,e,i,r,s){function a(){}function o(){}a.prototype=t,o.prototype=t.subs;var u,c=new a;c.subs=new o,c.subsText={},c.buf="",i=i||{},c.stackSubs=i,c.subsText=s;for(u in n)i[u]||(i[u]=n[u]);for(u in i)c.subs[u]=i[u];r=r||{},c.stackPartials=r;for(u in e)r[u]||(r[u]=e[u]);for(u in r)c.partials[u]=r[u];return c}function i(t){return String(null===t||void 0===t?"":t)}function r(t){return t=i(t),l.test(t)?t.replace(s,"&amp;").replace(a,"&lt;").replace(o,"&gt;").replace(u,"&#39;").replace(c,"&quot;"):t}t.Template=function(t,n,e,i){t=t||{},this.r=t.code||this.r,this.c=e,this.options=i||{},this.text=n||"",this.partials=t.partials||{},this.subs=t.subs||{},this.buf=""},t.Template.prototype={r:function(){return""},v:r,t:i,render:function(t,n,e){return this.ri([t],n||{},e)},ri:function(t,n,e){return this.r(t,n,e)},ep:function(t,n){var i=this.partials[t],r=n[i.name];if(i.instance&&i.base==r)return i.instance;if("string"==typeof r){if(!this.c)throw new Error("No compiler available.");r=this.c.compile(r,this.options)}if(!r)return null;if(this.partials[t].base=r,i.subs){n.stackText||(n.stackText={});for(key in i.subs)n.stackText[key]||(n.stackText[key]=void 0!==this.activeSub&&n.stackText[this.activeSub]?n.stackText[this.activeSub]:this.text);r=e(r,i.subs,i.partials,this.stackSubs,this.stackPartials,n.stackText)}return this.partials[t].instance=r,r},rp:function(t,n,e,i){var r=this.ep(t,e);return r?r.ri(n,e,i):""},rs:function(t,n,e){var i=t[t.length-1];if(!f(i))return void e(t,n,this);for(var r=0;r<i.length;r++)t.push(i[r]),e(t,n,this),t.pop()},s:function(t,n,e,i,r,s,a){var o;return f(t)&&0===t.length?!1:("function"==typeof t&&(t=this.ms(t,n,e,i,r,s,a)),o=!!t,!i&&o&&n&&n.push("object"==typeof t?t:n[n.length-1]),o)},d:function(t,e,i,r){var s,a=t.split("."),o=this.f(a[0],e,i,r),u=this.options.modelGet,c=null;if("."===t&&f(e[e.length-2]))o=e[e.length-1];else for(var l=1;l<a.length;l++)s=n(a[l],o,u),void 0!==s?(c=o,o=s):o="";return r&&!o?!1:(r||"function"!=typeof o||(e.push(c),o=this.mv(o,e,i),e.pop()),o)},f:function(t,e,i,r){for(var s=!1,a=null,o=!1,u=this.options.modelGet,c=e.length-1;c>=0;c--)if(a=e[c],s=n(t,a,u),void 0!==s){o=!0;break}return o?(r||"function"!=typeof s||(s=this.mv(s,e,i)),s):r?!1:""},ls:function(t,n,e,r,s){var a=this.options.delimiters;return this.options.delimiters=s,this.b(this.ct(i(t.call(n,r)),n,e)),this.options.delimiters=a,!1},ct:function(t,n,e){if(this.options.disableLambda)throw new Error("Lambda features disabled.");return this.c.compile(t,this.options).render(n,e)},b:function(t){this.buf+=t},fl:function(){var t=this.buf;return this.buf="",t},ms:function(t,n,e,i,r,s,a){var o,u=n[n.length-1],c=t.call(u);return"function"==typeof c?i?!0:(o=this.activeSub&&this.subsText&&this.subsText[this.activeSub]?this.subsText[this.activeSub]:this.text,this.ls(c,u,e,o.substring(r,s),a)):c},mv:function(t,n,e){var r=n[n.length-1],s=t.call(r);return"function"==typeof s?this.ct(i(s.call(r)),r,e):s},sub:function(t,n,e,i){var r=this.subs[t];r&&(this.activeSub=t,r(n,e,this,i),this.activeSub=!1)}};var s=/&/g,a=/</g,o=/>/g,u=/\'/g,c=/\"/g,l=/[&<>\"\']/,f=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}}("undefined"!=typeof exports?exports:Hogan),function(t){function n(t){"}"===t.n.substr(t.n.length-1)&&(t.n=t.n.substring(0,t.n.length-1))}function e(t){return t.trim?t.trim():t.replace(/^\s*|\s*$/g,"")}function i(t,n,e){if(n.charAt(e)!=t.charAt(0))return!1;for(var i=1,r=t.length;r>i;i++)if(n.charAt(e+i)!=t.charAt(i))return!1;return!0}function r(n,e,i,o){var u=[],c=null,l=null,f=null;for(l=i[i.length-1];n.length>0;){if(f=n.shift(),l&&"<"==l.tag&&!(f.tag in k))throw new Error("Illegal content in < super tag.");if(t.tags[f.tag]<=t.tags.$||s(f,o))i.push(f),f.nodes=r(n,f.tag,i,o);else{if("/"==f.tag){if(0===i.length)throw new Error("Closing tag without opener: /"+f.n);if(c=i.pop(),f.n!=c.n&&!a(f.n,c.n,o))throw new Error("Nesting error: "+c.n+" vs. "+f.n);return c.end=f.i,u}"\n"==f.tag&&(f.last=0==n.length||"\n"==n[0].tag)}u.push(f)}if(i.length>0)throw new Error("missing closing tag: "+i.pop().n);return u}function s(t,n){for(var e=0,i=n.length;i>e;e++)if(n[e].o==t.n)return t.tag="#",!0}function a(t,n,e){for(var i=0,r=e.length;r>i;i++)if(e[i].c==t&&e[i].o==n)return!0}function o(t){var n=[];for(var e in t)n.push('"'+c(e)+'": function(c,p,t,i) {'+t[e]+"}");return"{ "+n.join(",")+" }"}function u(t){var n=[];for(var e in t.partials)n.push('"'+c(e)+'":{name:"'+c(t.partials[e].name)+'", '+u(t.partials[e])+"}");return"partials: {"+n.join(",")+"}, subs: "+o(t.subs)}function c(t){return t.replace(m,"\\\\").replace(v,'\\"').replace(b,"\\n").replace(d,"\\r").replace(x,"\\u2028").replace(w,"\\u2029")}function l(t){return~t.indexOf(".")?"d":"f"}function f(t,n){var e="<"+(n.prefix||""),i=e+t.n+y++;return n.partials[i]={name:t.n,partials:{}},n.code+='t.b(t.rp("'+c(i)+'",c,p,"'+(t.indent||"")+'"));',i}function h(t,n){n.code+="t.b(t.t(t."+l(t.n)+'("'+c(t.n)+'",c,p,0)));'}function p(t){return"t.b("+t+");"}var g=/\S/,v=/\"/g,b=/\n/g,d=/\r/g,m=/\\/g,x=/\u2028/,w=/\u2029/;t.tags={"#":1,"^":2,"<":3,$:4,"/":5,"!":6,">":7,"=":8,_v:9,"{":10,"&":11,_t:12},t.scan=function(r,s){function a(){m.length>0&&(x.push({tag:"_t",text:new String(m)}),m="")}function o(){for(var n=!0,e=y;e<x.length;e++)if(n=t.tags[x[e].tag]<t.tags._v||"_t"==x[e].tag&&null===x[e].text.match(g),!n)return!1;return n}function u(t,n){if(a(),t&&o())for(var e,i=y;i<x.length;i++)x[i].text&&((e=x[i+1])&&">"==e.tag&&(e.indent=x[i].text.toString()),x.splice(i,1));else n||x.push({tag:"\n"});w=!1,y=x.length}function c(t,n){var i="="+S,r=t.indexOf(i,n),s=e(t.substring(t.indexOf("=",n)+1,r)).split(" ");return T=s[0],S=s[s.length-1],r+i.length-1}var l=r.length,f=0,h=1,p=2,v=f,b=null,d=null,m="",x=[],w=!1,k=0,y=0,T="{{",S="}}";for(s&&(s=s.split(" "),T=s[0],S=s[1]),k=0;l>k;k++)v==f?i(T,r,k)?(--k,a(),v=h):"\n"==r.charAt(k)?u(w):m+=r.charAt(k):v==h?(k+=T.length-1,d=t.tags[r.charAt(k+1)],b=d?r.charAt(k+1):"_v","="==b?(k=c(r,k),v=f):(d&&k++,v=p),w=k):i(S,r,k)?(x.push({tag:b,n:e(m),otag:T,ctag:S,i:"/"==b?w-T.length:k+S.length}),m="",k+=S.length-1,v=f,"{"==b&&("}}"==S?k++:n(x[x.length-1]))):m+=r.charAt(k);return u(w,!0),x};var k={_t:!0,"\n":!0,$:!0,"/":!0};t.stringify=function(n){return"{code: function (c,p,i) { "+t.wrapMain(n.code)+" },"+u(n)+"}"};var y=0;t.generate=function(n,e,i){y=0;var r={code:"",subs:{},partials:{}};return t.walk(n,r),i.asString?this.stringify(r,e,i):this.makeTemplate(r,e,i)},t.wrapMain=function(t){return'var t=this;t.b(i=i||"");'+t+"return t.fl();"},t.template=t.Template,t.makeTemplate=function(t,n,e){var i=this.makePartials(t);return i.code=new Function("c","p","i",this.wrapMain(t.code)),new this.template(i,n,this,e)},t.makePartials=function(t){var n,e={subs:{},partials:t.partials,name:t.name};for(n in e.partials)e.partials[n]=this.makePartials(e.partials[n]);for(n in t.subs)e.subs[n]=new Function("c","p","t","i",t.subs[n]);return e},t.codegen={"#":function(n,e){e.code+="if(t.s(t."+l(n.n)+'("'+c(n.n)+'",c,p,1),c,p,0,'+n.i+","+n.end+',"'+n.otag+" "+n.ctag+'")){t.rs(c,p,function(c,p,t){',t.walk(n.nodes,e),e.code+="});c.pop();}"},"^":function(n,e){e.code+="if(!t.s(t."+l(n.n)+'("'+c(n.n)+'",c,p,1),c,p,1,0,0,"")){',t.walk(n.nodes,e),e.code+="};"},">":f,"<":function(n,e){var i={partials:{},code:"",subs:{},inPartial:!0};t.walk(n.nodes,i);var r=e.partials[f(n,e)];r.subs=i.subs,r.partials=i.partials},$:function(n,e){var i={subs:{},code:"",partials:e.partials,prefix:n.n};t.walk(n.nodes,i),e.subs[n.n]=i.code,e.inPartial||(e.code+='t.sub("'+c(n.n)+'",c,p,i);')},"\n":function(t,n){n.code+=p('"\\n"'+(t.last?"":" + i"))},_v:function(t,n){n.code+="t.b(t.v(t."+l(t.n)+'("'+c(t.n)+'",c,p,0)));'},_t:function(t,n){n.code+=p('"'+c(t.text)+'"')},"{":h,"&":h},t.walk=function(n,e){for(var i,r=0,s=n.length;s>r;r++)i=t.codegen[n[r].tag],i&&i(n[r],e);return e},t.parse=function(t,n,e){return e=e||{},r(t,"",[],e.sectionTags||[])},t.cache={},t.cacheKey=function(t,n){return[t,!!n.asString,!!n.disableLambda,n.delimiters,!!n.modelGet].join("||")},t.compile=function(n,e){e=e||{};var i=t.cacheKey(n,e),r=this.cache[i];if(r){var s=r.partials;for(var a in s)delete s[a].instance;return r}return r=this.generate(this.parse(this.scan(n,e.delimiters),n,e),n,e),this.cache[i]=r}}("undefined"!=typeof exports?exports:Hogan)}if(typeof PubSub==="undefined"){(function(root,factory){"use strict";var PubSub={};if(root.PubSub){PubSub=root.PubSub;console.warn("PubSub already loaded, using existing version")}else{root.PubSub=PubSub;factory(PubSub)}if(typeof exports==="object"){if(module!==undefined&&module.exports){exports=module.exports=PubSub}exports.PubSub=PubSub;module.exports=exports=PubSub}else if(typeof define==="function"&&define.amd){define(function(){return PubSub})}})(typeof window==="object"&&window||this,function(PubSub){"use strict";var messages={},lastUid=-1,ALL_SUBSCRIBING_MSG="*";function hasKeys(obj){var key;for(key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){return true}}return false}function throwException(ex){return function reThrowException(){throw ex}}function callSubscriberWithDelayedExceptions(subscriber,message,data){try{subscriber(message,data)}catch(ex){setTimeout(throwException(ex),0)}}function callSubscriberWithImmediateExceptions(subscriber,message,data){subscriber(message,data)}function deliverMessage(originalMessage,matchedMessage,data,immediateExceptions){var subscribers=messages[matchedMessage],callSubscriber=immediateExceptions?callSubscriberWithImmediateExceptions:callSubscriberWithDelayedExceptions,s;if(!Object.prototype.hasOwnProperty.call(messages,matchedMessage)){return}for(s in subscribers){if(Object.prototype.hasOwnProperty.call(subscribers,s)){callSubscriber(subscribers[s],originalMessage,data)}}}function createDeliveryFunction(message,data,immediateExceptions){return function deliverNamespaced(){var topic=String(message),position=topic.lastIndexOf(".");deliverMessage(message,message,data,immediateExceptions);while(position!==-1){topic=topic.substr(0,position);position=topic.lastIndexOf(".");deliverMessage(message,topic,data,immediateExceptions)}deliverMessage(message,ALL_SUBSCRIBING_MSG,data,immediateExceptions)}}function hasDirectSubscribersFor(message){var topic=String(message),found=Boolean(Object.prototype.hasOwnProperty.call(messages,topic)&&hasKeys(messages[topic]));return found}function messageHasSubscribers(message){var topic=String(message),found=hasDirectSubscribersFor(topic)||hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),position=topic.lastIndexOf(".");while(!found&&position!==-1){topic=topic.substr(0,position);position=topic.lastIndexOf(".");found=hasDirectSubscribersFor(topic)}return found}function publish(message,data,sync,immediateExceptions){message=typeof message==="symbol"?message.toString():message;var deliver=createDeliveryFunction(message,data,immediateExceptions),hasSubscribers=messageHasSubscribers(message);if(!hasSubscribers){return false}if(sync===true){deliver()}else{setTimeout(deliver,0)}return true}PubSub.publish=function(message,data){return publish(message,data,false,PubSub.immediateExceptions)};PubSub.publishSync=function(message,data){return publish(message,data,true,PubSub.immediateExceptions)};PubSub.subscribe=function(message,func){if(typeof func!=="function"){return false}message=typeof message==="symbol"?message.toString():message;if(!Object.prototype.hasOwnProperty.call(messages,message)){messages[message]={}}var token="uid_"+String(++lastUid);messages[message][token]=func;return token};PubSub.subscribeAll=function(func){return PubSub.subscribe(ALL_SUBSCRIBING_MSG,func)};PubSub.subscribeOnce=function(message,func){var token=PubSub.subscribe(message,function(){PubSub.unsubscribe(token);func.apply(this,arguments)});return PubSub};PubSub.clearAllSubscriptions=function clearAllSubscriptions(){messages={}};PubSub.clearSubscriptions=function clearSubscriptions(topic){var m;for(m in messages){if(Object.prototype.hasOwnProperty.call(messages,m)&&m.indexOf(topic)===0){delete messages[m]}}};PubSub.countSubscriptions=function countSubscriptions(topic){var m;var token;var count=0;for(m in messages){if(Object.prototype.hasOwnProperty.call(messages,m)&&m.indexOf(topic)===0){for(token in messages[m]){count++}break}}return count};PubSub.getSubscriptions=function getSubscriptions(topic){var m;var list=[];for(m in messages){if(Object.prototype.hasOwnProperty.call(messages,m)&&m.indexOf(topic)===0){list.push(m)}}return list};PubSub.unsubscribe=function(value){var descendantTopicExists=function(topic){var m;for(m in messages){if(Object.prototype.hasOwnProperty.call(messages,m)&&m.indexOf(topic)===0){return true}}return false},isTopic=typeof value==="string"&&(Object.prototype.hasOwnProperty.call(messages,value)||descendantTopicExists(value)),isToken=!isTopic&&typeof value==="string",isFunction=typeof value==="function",result=false,m,message,t;if(isTopic){PubSub.clearSubscriptions(value);return}for(m in messages){if(Object.prototype.hasOwnProperty.call(messages,m)){message=messages[m];if(isToken&&message[value]){delete message[value];result=value;break}if(isFunction){for(t in message){if(Object.prototype.hasOwnProperty.call(message,t)&&message[t]===value){delete message[t];result=true}}}}}return result}})}if(typeof _==="undefined"||typeof _.debounce==="undefined"){(function(){"use strict";function t(){}function e(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}function n(t){return null!=t&&typeof t=="object"}function o(t){var e;if(!(e=typeof t=="symbol")&&(e=n(t))){if(null==t)t=t===i?"[object Undefined]":"[object Null]";else if(v&&v in Object(t)){e=d.call(t,v);var o=t[v];try{t[v]=i;var r=true}catch(t){}var u=j.call(t);r&&(e?t[v]=o:delete t[v]),t=u}else t=j.call(t);e="[object Symbol]"==t}return e}function r(t){if(typeof t=="number")return t;if(o(t))return u;if(e(t)&&(t=typeof t.valueOf=="function"?t.valueOf():t,t=e(t)?t+"":t),typeof t!="string")return 0===t?t:+t;t=t.replace(f,"");var n=l.test(t);return n||a.test(t)?s(t.slice(2),n?2:8):c.test(t)?u:+t}var i,u=NaN,f=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,l=/^0b[01]+$/i,a=/^0o[0-7]+$/i,s=parseInt,b=typeof self=="object"&&self&&self.Object===Object&&self,p=typeof global=="object"&&global&&global.Object===Object&&global||b||Function("return this")(),y=(b=typeof exports=="object"&&exports&&!exports.nodeType&&exports)&&typeof module=="object"&&module&&!module.nodeType&&module,m=Object.prototype,d=m.hasOwnProperty,j=m.toString,v=(m=p.Symbol)?m.toStringTag:i,g=Math.max,O=Math.min,x=function(){return p.Date.now()};t.debounce=function(t,n,o){function u(e){var n=s,o=b;return s=b=i,j=e,y=t.apply(o,n)}function f(t){var e=t-d;return t-=j,d===i||e>=n||0>e||h&&t>=p}function c(){var t=x();if(f(t))return l(t);var e,o=setTimeout;e=t-j,t=n-(t-d),e=h?O(t,p-e):t,m=o(c,e)}function l(t){return m=i,T&&s?u(t):(s=b=i,y)}function a(){var t=x(),e=f(t);if(s=arguments,b=this,d=t,e){if(m===i)return j=t=d,m=setTimeout(c,n),v?u(t):y;if(h)return m=setTimeout(c,n),u(d)}return m===i&&(m=setTimeout(c,n)),y}var s,b,p,y,m,d,j=0,v=false,h=false,T=true;if(typeof t!="function")throw new TypeError("Expected a function");return n=r(n)||0,e(o)&&(v=!!o.leading,p=(h="maxWait"in o)?g(r(o.maxWait)||0,n):p,T="trailing"in o?!!o.trailing:T),a.cancel=function(){m!==i&&clearTimeout(m),j=0,s=d=b=m=i},a.flush=function(){return m===i?y:l(x())},a},t.isObject=e,t.isObjectLike=n,t.isSymbol=o,t.now=x,t.toNumber=r,t.VERSION="4.17.5",typeof define=="function"&&typeof define.amd=="object"&&define.amd?(p._=t,define(function(){return t})):y?((y.exports=t)._=t,b._=t):p._=t}).call(this)}if(typeof shadeBlendConvert==="undefined"){var shadeBlendConvert=function(){var NamedColors={aliceblue:"#F0F8FF",antiquewhite:"#FAEBD7",aqua:"#00FFFF",aquamarine:"#7FFFD4",azure:"#F0FFFF",beige:"#F5F5DC",bisque:"#FFE4C4",black:"#000000",blanchedalmond:"#FFEBCD",blue:"#0000FF",blueviolet:"#8A2BE2",brown:"#A52A2A",burlywood:"#DEB887",cadetblue:"#5F9EA0",chartreuse:"#7FFF00",chocolate:"#D2691E",coral:"#FF7F50",cornflowerblue:"#6495ED",cornsilk:"#FFF8DC",crimson:"#DC143C",cyan:"#00FFFF",darkblue:"#00008B",darkcyan:"#008B8B",darkgoldenrod:"#B8860B",darkgray:"#A9A9A9",darkgrey:"#A9A9A9",darkgreen:"#006400",darkkhaki:"#BDB76B",darkmagenta:"#8B008B",darkolivegreen:"#556B2F",darkorange:"#FF8C00",darkorchid:"#9932CC",darkred:"#8B0000",darksalmon:"#E9967A",darkseagreen:"#8FBC8F",darkslateblue:"#483D8B",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",darkturquoise:"#00CED1",darkviolet:"#9400D3",deeppink:"#FF1493",deepskyblue:"#00BFFF",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1E90FF",firebrick:"#B22222",floralwhite:"#FFFAF0",forestgreen:"#228B22",fuchsia:"#FF00FF",gainsboro:"#DCDCDC",ghostwhite:"#F8F8FF",gold:"#FFD700",goldenrod:"#DAA520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#ADFF2F",honeydew:"#F0FFF0",hotpink:"#FF69B4",indianred:"#CD5C5C",indigo:"#4B0082",ivory:"#FFFFF0",khaki:"#F0E68C",lavender:"#E6E6FA",lavenderblush:"#FFF0F5",lawngreen:"#7CFC00",lemonchiffon:"#FFFACD",lightblue:"#ADD8E6",lightcoral:"#F08080",lightcyan:"#E0FFFF",lightgoldenrodyellow:"#FAFAD2",lightgray:"#D3D3D3",lightgrey:"#D3D3D3",lightgreen:"#90EE90",lightpink:"#FFB6C1",lightsalmon:"#FFA07A",lightseagreen:"#20B2AA",lightskyblue:"#87CEFA",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#B0C4DE",lightyellow:"#FFFFE0",lime:"#00FF00",limegreen:"#32CD32",linen:"#FAF0E6",magenta:"#FF00FF",maroon:"#800000",mediumaquamarine:"#66CDAA",mediumblue:"#0000CD",mediumorchid:"#BA55D3",mediumpurple:"#9370D8",mediumseagreen:"#3CB371",mediumslateblue:"#7B68EE",mediumspringgreen:"#00FA9A",mediumturquoise:"#48D1CC",mediumvioletred:"#C71585",midnightblue:"#191970",mintcream:"#F5FFFA",mistyrose:"#FFE4E1",moccasin:"#FFE4B5",navajowhite:"#FFDEAD",navy:"#000080",oldlace:"#FDF5E6",olive:"#808000",olivedrab:"#6B8E23",orange:"#FFA500",orangered:"#FF4500",orchid:"#DA70D6",palegoldenrod:"#EEE8AA",palegreen:"#98FB98",paleturquoise:"#AFEEEE",palevioletred:"#D87093",papayawhip:"#FFEFD5",peachpuff:"#FFDAB9",peru:"#CD853F",pink:"#FFC0CB",plum:"#DDA0DD",powderblue:"#B0E0E6",purple:"#800080",rebeccapurple:"#663399",red:"#FF0000",rosybrown:"#BC8F8F",royalblue:"#4169E1",saddlebrown:"#8B4513",salmon:"#FA8072",sandybrown:"#F4A460",seagreen:"#2E8B57",seashell:"#FFF5EE",sienna:"#A0522D",silver:"#C0C0C0",skyblue:"#87CEEB",slateblue:"#6A5ACD",slategray:"#708090",slategrey:"#708090",snow:"#FFFAFA",springgreen:"#00FF7F",steelblue:"#4682B4",tan:"#D2B48C",teal:"#008080",thistle:"#D8BFD8",tomato:"#FF6347",turquoise:"#40E0D0",violet:"#EE82EE",wheat:"#F5DEB3",white:"#FFFFFF",whitesmoke:"#F5F5F5",yellow:"#FFFF00",yellowgreen:"#9ACD32"};var logBadArg=function(value,name){console.error("bad '"+name+"' argument: "+value)};var rgbRegExp=/^rgb\(\d{1,3},\d{1,3},\d{1,3}\)$/,hexRegExp=/^#(?:[A-Fa-f\d]{3}|[A-Fa-f\d]{6})$/;var isAColorCode=function(color){return rgbRegExp.test(color)||hexRegExp.test(color)};var checkColorValue=function(color){var status;if(typeof color!=="string"){status=false}else if(isAColorCode(color)===true){status=true;color=color.trim()}else{var tmpMatch=NamedColors[color];if(tmpMatch){status=true;color=tmpMatch}else{status=false}}return{status:status,value:color}};return function(p,from,to){if(typeof p!=="number"||p<-1||p>1){logBadArg(p,"percent");return null}var result=checkColorValue(from);if(result.status!==true){logBadArg(from,"from");return null}else{from=result.value}if(typeof to!=="undefined"){result=checkColorValue(to);if(result.status!==true){logBadArg(to,"to");return null}else{to=result.value}}if(!this.sbcRip)this.sbcRip=function(d){var l=d.length,RGB=new Object;if(l>9){d=d.split(",");if(d.length<3||d.length>4)return null;RGB[0]=i(d[0].slice(4)),RGB[1]=i(d[1]),RGB[2]=i(d[2]),RGB[3]=d[3]?parseFloat(d[3]):-1}else{switch(l){case 8:case 6:case 3:case 2:case 1:return null}if(l<6)d="#"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(l>4?d[4]+""+d[4]:"");d=i(d.slice(1),16),RGB[0]=d>>16&255,RGB[1]=d>>8&255,RGB[2]=d&255,RGB[3]=l==9||l==5?r((d>>24&255)/255*1e4)/1e4:-1}return RGB};var i=parseInt,r=Math.round,h=from.length>9,h=typeof to=="string"?to.length>9?true:to=="c"?!h:false:h,b=p<0,p=b?p*-1:p,to=to&&to!="c"?to:b?"#000000":"#FFFFFF",f=sbcRip(from),t=sbcRip(to);if(!f||!t)return null;if(h)return"rgb("+r((t[0]-f[0])*p+f[0])+","+r((t[1]-f[1])*p+f[1])+","+r((t[2]-f[2])*p+f[2])+(f[3]<0&&t[3]<0?")":","+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*1e4)/1e4:t[3]<0?f[3]:t[3])+")");else return"#"+(4294967296+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*255):t[3]>-1?r(t[3]*255):f[3]>-1?r(f[3]*255):255)*16777216+r((t[0]-f[0])*p+f[0])*65536+r((t[1]-f[1])*p+f[1])*256+r((t[2]-f[2])*p+f[2])).toString(16).slice(f[3]>-1||t[3]>-1?1:3)}}()}if(typeof sjcl==="undefined"){"use strict";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return"CORRUPT: "+this.message};this.message=a},invalid:function(a){this.toString=function(){return"INVALID: "+this.message};this.message=a},bug:function(a){this.toString=function(){return"BUG: "+this.message};this.message=a},notReady:function(a){this.toString=function(){return"NOT READY: "+this.message};this.message=a}}};sjcl.cipher.aes=function(a){this.s[0][0][0]||this.O();var b,c,d,e,f=this.s[0][4],g=this.s[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid("invalid aes key size");this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=f[c>>>24]<<24^f[c>>16&255]<<16^f[c>>8&255]<<8^f[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:g[0][f[c>>>24]]^g[1][f[c>>16&255]]^g[2][f[c>>8&255]]^g[3][f[c&255]]};sjcl.cipher.aes.prototype={encrypt:function(a){return t(this,a,0)},decrypt:function(a){return t(this,a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],O:function(){var a=this.s[0],b=this.s[1],c=a[4],d=b[4],e,f,g,h=[],k=[],l,n,m,p;for(e=0;256>e;e++)k[(h[e]=e<<1^283*(e>>7))^e]=e;for(f=g=0;!c[f];f^=l||1,g=k[g]||1)for(m=g^g<<1^g<<2^g<<3^g<<4,m=m>>8^m&255^99,c[f]=m,d[m]=f,n=h[e=h[l=h[f]]],p=16843009*n^65537*e^257*l^16843008*f,n=257*h[m]^16843008*m,e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b[e][m]=p=p<<24^p>>>8;for(e=0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};function t(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid("invalid aes block size");var d=a.b[c],e=b[0]^d[0],f=b[c?3:1]^d[1],g=b[2]^d[2];b=b[c?1:3]^d[3];var h,k,l,n=d.length/4-2,m,p=4,r=[0,0,0,0];h=a.s[c];a=h[0];var q=h[1],v=h[2],w=h[3],x=h[4];for(m=0;m<n;m++)h=a[e>>>24]^q[f>>16&255]^v[g>>8&255]^w[b&255]^d[p],k=a[f>>>24]^q[g>>16&255]^v[b>>8&255]^w[e&255]^d[p+1],l=a[g>>>24]^q[b>>16&255]^v[e>>8&255]^w[f&255]^d[p+2],b=a[b>>>24]^q[e>>16&255]^v[f>>8&255]^w[g&255]^d[p+3],p+=4,e=h,f=k,g=l;for(m=0;4>m;m++)r[c?3&-m:m]=x[e>>>24]<<24^x[f>>16&255]<<16^x[g>>8&255]<<8^x[b&255]^d[p++],h=e,e=f,f=g,g=b,b=h;return r}sjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.$(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.$(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===b?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+1099511627776*a},getPartial:function(a){return Math.round(a/1099511627776)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===c},$:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},i:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,c;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&65280|(c&65280)<<8|c<<24;return a}};sjcl.codec.utf8String={fromBits:function(a){var b="",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};sjcl.codec.hex={fromBits:function(a){var b="",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\s|0x/g,"");d=a.length;a=a+"00000000";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};sjcl.codec.base32={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",X:"0123456789ABCDEFGHIJKLMNOPQRSTUV",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,c){var d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f="",g=0,h=sjcl.codec.base32.B,k=0,l=sjcl.bitArray.bitLength(a);c&&(h=sjcl.codec.base32.X);for(c=0;f.length*d<l;)f+=h.charAt((k^a[c]>>>g)>>>e),g<d?(k=a[c]<<d-g,g+=e,c++):(k<<=d,g-=d);for(;f.length&7&&!b;)f+="=";return f},toBits:function(a,b){a=a.replace(/\s|=/g,"").toUpperCase();var c=sjcl.codec.base32.BITS,d=sjcl.codec.base32.BASE,e=sjcl.codec.base32.REMAINING,f=[],g,h=0,k=sjcl.codec.base32.B,l=0,n,m="base32";b&&(k=sjcl.codec.base32.X,m="base32hex");for(g=0;g<a.length;g++){n=k.indexOf(a.charAt(g));if(0>n){if(!b)try{return sjcl.codec.base32hex.toBits(a)}catch(p){}throw new sjcl.exception.invalid("this isn't "+m+"!")}h>e?(h-=e,f.push(l^n>>>h),l=n<<c-h):(h+=d,l^=n<<c-h)}h&56&&f.push(sjcl.bitArray.partial(h&56,l,1));return f}};sjcl.codec.base32hex={fromBits:function(a,b){return sjcl.codec.base32.fromBits(a,b,1)},toBits:function(a){return sjcl.codec.base32.toBits(a,1)}};sjcl.codec.base64={B:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fromBits:function(a,b,c){var d="",e=0,f=sjcl.codec.base64.B,g=0,h=sjcl.bitArray.bitLength(a);c&&(f=f.substr(0,62)+"-_");for(c=0;6*d.length<h;)d+=f.charAt((g^a[c]>>>e)>>>26),6>e?(g=a[c]<<6-e,e+=26,c++):(g<<=6,e-=6);for(;d.length&3&&!b;)d+="=";return d},toBits:function(a,b){a=a.replace(/\s|=/g,"");var c=[],d,e=0,f=sjcl.codec.base64.B,g=0,h;b&&(f=f.substr(0,62)+"-_");for(d=0;d<a.length;d++){h=f.indexOf(a.charAt(d));if(0>h)throw new sjcl.exception.invalid("this isn't base64!");26<e?(e-=26,c.push(g^h>>>e),g=h<<32-e):(e+=6,g^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,g,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.b[0]||this.O();a?(this.F=a.F.slice(0),this.A=a.A.slice(0),this.l=a.l):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.F=this.Y.slice(0);this.A=[];this.l=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.A=sjcl.bitArray.concat(this.A,a);b=this.l;a=this.l=b+sjcl.bitArray.bitLength(a);if(9007199254740991<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=512+b-(512+b&511);b<=a;b+=512)u(this,d.subarray(16*e,16*(e+1))),e+=1;c.splice(0,16*e)}else for(b=512+b-(512+b&511);b<=a;b+=512)u(this,c.splice(0,16));return this},finalize:function(){var a,b=this.A,c=this.F,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.l/4294967296));for(b.push(this.l|0);b.length;)u(this,b.splice(0,16));this.reset();return c},Y:[],b:[],O:function(){function a(a){return 4294967296*(a-Math.floor(a))|0}for(var b=0,c=2,d,e;64>b;c++){e=!0;for(d=2;d*d<=c;d++)if(0===c%d){e=!1;break}e&&(8>b&&(this.Y[b]=a(Math.pow(c,.5))),this.b[b]=a(Math.pow(c,1/3)),b++)}}};function u(a,b){var c,d,e,f=a.F,g=a.b,h=f[0],k=f[1],l=f[2],n=f[3],m=f[4],p=f[5],r=f[6],q=f[7];for(c=0;64>c;c++)16>c?d=b[c]:(d=b[c+1&15],e=b[c+14&15],d=b[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+b[c&15]+b[c+9&15]|0),d=d+q+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(r^m&(p^r))+g[c],q=r,r=p,p=m,m=n+d|0,n=l,l=k,k=h,h=d+(k&l^n&(k^l))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+h|0;f[1]=f[1]+k|0;f[2]=f[2]+l|0;f[3]=f[3]+n|0;f[4]=f[4]+m|0;f[5]=f[5]+p|0;f[6]=f[6]+r|0;f[7]=f[7]+q|0}sjcl.mode.ccm={name:"ccm",G:[],listenProgress:function(a){sjcl.mode.ccm.G.push(a)},unListenProgress:function(a){a=sjcl.mode.ccm.G.indexOf(a);-1<a&&sjcl.mode.ccm.G.splice(a,1)},fa:function(a){var b=sjcl.mode.ccm.G.slice(),c;for(c=0;c<b.length;c+=1)b[c](a)},encrypt:function(a,b,c,d,e){var f,g=b.slice(0),h=sjcl.bitArray,k=h.bitLength(c)/8,l=h.bitLength(g)/8;e=e||64;d=d||[];if(7>k)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(f=2;4>f&&l>>>8*f;f++);f<15-k&&(f=15-k);c=h.clamp(c,8*(15-f));b=sjcl.mode.ccm.V(a,b,c,d,e,f);g=sjcl.mode.ccm.C(a,g,c,b,e,f);return h.concat(g.data,g.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var f=sjcl.bitArray,g=f.bitLength(c)/8,h=f.bitLength(b),k=f.clamp(b,h-e),l=f.bitSlice(b,h-e),h=(h-e)/8;if(7>g)throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes");for(b=2;4>b&&h>>>8*b;b++);b<15-g&&(b=15-g);c=f.clamp(c,8*(15-b));k=sjcl.mode.ccm.C(a,k,c,l,e,b);a=sjcl.mode.ccm.V(a,k.data,c,d,e,b);if(!f.equal(k.tag,a))throw new sjcl.exception.corrupt("ccm: tag doesn't match");return k.data},na:function(a,b,c,d,e,f){var g=[],h=sjcl.bitArray,k=h.i;d=[h.partial(8,(b.length?64:0)|d-2<<2|f-1)];d=h.concat(d,c);d[3]|=e;d=a.encrypt(d);if(b.length)for(c=h.bitLength(b)/8,65279>=c?g=[h.partial(16,c)]:4294967295>=c&&(g=h.concat([h.partial(16,65534)],[c])),g=h.concat(g,b),b=0;b<g.length;b+=4)d=a.encrypt(k(d,g.slice(b,b+4).concat([0,0,0])));return d},V:function(a,b,c,d,e,f){var g=sjcl.bitArray,h=g.i;e/=8;if(e%2||4>e||16<e)throw new sjcl.exception.invalid("ccm: invalid tag length");if(4294967295<d.length||4294967295<b.length)throw new sjcl.exception.bug("ccm: can't deal with 4GiB or more data");c=sjcl.mode.ccm.na(a,d,c,e,g.bitLength(b)/8,f);for(d=0;d<b.length;d+=4)c=a.encrypt(h(c,b.slice(d,d+4).concat([0,0,0])));return g.clamp(c,8*e)},C:function(a,b,c,d,e,f){var g,h=sjcl.bitArray;g=h.i;var k=b.length,l=h.bitLength(b),n=k/50,m=n;c=h.concat([h.partial(8,f-1)],c).concat([0,0,0]).slice(0,4);d=h.bitSlice(g(d,a.encrypt(c)),0,e);if(!k)return{tag:d,data:[]};for(g=0;g<k;g+=4)g>n&&(sjcl.mode.ccm.fa(g/k),n+=m),c[3]++,e=a.encrypt(c),b[g]^=e[0],b[g+1]^=e[1],b[g+2]^=e[2],b[g+3]^=e[3];return{tag:d,data:h.clamp(b,l)}}};sjcl.mode.ocb2={name:"ocb2",encrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");var g,h=sjcl.mode.ocb2.S,k=sjcl.bitArray,l=k.i,n=[0,0,0,0];c=h(a.encrypt(c));var m,p=[];d=d||[];e=e||64;for(g=0;g+4<b.length;g+=4)m=b.slice(g,g+4),n=l(n,m),p=p.concat(l(c,a.encrypt(l(c,m)))),c=h(c);m=b.slice(g);b=k.bitLength(m);g=a.encrypt(l(c,[0,0,0,b]));m=k.clamp(l(m.concat([0,0,0]),g),b);n=l(n,l(m.concat([0,0,0]),g));n=a.encrypt(l(n,l(c,h(c))));d.length&&(n=l(n,f?d:sjcl.mode.ocb2.pmac(a,d)));return p.concat(k.concat(m,k.clamp(n,e)))},decrypt:function(a,b,c,d,e,f){if(128!==sjcl.bitArray.bitLength(c))throw new sjcl.exception.invalid("ocb iv must be 128 bits");e=e||64;var g=sjcl.mode.ocb2.S,h=sjcl.bitArray,k=h.i,l=[0,0,0,0],n=g(a.encrypt(c)),m,p,r=sjcl.bitArray.bitLength(b)-e,q=[];d=d||[];for(c=0;c+4<r/32;c+=4)m=k(n,a.decrypt(k(n,b.slice(c,c+4)))),l=k(l,m),q=q.concat(m),n=g(n);p=r-32*c;m=a.encrypt(k(n,[0,0,0,p]));m=k(m,h.clamp(b.slice(c),p).concat([0,0,0]));l=k(l,m);l=a.encrypt(k(l,k(n,g(n))));d.length&&(l=k(l,f?d:sjcl.mode.ocb2.pmac(a,d)));if(!h.equal(h.clamp(l,e),h.bitSlice(b,r)))throw new sjcl.exception.corrupt("ocb: tag doesn't match");return q.concat(h.clamp(m,p))},pmac:function(a,b){var c,d=sjcl.mode.ocb2.S,e=sjcl.bitArray,f=e.i,g=[0,0,0,0],h=a.encrypt([0,0,0,0]),h=f(h,d(d(h)));for(c=0;c+4<b.length;c+=4)h=d(h),g=f(g,a.encrypt(f(h,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(h=f(h,d(h)),c=e.concat(c,[-2147483648,0,0,0]));g=f(g,c);return a.encrypt(f(d(f(h,d(h))),g))},S:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};sjcl.mode.gcm={name:"gcm",encrypt:function(a,b,c,d,e){var f=b.slice(0);b=sjcl.bitArray;d=d||[];a=sjcl.mode.gcm.C(!0,a,f,d,c,e||128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var f=b.slice(0),g=sjcl.bitArray,h=g.bitLength(f);e=e||128;d=d||[];e<=h?(b=g.bitSlice(f,h-e),f=g.bitSlice(f,0,h-e)):(b=f,f=[]);a=sjcl.mode.gcm.C(!1,a,f,d,c,e);if(!g.equal(a.tag,b))throw new sjcl.exception.corrupt("gcm: tag doesn't match");return a.data},ka:function(a,b){var c,d,e,f,g,h=sjcl.bitArray.i;e=[0,0,0,0];f=b.slice(0);for(c=0;128>c;c++){(d=0!==(a[Math.floor(c/32)]&1<<31-c%32))&&(e=h(e,f));g=0!==(f[3]&1);for(d=3;0<d;d--)f[d]=f[d]>>>1|(f[d-1]&1)<<31;f[0]>>>=1;g&&(f[0]^=-520093696)}return e},j:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=4294967295&c[d],b[1]^=4294967295&c[d+1],b[2]^=4294967295&c[d+2],b[3]^=4294967295&c[d+3],b=sjcl.mode.gcm.ka(b,a);return b},C:function(a,b,c,d,e,f){var g,h,k,l,n,m,p,r,q=sjcl.bitArray;m=c.length;p=q.bitLength(c);r=q.bitLength(d);h=q.bitLength(e);g=b.encrypt([0,0,0,0]);96===h?(e=e.slice(0),e=q.concat(e,[1])):(e=sjcl.mode.gcm.j(g,[0,0,0,0],e),e=sjcl.mode.gcm.j(g,e,[0,0,Math.floor(h/4294967296),h&4294967295]));h=sjcl.mode.gcm.j(g,[0,0,0,0],d);n=e.slice(0);d=h.slice(0);a||(d=sjcl.mode.gcm.j(g,h,c));for(l=0;l<m;l+=4)n[3]++,k=b.encrypt(n),c[l]^=k[0],c[l+1]^=k[1],c[l+2]^=k[2],c[l+3]^=k[3];c=q.clamp(c,p);a&&(d=sjcl.mode.gcm.j(g,h,c));a=[Math.floor(r/4294967296),r&4294967295,Math.floor(p/4294967296),p&4294967295];d=sjcl.mode.gcm.j(g,d,a);k=b.encrypt(e);d[0]^=k[0];d[1]^=k[1];d[2]^=k[2];d[3]^=k[3];return{tag:q.bitSlice(d,0,f),data:c}}};sjcl.misc.hmac=function(a,b){this.W=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.w=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.w[0].update(c[0]);this.w[1].update(c[1]);this.R=new b(this.w[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.aa)throw new sjcl.exception.invalid("encrypt on already updated hmac called!");this.update(a);return this.digest(a)};sjcl.misc.hmac.prototype.reset=function(){this.R=new this.W(this.w[0]);this.aa=!1};sjcl.misc.hmac.prototype.update=function(a){this.aa=!0;this.R.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.R.finalize(),a=new this.W(this.w[1]).update(a).finalize();this.reset();return a};sjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1e4;if(0>d||0>c)throw new sjcl.exception.invalid("invalid params to pbkdf2");"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var f,g,h,k,l=[],n=sjcl.bitArray;for(k=1;32*l.length<(d||1);k++){e=f=a.encrypt(n.concat(b,[k]));for(g=1;g<c;g++)for(f=a.encrypt(f),h=0;h<f.length;h++)e[h]^=f[h];l=l.concat(e)}d&&(l=n.clamp(l,d));return l};sjcl.prng=function(a){this.c=[new sjcl.hash.sha256];this.m=[0];this.P=0;this.H={};this.N=0;this.U={};this.Z=this.f=this.o=this.ha=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.L=void 0;this.M=a;this.D=!1;this.K={progress:{},seeded:{}};this.u=this.ga=0;this.I=1;this.J=2;this.ca=65536;this.T=[0,48,64,96,128,192,256,384,512,768,1024];this.da=3e4;this.ba=80};sjcl.prng.prototype={randomWords:function(a,b){var c=[],d;d=this.isReady(b);var e;if(d===this.u)throw new sjcl.exception.notReady("generator isn't seeded");if(d&this.J){d=!(d&this.I);e=[];var f=0,g;this.Z=e[0]=(new Date).valueOf()+this.da;for(g=0;16>g;g++)e.push(4294967296*Math.random()|0);for(g=0;g<this.c.length&&(e=e.concat(this.c[g].finalize()),f+=this.m[g],this.m[g]=0,d||!(this.P&1<<g));g++);this.P>=1<<this.c.length&&(this.c.push(new sjcl.hash.sha256),this.m.push(0));this.f-=f;f>this.o&&(this.o=f);this.P++;this.b=sjcl.hash.sha256.hash(this.b.concat(e));this.L=new sjcl.cipher.aes(this.b);for(d=0;4>d&&(this.h[d]=this.h[d]+1|0,!this.h[d]);d++);}for(d=0;d<a;d+=4)0===(d+1)%this.ca&&y(this),e=z(this),c.push(e[0],e[1],e[2],e[3]);y(this);return c.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&"Setting paranoia=0 will ruin your security; use it only for testing"!==b)throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing");this.M=a},addEntropy:function(a,b,c){c=c||"user";var d,e,f=(new Date).valueOf(),g=this.H[c],h=this.isReady(),k=0;d=this.U[c];void 0===d&&(d=this.U[c]=this.ha++);void 0===g&&(g=this.H[c]=0);this.H[c]=(this.H[c]+1)%this.c.length;switch(typeof a){case"number":void 0===b&&(b=1);this.c[g].update([d,this.N++,1,b,f,1,a|0]);break;case"object":c=Object.prototype.toString.call(a);if("[object Uint32Array]"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else for("[object Array]"!==c&&(k=1),c=0;c<a.length&&!k;c++)"number"!==typeof a[c]&&(k=1);if(!k){if(void 0===b)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,e=e>>>1;this.c[g].update([d,this.N++,2,b,f,a.length].concat(a))}break;case"string":void 0===b&&(b=a.length);this.c[g].update([d,this.N++,3,b,f,a.length]);this.c[g].update(a);break;default:k=1}if(k)throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string");this.m[g]+=b;this.f+=b;h===this.u&&(this.isReady()!==this.u&&A("seeded",Math.max(this.o,this.f)),A("progress",this.getProgress()))},isReady:function(a){a=this.T[void 0!==a?a:this.M];return this.o&&this.o>=a?this.m[0]>this.ba&&(new Date).valueOf()>this.Z?this.J|this.I:this.I:this.f>=a?this.J|this.u:this.u},getProgress:function(a){a=this.T[a?a:this.M];return this.o>=a?1:this.f>a?1:this.f/a},startCollectors:function(){if(!this.D){this.a={loadTimeCollector:B(this,this.ma),mouseCollector:B(this,this.oa),keyboardCollector:B(this,this.la),accelerometerCollector:B(this,this.ea),touchCollector:B(this,this.qa)};if(window.addEventListener)window.addEventListener("load",this.a.loadTimeCollector,!1),window.addEventListener("mousemove",this.a.mouseCollector,!1),window.addEventListener("keypress",this.a.keyboardCollector,!1),window.addEventListener("devicemotion",this.a.accelerometerCollector,!1),window.addEventListener("touchmove",this.a.touchCollector,!1);else if(document.attachEvent)document.attachEvent("onload",this.a.loadTimeCollector),document.attachEvent("onmousemove",this.a.mouseCollector),document.attachEvent("keypress",this.a.keyboardCollector);else throw new sjcl.exception.bug("can't attach event");this.D=!0}},stopCollectors:function(){this.D&&(window.removeEventListener?(window.removeEventListener("load",this.a.loadTimeCollector,!1),window.removeEventListener("mousemove",this.a.mouseCollector,!1),window.removeEventListener("keypress",this.a.keyboardCollector,!1),window.removeEventListener("devicemotion",this.a.accelerometerCollector,!1),window.removeEventListener("touchmove",this.a.touchCollector,!1)):document.detachEvent&&(document.detachEvent("onload",this.a.loadTimeCollector),document.detachEvent("onmousemove",this.a.mouseCollector),document.detachEvent("keypress",this.a.keyboardCollector)),this.D=!1)},addEventListener:function(a,b){this.K[a][this.ga++]=b},removeEventListener:function(a,b){var c,d,e=this.K[a],f=[];for(d in e)e.hasOwnProperty(d)&&e[d]===b&&f.push(d);for(c=0;c<f.length;c++)d=f[c],delete e[d]},la:function(){C(this,1)},oa:function(a){var b,c;try{b=a.x||a.clientX||a.offsetX||0,c=a.y||a.clientY||a.offsetY||0}catch(d){c=b=0}0!=b&&0!=c&&this.addEntropy([b,c],2,"mouse");C(this,0)},qa:function(a){a=a.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,"touch");C(this,0)},ma:function(){C(this,2)},ea:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;"number"===typeof b&&this.addEntropy(b,1,"accelerometer")}a&&this.addEntropy(a,2,"accelerometer");C(this,0)}};function A(a,b){var c,d=sjcl.random.K[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}function C(a,b){"undefined"!==typeof window&&window.performance&&"function"===typeof window.performance.now?a.addEntropy(window.performance.now(),b,"loadtime"):a.addEntropy((new Date).valueOf(),b,"loadtime")}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}function z(a){for(var b=0;4>b&&(a.h[b]=a.h[b]+1|0,!a.h[b]);b++);return a.L.encrypt(a.h)}function B(a,b){return function(){b.apply(a,arguments)}}sjcl.random=new sjcl.prng(6);a:try{var D,E,F,G;if(G="undefined"!==typeof module&&module.exports){var H;try{H=require("crypto")}catch(a){H=null}G=E=H}if(G&&E.randomBytes)D=E.randomBytes(128),D=new Uint32Array(new Uint8Array(D).buffer),sjcl.random.addEntropy(D,1024,"crypto['randomBytes']");else if("undefined"!==typeof window&&"undefined"!==typeof Uint32Array){F=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(F);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(F);else break a;sjcl.random.addEntropy(F,1024,"crypto['getRandomValues']")}}catch(a){"undefined"!==typeof window&&window.console&&(console.log("There was an error collecting entropy from the browser:"),console.log(a))}sjcl.json={defaults:{v:1,iter:1e4,ks:128,ts:64,mode:"ccm",adata:"",cipher:"aes"},ja:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json,f=e.g({iv:sjcl.random.randomWords(4,0)},e.defaults),g;e.g(f,c);c=f.adata;"string"===typeof f.salt&&(f.salt=sjcl.codec.base64.toBits(f.salt));"string"===typeof f.iv&&(f.iv=sjcl.codec.base64.toBits(f.iv));if(!sjcl.mode[f.mode]||!sjcl.cipher[f.cipher]||"string"===typeof a&&100>=f.iter||64!==f.ts&&96!==f.ts&&128!==f.ts||128!==f.ks&&192!==f.ks&&256!==f.ks||2>f.iv.length||4<f.iv.length)throw new sjcl.exception.invalid("json encrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,f),a=g.key.slice(0,f.ks/32),f.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.publicKey&&(g=a.kem(),f.kemtag=g.tag,a=g.key.slice(0,f.ks/32));"string"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));"string"===typeof c&&(f.adata=c=sjcl.codec.utf8String.toBits(c));g=new sjcl.cipher[f.cipher](a);e.g(d,f);d.key=a;f.ct="ccm"===f.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.encrypt(g,b,f.iv,c,f.ts):sjcl.mode[f.mode].encrypt(g,b,f.iv,c,f.ts);return f},encrypt:function(a,b,c,d){var e=sjcl.json,f=e.ja.apply(e,arguments);return e.encode(f)},ia:function(a,b,c,d){c=c||{};d=d||{};var e=sjcl.json;b=e.g(e.g(e.g({},e.defaults),b),c,!0);var f,g;f=b.adata;"string"===typeof b.salt&&(b.salt=sjcl.codec.base64.toBits(b.salt));"string"===typeof b.iv&&(b.iv=sjcl.codec.base64.toBits(b.iv));if(!sjcl.mode[b.mode]||!sjcl.cipher[b.cipher]||"string"===typeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&256!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new sjcl.exception.invalid("json decrypt: invalid parameters");"string"===typeof a?(g=sjcl.misc.cachedPbkdf2(a,b),a=g.key.slice(0,b.ks/32),b.salt=g.salt):sjcl.ecc&&a instanceof sjcl.ecc.elGamal.secretKey&&(a=a.unkem(sjcl.codec.base64.toBits(b.kemtag)).slice(0,b.ks/32));"string"===typeof f&&(f=sjcl.codec.utf8String.toBits(f));g=new sjcl.cipher[b.cipher](a);f="ccm"===b.mode&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?sjcl.arrayBuffer.ccm.decrypt(g,b.ct,b.iv,b.tag,f,b.ts):sjcl.mode[b.mode].decrypt(g,b.ct,b.iv,f,b.ts);e.g(d,b);d.key=a;return 1===c.raw?f:sjcl.codec.utf8String.fromBits(f)},decrypt:function(a,b,c,d){var e=sjcl.json;return e.ia(a,e.decode(b),c,d)},encode:function(a){var b,c="{",d="";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(/^[a-z0-9]+$/i))throw new sjcl.exception.invalid("json encode: invalid property name");c+=d+'"'+b+'":';d=",";switch(typeof a[b]){case"number":case"boolean":c+=a[b];break;case"string":c+='"'+escape(a[b])+'"';break;case"object":c+='"'+sjcl.codec.base64.fromBits(a[b],0)+'"';break;default:throw new sjcl.exception.bug("json encode: unsupported type")}}return c+"}"},decode:function(a){a=a.replace(/\s/g,"");if(!a.match(/^\{.*\}$/))throw new sjcl.exception.invalid("json decode: this isn't json!");a=a.replace(/^\{|\}$/g,"").split(/,/);var b={},c,d;for(c=0;c<a.length;c++){if(!(d=a[c].match(/^\s*(?:(["']?)([a-z][a-z0-9]*)\1)\s*:\s*(?:(-?\d+)|"([a-z0-9+\/%*_.@=\-]*)"|(true|false))$/i)))throw new sjcl.exception.invalid("json decode: this isn't json!");null!=d[3]?b[d[2]]=parseInt(d[3],10):null!=d[4]?b[d[2]]=d[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(d[4]):unescape(d[4]):null!=d[5]&&(b[d[2]]="true"===d[5])}return b},g:function(a,b,c){void 0===a&&(a={});if(void 0===b)return a;for(var d in b)if(b.hasOwnProperty(d)){if(c&&void 0!==a[d]&&a[d]!==b[d])throw new sjcl.exception.invalid("required parameter overridden");a[d]=b[d]}return a},sa:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},ra:function(a,b){var c={},d;for(d=0;d<b.length;d++)void 0!==a[b[d]]&&(c[b[d]]=a[b[d]]);return c}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc.pa={};sjcl.misc.cachedPbkdf2=function(a,b){var c=sjcl.misc.pa,d;b=b||{};d=b.iter||1e3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):sjcl.random.randomWords(2,0)};c=void 0===b.salt?d.firstSalt:b.salt;d[c]=d[c]||sjcl.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};"undefined"!==typeof module&&module.exports&&(module.exports=sjcl);"function"===typeof define&&define([],function(){return sjcl})}if(typeof Hammer==="undefined"){!function(a,b,c,d){"use strict";function e(a,b,c){return setTimeout(j(a,c),b)}function f(a,b,c){return Array.isArray(a)?(g(a,c[b],c),!0):!1}function g(a,b,c){var e;if(a)if(a.forEach)a.forEach(b,c);else if(a.length!==d)for(e=0;e<a.length;)b.call(c,a[e],e,a),e++;else for(e in a)a.hasOwnProperty(e)&&b.call(c,a[e],e,a)}function h(b,c,d){var e="DEPRECATED METHOD: "+c+"\n"+d+" AT \n";return function(){var c=new Error("get-stack-trace"),d=c&&c.stack?c.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",f=a.console&&(a.console.warn||a.console.log);return f&&f.call(a.console,e,d),b.apply(this,arguments)}}function i(a,b,c){var d,e=b.prototype;d=a.prototype=Object.create(e),d.constructor=a,d._super=e,c&&la(d,c)}function j(a,b){return function(){return a.apply(b,arguments)}}function k(a,b){return typeof a==oa?a.apply(b?b[0]||d:d,b):a}function l(a,b){return a===d?b:a}function m(a,b,c){g(q(b),function(b){a.addEventListener(b,c,!1)})}function n(a,b,c){g(q(b),function(b){a.removeEventListener(b,c,!1)})}function o(a,b){for(;a;){if(a==b)return!0;a=a.parentNode}return!1}function p(a,b){return a.indexOf(b)>-1}function q(a){return a.trim().split(/\s+/g)}function r(a,b,c){if(a.indexOf&&!c)return a.indexOf(b);for(var d=0;d<a.length;){if(c&&a[d][c]==b||!c&&a[d]===b)return d;d++}return-1}function s(a){return Array.prototype.slice.call(a,0)}function t(a,b,c){for(var d=[],e=[],f=0;f<a.length;){var g=b?a[f][b]:a[f];r(e,g)<0&&d.push(a[f]),e[f]=g,f++}return c&&(d=b?d.sort(function(a,c){return a[b]>c[b]}):d.sort()),d}function u(a,b){for(var c,e,f=b[0].toUpperCase()+b.slice(1),g=0;g<ma.length;){if(c=ma[g],e=c?c+f:b,e in a)return e;g++}return d}function v(){return ua++}function w(b){var c=b.ownerDocument||b;return c.defaultView||c.parentWindow||a}function x(a,b){var c=this;this.manager=a,this.callback=b,this.element=a.element,this.target=a.options.inputTarget,this.domHandler=function(b){k(a.options.enable,[a])&&c.handler(b)},this.init()}function y(a){var b,c=a.options.inputClass;return new(b=c?c:xa?M:ya?P:wa?R:L)(a,z)}function z(a,b,c){var d=c.pointers.length,e=c.changedPointers.length,f=b&Ea&&d-e===0,g=b&(Ga|Ha)&&d-e===0;c.isFirst=!!f,c.isFinal=!!g,f&&(a.session={}),c.eventType=b,A(a,c),a.emit("hammer.input",c),a.recognize(c),a.session.prevInput=c}function A(a,b){var c=a.session,d=b.pointers,e=d.length;c.firstInput||(c.firstInput=D(b)),e>1&&!c.firstMultiple?c.firstMultiple=D(b):1===e&&(c.firstMultiple=!1);var f=c.firstInput,g=c.firstMultiple,h=g?g.center:f.center,i=b.center=E(d);b.timeStamp=ra(),b.deltaTime=b.timeStamp-f.timeStamp,b.angle=I(h,i),b.distance=H(h,i),B(c,b),b.offsetDirection=G(b.deltaX,b.deltaY);var j=F(b.deltaTime,b.deltaX,b.deltaY);b.overallVelocityX=j.x,b.overallVelocityY=j.y,b.overallVelocity=qa(j.x)>qa(j.y)?j.x:j.y,b.scale=g?K(g.pointers,d):1,b.rotation=g?J(g.pointers,d):0,b.maxPointers=c.prevInput?b.pointers.length>c.prevInput.maxPointers?b.pointers.length:c.prevInput.maxPointers:b.pointers.length,C(c,b);var k=a.element;o(b.srcEvent.target,k)&&(k=b.srcEvent.target),b.target=k}function B(a,b){var c=b.center,d=a.offsetDelta||{},e=a.prevDelta||{},f=a.prevInput||{};b.eventType!==Ea&&f.eventType!==Ga||(e=a.prevDelta={x:f.deltaX||0,y:f.deltaY||0},d=a.offsetDelta={x:c.x,y:c.y}),b.deltaX=e.x+(c.x-d.x),b.deltaY=e.y+(c.y-d.y)}function C(a,b){var c,e,f,g,h=a.lastInterval||b,i=b.timeStamp-h.timeStamp;if(b.eventType!=Ha&&(i>Da||h.velocity===d)){var j=b.deltaX-h.deltaX,k=b.deltaY-h.deltaY,l=F(i,j,k);e=l.x,f=l.y,c=qa(l.x)>qa(l.y)?l.x:l.y,g=G(j,k),a.lastInterval=b}else c=h.velocity,e=h.velocityX,f=h.velocityY,g=h.direction;b.velocity=c,b.velocityX=e,b.velocityY=f,b.direction=g}function D(a){for(var b=[],c=0;c<a.pointers.length;)b[c]={clientX:pa(a.pointers[c].clientX),clientY:pa(a.pointers[c].clientY)},c++;return{timeStamp:ra(),pointers:b,center:E(b),deltaX:a.deltaX,deltaY:a.deltaY}}function E(a){var b=a.length;if(1===b)return{x:pa(a[0].clientX),y:pa(a[0].clientY)};for(var c=0,d=0,e=0;b>e;)c+=a[e].clientX,d+=a[e].clientY,e++;return{x:pa(c/b),y:pa(d/b)}}function F(a,b,c){return{x:b/a||0,y:c/a||0}}function G(a,b){return a===b?Ia:qa(a)>=qa(b)?0>a?Ja:Ka:0>b?La:Ma}function H(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return Math.sqrt(d*d+e*e)}function I(a,b,c){c||(c=Qa);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return 180*Math.atan2(e,d)/Math.PI}function J(a,b){return I(b[1],b[0],Ra)+I(a[1],a[0],Ra)}function K(a,b){return H(b[0],b[1],Ra)/H(a[0],a[1],Ra)}function L(){this.evEl=Ta,this.evWin=Ua,this.pressed=!1,x.apply(this,arguments)}function M(){this.evEl=Xa,this.evWin=Ya,x.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function N(){this.evTarget=$a,this.evWin=_a,this.started=!1,x.apply(this,arguments)}function O(a,b){var c=s(a.touches),d=s(a.changedTouches);return b&(Ga|Ha)&&(c=t(c.concat(d),"identifier",!0)),[c,d]}function P(){this.evTarget=bb,this.targetIds={},x.apply(this,arguments)}function Q(a,b){var c=s(a.touches),d=this.targetIds;if(b&(Ea|Fa)&&1===c.length)return d[c[0].identifier]=!0,[c,c];var e,f,g=s(a.changedTouches),h=[],i=this.target;if(f=c.filter(function(a){return o(a.target,i)}),b===Ea)for(e=0;e<f.length;)d[f[e].identifier]=!0,e++;for(e=0;e<g.length;)d[g[e].identifier]&&h.push(g[e]),b&(Ga|Ha)&&delete d[g[e].identifier],e++;return h.length?[t(f.concat(h),"identifier",!0),h]:void 0}function R(){x.apply(this,arguments);var a=j(this.handler,this);this.touch=new P(this.manager,a),this.mouse=new L(this.manager,a),this.primaryTouch=null,this.lastTouches=[]}function S(a,b){a&Ea?(this.primaryTouch=b.changedPointers[0].identifier,T.call(this,b)):a&(Ga|Ha)&&T.call(this,b)}function T(a){var b=a.changedPointers[0];if(b.identifier===this.primaryTouch){var c={x:b.clientX,y:b.clientY};this.lastTouches.push(c);var d=this.lastTouches,e=function(){var a=d.indexOf(c);a>-1&&d.splice(a,1)};setTimeout(e,cb)}}function U(a){for(var b=a.srcEvent.clientX,c=a.srcEvent.clientY,d=0;d<this.lastTouches.length;d++){var e=this.lastTouches[d],f=Math.abs(b-e.x),g=Math.abs(c-e.y);if(db>=f&&db>=g)return!0}return!1}function V(a,b){this.manager=a,this.set(b)}function W(a){if(p(a,jb))return jb;var b=p(a,kb),c=p(a,lb);return b&&c?jb:b||c?b?kb:lb:p(a,ib)?ib:hb}function X(){if(!fb)return!1;var b={},c=a.CSS&&a.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach(function(d){b[d]=c?a.CSS.supports("touch-action",d):!0}),b}function Y(a){this.options=la({},this.defaults,a||{}),this.id=v(),this.manager=null,this.options.enable=l(this.options.enable,!0),this.state=nb,this.simultaneous={},this.requireFail=[]}function Z(a){return a&sb?"cancel":a&qb?"end":a&pb?"move":a&ob?"start":""}function $(a){return a==Ma?"down":a==La?"up":a==Ja?"left":a==Ka?"right":""}function _(a,b){var c=b.manager;return c?c.get(a):a}function aa(){Y.apply(this,arguments)}function ba(){aa.apply(this,arguments),this.pX=null,this.pY=null}function ca(){aa.apply(this,arguments)}function da(){Y.apply(this,arguments),this._timer=null,this._input=null}function ea(){aa.apply(this,arguments)}function fa(){aa.apply(this,arguments)}function ga(){Y.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ha(a,b){return b=b||{},b.recognizers=l(b.recognizers,ha.defaults.preset),new ia(a,b)}function ia(a,b){this.options=la({},ha.defaults,b||{}),this.options.inputTarget=this.options.inputTarget||a,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=a,this.input=y(this),this.touchAction=new V(this,this.options.touchAction),ja(this,!0),g(this.options.recognizers,function(a){var b=this.add(new a[0](a[1]));a[2]&&b.recognizeWith(a[2]),a[3]&&b.requireFailure(a[3])},this)}function ja(a,b){var c=a.element;if(c.style){var d;g(a.options.cssProps,function(e,f){d=u(c.style,f),b?(a.oldCssProps[d]=c.style[d],c.style[d]=e):c.style[d]=a.oldCssProps[d]||""}),b||(a.oldCssProps={})}}function ka(a,c){var d=b.createEvent("Event");d.initEvent(a,!0,!0),d.gesture=c,c.target.dispatchEvent(d)}var la,ma=["","webkit","Moz","MS","ms","o"],na=b.createElement("div"),oa="function",pa=Math.round,qa=Math.abs,ra=Date.now;la="function"!=typeof Object.assign?function(a){if(a===d||null===a)throw new TypeError("Cannot convert undefined or null to object");for(var b=Object(a),c=1;c<arguments.length;c++){var e=arguments[c];if(e!==d&&null!==e)for(var f in e)e.hasOwnProperty(f)&&(b[f]=e[f])}return b}:Object.assign;var sa=h(function(a,b,c){for(var e=Object.keys(b),f=0;f<e.length;)(!c||c&&a[e[f]]===d)&&(a[e[f]]=b[e[f]]),f++;return a},"extend","Use `assign`."),ta=h(function(a,b){return sa(a,b,!0)},"merge","Use `assign`."),ua=1,va=/mobile|tablet|ip(ad|hone|od)|android/i,wa="ontouchstart"in a,xa=u(a,"PointerEvent")!==d,ya=wa&&va.test(navigator.userAgent),za="touch",Aa="pen",Ba="mouse",Ca="kinect",Da=25,Ea=1,Fa=2,Ga=4,Ha=8,Ia=1,Ja=2,Ka=4,La=8,Ma=16,Na=Ja|Ka,Oa=La|Ma,Pa=Na|Oa,Qa=["x","y"],Ra=["clientX","clientY"];x.prototype={handler:function(){},init:function(){this.evEl&&m(this.element,this.evEl,this.domHandler),this.evTarget&&m(this.target,this.evTarget,this.domHandler),this.evWin&&m(w(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&n(this.element,this.evEl,this.domHandler),this.evTarget&&n(this.target,this.evTarget,this.domHandler),this.evWin&&n(w(this.element),this.evWin,this.domHandler)}};var Sa={mousedown:Ea,mousemove:Fa,mouseup:Ga},Ta="mousedown",Ua="mousemove mouseup";i(L,x,{handler:function(a){var b=Sa[a.type];b&Ea&&0===a.button&&(this.pressed=!0),b&Fa&&1!==a.which&&(b=Ga),this.pressed&&(b&Ga&&(this.pressed=!1),this.callback(this.manager,b,{pointers:[a],changedPointers:[a],pointerType:Ba,srcEvent:a}))}});var Va={pointerdown:Ea,pointermove:Fa,pointerup:Ga,pointercancel:Ha,pointerout:Ha},Wa={2:za,3:Aa,4:Ba,5:Ca},Xa="pointerdown",Ya="pointermove pointerup pointercancel";a.MSPointerEvent&&!a.PointerEvent&&(Xa="MSPointerDown",Ya="MSPointerMove MSPointerUp MSPointerCancel"),i(M,x,{handler:function(a){var b=this.store,c=!1,d=a.type.toLowerCase().replace("ms",""),e=Va[d],f=Wa[a.pointerType]||a.pointerType,g=f==za,h=r(b,a.pointerId,"pointerId");e&Ea&&(0===a.button||g)?0>h&&(b.push(a),h=b.length-1):e&(Ga|Ha)&&(c=!0),0>h||(b[h]=a,this.callback(this.manager,e,{pointers:b,changedPointers:[a],pointerType:f,srcEvent:a}),c&&b.splice(h,1))}});var Za={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},$a="touchstart",_a="touchstart touchmove touchend touchcancel";i(N,x,{handler:function(a){var b=Za[a.type];if(b===Ea&&(this.started=!0),this.started){var c=O.call(this,a,b);b&(Ga|Ha)&&c[0].length-c[1].length===0&&(this.started=!1),this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}}});var ab={touchstart:Ea,touchmove:Fa,touchend:Ga,touchcancel:Ha},bb="touchstart touchmove touchend touchcancel";i(P,x,{handler:function(a){var b=ab[a.type],c=Q.call(this,a,b);c&&this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:za,srcEvent:a})}});var cb=2500,db=25;i(R,x,{handler:function(a,b,c){var d=c.pointerType==za,e=c.pointerType==Ba;if(!(e&&c.sourceCapabilities&&c.sourceCapabilities.firesTouchEvents)){if(d)S.call(this,b,c);else if(e&&U.call(this,c))return;this.callback(a,b,c)}},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var eb=u(na.style,"touchAction"),fb=eb!==d,gb="compute",hb="auto",ib="manipulation",jb="none",kb="pan-x",lb="pan-y",mb=X();V.prototype={set:function(a){a==gb&&(a=this.compute()),fb&&this.manager.element.style&&mb[a]&&(this.manager.element.style[eb]=a),this.actions=a.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var a=[];return g(this.manager.recognizers,function(b){k(b.options.enable,[b])&&(a=a.concat(b.getTouchAction()))}),W(a.join(" "))},preventDefaults:function(a){var b=a.srcEvent,c=a.offsetDirection;if(this.manager.session.prevented)return void b.preventDefault();var d=this.actions,e=p(d,jb)&&!mb[jb],f=p(d,lb)&&!mb[lb],g=p(d,kb)&&!mb[kb];if(e){var h=1===a.pointers.length,i=a.distance<2,j=a.deltaTime<250;if(h&&i&&j)return}return g&&f?void 0:e||f&&c&Na||g&&c&Oa?this.preventSrc(b):void 0},preventSrc:function(a){this.manager.session.prevented=!0,a.preventDefault()}};var nb=1,ob=2,pb=4,qb=8,rb=qb,sb=16,tb=32;Y.prototype={defaults:{},set:function(a){return la(this.options,a),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(a){if(f(a,"recognizeWith",this))return this;var b=this.simultaneous;return a=_(a,this),b[a.id]||(b[a.id]=a,a.recognizeWith(this)),this},dropRecognizeWith:function(a){return f(a,"dropRecognizeWith",this)?this:(a=_(a,this),delete this.simultaneous[a.id],this)},requireFailure:function(a){if(f(a,"requireFailure",this))return this;var b=this.requireFail;return a=_(a,this),-1===r(b,a)&&(b.push(a),a.requireFailure(this)),this},dropRequireFailure:function(a){if(f(a,"dropRequireFailure",this))return this;a=_(a,this);var b=r(this.requireFail,a);return b>-1&&this.requireFail.splice(b,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(a){return!!this.simultaneous[a.id]},emit:function(a){function b(b){c.manager.emit(b,a)}var c=this,d=this.state;qb>d&&b(c.options.event+Z(d)),b(c.options.event),a.additionalEvent&&b(a.additionalEvent),d>=qb&&b(c.options.event+Z(d))},tryEmit:function(a){return this.canEmit()?this.emit(a):void(this.state=tb)},canEmit:function(){for(var a=0;a<this.requireFail.length;){if(!(this.requireFail[a].state&(tb|nb)))return!1;a++}return!0},recognize:function(a){var b=la({},a);return k(this.options.enable,[this,b])?(this.state&(rb|sb|tb)&&(this.state=nb),this.state=this.process(b),void(this.state&(ob|pb|qb|sb)&&this.tryEmit(b))):(this.reset(),void(this.state=tb))},process:function(a){},getTouchAction:function(){},reset:function(){}},i(aa,Y,{defaults:{pointers:1},attrTest:function(a){var b=this.options.pointers;return 0===b||a.pointers.length===b},process:function(a){var b=this.state,c=a.eventType,d=b&(ob|pb),e=this.attrTest(a);return d&&(c&Ha||!e)?b|sb:d||e?c&Ga?b|qb:b&ob?b|pb:ob:tb}}),i(ba,aa,{defaults:{event:"pan",threshold:10,pointers:1,direction:Pa},getTouchAction:function(){var a=this.options.direction,b=[];return a&Na&&b.push(lb),a&Oa&&b.push(kb),b},directionTest:function(a){var b=this.options,c=!0,d=a.distance,e=a.direction,f=a.deltaX,g=a.deltaY;return e&b.direction||(b.direction&Na?(e=0===f?Ia:0>f?Ja:Ka,c=f!=this.pX,d=Math.abs(a.deltaX)):(e=0===g?Ia:0>g?La:Ma,c=g!=this.pY,d=Math.abs(a.deltaY))),a.direction=e,c&&d>b.threshold&&e&b.direction},attrTest:function(a){return aa.prototype.attrTest.call(this,a)&&(this.state&ob||!(this.state&ob)&&this.directionTest(a))},emit:function(a){this.pX=a.deltaX,this.pY=a.deltaY;var b=$(a.direction);b&&(a.additionalEvent=this.options.event+b),this._super.emit.call(this,a)}}),i(ca,aa,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.scale-1)>this.options.threshold||this.state&ob)},emit:function(a){if(1!==a.scale){var b=a.scale<1?"in":"out";a.additionalEvent=this.options.event+b}this._super.emit.call(this,a)}}),i(da,Y,{defaults:{event:"press",pointers:1,time:251,threshold:9},getTouchAction:function(){return[hb]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime>b.time;if(this._input=a,!d||!c||a.eventType&(Ga|Ha)&&!f)this.reset();else if(a.eventType&Ea)this.reset(),this._timer=e(function(){this.state=rb,this.tryEmit()},b.time,this);else if(a.eventType&Ga)return rb;return tb},reset:function(){clearTimeout(this._timer)},emit:function(a){this.state===rb&&(a&&a.eventType&Ga?this.manager.emit(this.options.event+"up",a):(this._input.timeStamp=ra(),this.manager.emit(this.options.event,this._input)))}}),i(ea,aa,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[jb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.rotation)>this.options.threshold||this.state&ob)}}),i(fa,aa,{defaults:{event:"swipe",threshold:10,velocity:.3,direction:Na|Oa,pointers:1},getTouchAction:function(){return ba.prototype.getTouchAction.call(this)},attrTest:function(a){var b,c=this.options.direction;return c&(Na|Oa)?b=a.overallVelocity:c&Na?b=a.overallVelocityX:c&Oa&&(b=a.overallVelocityY),this._super.attrTest.call(this,a)&&c&a.offsetDirection&&a.distance>this.options.threshold&&a.maxPointers==this.options.pointers&&qa(b)>this.options.velocity&&a.eventType&Ga},emit:function(a){var b=$(a.offsetDirection);b&&this.manager.emit(this.options.event+b,a),this.manager.emit(this.options.event,a)}}),i(ga,Y,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return[ib]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime<b.time;if(this.reset(),a.eventType&Ea&&0===this.count)return this.failTimeout();if(d&&f&&c){if(a.eventType!=Ga)return this.failTimeout();var g=this.pTime?a.timeStamp-this.pTime<b.interval:!0,h=!this.pCenter||H(this.pCenter,a.center)<b.posThreshold;this.pTime=a.timeStamp,this.pCenter=a.center,h&&g?this.count+=1:this.count=1,this._input=a;var i=this.count%b.taps;if(0===i)return this.hasRequireFailures()?(this._timer=e(function(){this.state=rb,this.tryEmit()},b.interval,this),ob):rb}return tb},failTimeout:function(){return this._timer=e(function(){this.state=tb},this.options.interval,this),tb},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==rb&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ha.VERSION="2.0.7",ha.defaults={domEvents:!1,touchAction:gb,enable:!0,inputTarget:null,inputClass:null,preset:[[ea,{enable:!1}],[ca,{enable:!1},["rotate"]],[fa,{direction:Na}],[ba,{direction:Na},["swipe"]],[ga],[ga,{event:"doubletap",taps:2},["tap"]],[da]],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};var ub=1,vb=2;ia.prototype={set:function(a){return la(this.options,a),a.touchAction&&this.touchAction.update(),a.inputTarget&&(this.input.destroy(),this.input.target=a.inputTarget,this.input.init()),this},stop:function(a){this.session.stopped=a?vb:ub},recognize:function(a){var b=this.session;if(!b.stopped){this.touchAction.preventDefaults(a);var c,d=this.recognizers,e=b.curRecognizer;(!e||e&&e.state&rb)&&(e=b.curRecognizer=null);for(var f=0;f<d.length;)c=d[f],b.stopped===vb||e&&c!=e&&!c.canRecognizeWith(e)?c.reset():c.recognize(a),!e&&c.state&(ob|pb|qb)&&(e=b.curRecognizer=c),f++}},get:function(a){if(a instanceof Y)return a;for(var b=this.recognizers,c=0;c<b.length;c++)if(b[c].options.event==a)return b[c];return null},add:function(a){if(f(a,"add",this))return this;var b=this.get(a.options.event);return b&&this.remove(b),this.recognizers.push(a),a.manager=this,this.touchAction.update(),a},remove:function(a){if(f(a,"remove",this))return this;if(a=this.get(a)){var b=this.recognizers,c=r(b,a);-1!==c&&(b.splice(c,1),this.touchAction.update())}return this},on:function(a,b){if(a!==d&&b!==d){var c=this.handlers;return g(q(a),function(a){c[a]=c[a]||[],c[a].push(b)}),this}},off:function(a,b){if(a!==d){var c=this.handlers;return g(q(a),function(a){b?c[a]&&c[a].splice(r(c[a],b),1):delete c[a]}),this}},emit:function(a,b){this.options.domEvents&&ka(a,b);var c=this.handlers[a]&&this.handlers[a].slice();if(c&&c.length){b.type=a,b.preventDefault=function(){b.srcEvent.preventDefault()};for(var d=0;d<c.length;)c[d](b),d++}},destroy:function(){this.element&&ja(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},la(ha,{INPUT_START:Ea,INPUT_MOVE:Fa,INPUT_END:Ga,INPUT_CANCEL:Ha,STATE_POSSIBLE:nb,STATE_BEGAN:ob,STATE_CHANGED:pb,STATE_ENDED:qb,STATE_RECOGNIZED:rb,STATE_CANCELLED:sb,STATE_FAILED:tb,DIRECTION_NONE:Ia,DIRECTION_LEFT:Ja,DIRECTION_RIGHT:Ka,DIRECTION_UP:La,DIRECTION_DOWN:Ma,DIRECTION_HORIZONTAL:Na,DIRECTION_VERTICAL:Oa,DIRECTION_ALL:Pa,Manager:ia,Input:x,TouchAction:V,TouchInput:P,MouseInput:L,PointerEventInput:M,TouchMouseInput:R,SingleTouchInput:N,Recognizer:Y,AttrRecognizer:aa,Tap:ga,Pan:ba,Swipe:fa,Pinch:ca,Rotate:ea,Press:da,on:m,off:n,each:g,merge:ta,extend:sa,assign:la,inherit:i,bindFn:j,prefixed:u});var wb="undefined"!=typeof a?a:"undefined"!=typeof self?self:{};wb.Hammer=ha,"function"==typeof define&&define.amd?define(function(){return ha}):"undefined"!=typeof module&&module.exports?module.exports=ha:a[c]=ha}(window,document,"Hammer")}if(typeof naturalSort!=="function"){function naturalSort(a,b){"use strict";var re=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,sre=/(^[ ]*|[ ]*$)/g,dre=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,hre=/^0x[0-9a-f]+$/i,ore=/^0/,i=function(s){return naturalSort.insensitive&&(""+s).toLowerCase()||""+s},x=i(a).replace(sre,"")||"",y=i(b).replace(sre,"")||"",xN=x.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),yN=y.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),xD=parseInt(x.match(hre),16)||xN.length!==1&&x.match(dre)&&Date.parse(x),yD=parseInt(y.match(hre),16)||xD&&y.match(dre)&&Date.parse(y)||null,oFxNcL,oFyNcL;if(yD){if(xD<yD){return-1}else if(xD>yD){return 1}}for(var cLoc=0,numS=Math.max(xN.length,yN.length);cLoc<numS;cLoc++){oFxNcL=!(xN[cLoc]||"").match(ore)&&parseFloat(xN[cLoc])||xN[cLoc]||0;oFyNcL=!(yN[cLoc]||"").match(ore)&&parseFloat(yN[cLoc])||yN[cLoc]||0;if(isNaN(oFxNcL)!==isNaN(oFyNcL)){return isNaN(oFxNcL)?1:-1}else if(typeof oFxNcL!==typeof oFyNcL){oFxNcL+="";oFyNcL+=""}if(oFxNcL<oFyNcL){return-1}if(oFxNcL>oFyNcL){return 1}}return 0}}(function(window,document){var prefix="",_addEventListener,support;if(window.addEventListener){_addEventListener="addEventListener"}else{_addEventListener="attachEvent";prefix="on"}support="onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==undefined?"mousewheel":"DOMMouseScroll";window.addWheelListener=function(elem,callback,useCapture){_addWheelListener(elem,support,callback,useCapture);if(support=="DOMMouseScroll"){_addWheelListener(elem,"MozMousePixelScroll",callback,useCapture)}};function _addWheelListener(elem,eventName,callback,useCapture){elem[_addEventListener](prefix+eventName,support=="wheel"?callback:function(originalEvent){!originalEvent&&(originalEvent=window.event);var event={originalEvent:originalEvent,target:originalEvent.target||originalEvent.srcElement,type:"wheel",deltaMode:originalEvent.type=="MozMousePixelScroll"?0:1,deltaX:0,deltaY:0,deltaZ:0,preventDefault:function(){originalEvent.preventDefault?originalEvent.preventDefault():originalEvent.returnValue=false}};if(support=="mousewheel"){event.deltaY=-1/40*originalEvent.wheelDelta;originalEvent.wheelDeltaX&&(event.deltaX=-1/40*originalEvent.wheelDeltaX)}else{event.deltaY=originalEvent.deltaY||originalEvent.detail}return callback(event)},useCapture||false)}})(window,document);if(typeof Popper==="undefined"){(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):global.Popper=factory()})(this,function(){"use strict";var isBrowser=typeof window!=="undefined"&&typeof document!=="undefined"&&typeof navigator!=="undefined";var timeoutDuration=function(){var longerTimeoutBrowsers=["Edge","Trident","Firefox"];for(var i=0;i<longerTimeoutBrowsers.length;i+=1){if(isBrowser&&navigator.userAgent.indexOf(longerTimeoutBrowsers[i])>=0){return 1}}return 0}();function microtaskDebounce(fn){var called=false;return function(){if(called){return}called=true;window.Promise.resolve().then(function(){called=false;fn()})}}function taskDebounce(fn){var scheduled=false;return function(){if(!scheduled){scheduled=true;setTimeout(function(){scheduled=false;fn()},timeoutDuration)}}}var supportsMicroTasks=isBrowser&&window.Promise;var debounce=supportsMicroTasks?microtaskDebounce:taskDebounce;function isFunction(functionToCheck){var getType={};return functionToCheck&&getType.toString.call(functionToCheck)==="[object Function]"}function getStyleComputedProperty(element,property){if(element.nodeType!==1){return[]}var window=element.ownerDocument.defaultView;var css=window.getComputedStyle(element,null);return property?css[property]:css}function getParentNode(element){if(element.nodeName==="HTML"){return element}return element.parentNode||element.host}function getScrollParent(element){if(!element){return document.body}switch(element.nodeName){case"HTML":case"BODY":return element.ownerDocument.body;case"#document":return element.body}var _getStyleComputedProp=getStyleComputedProperty(element),overflow=_getStyleComputedProp.overflow,overflowX=_getStyleComputedProp.overflowX,overflowY=_getStyleComputedProp.overflowY;if(/(auto|scroll|overlay)/.test(overflow+overflowY+overflowX)){return element}return getScrollParent(getParentNode(element))}function getReferenceNode(reference){return reference&&reference.referenceNode?reference.referenceNode:reference}var isIE11=isBrowser&&!!(window.MSInputMethodContext&&document.documentMode);var isIE10=isBrowser&&/MSIE 10/.test(navigator.userAgent);function isIE(version){if(version===11){return isIE11}if(version===10){return isIE10}return isIE11||isIE10}function getOffsetParent(element){if(!element){return document.documentElement}var noOffsetParent=isIE(10)?document.body:null;var offsetParent=element.offsetParent||null;while(offsetParent===noOffsetParent&&element.nextElementSibling){offsetParent=(element=element.nextElementSibling).offsetParent}var nodeName=offsetParent&&offsetParent.nodeName;if(!nodeName||nodeName==="BODY"||nodeName==="HTML"){return element?element.ownerDocument.documentElement:document.documentElement}if(["TH","TD","TABLE"].indexOf(offsetParent.nodeName)!==-1&&getStyleComputedProperty(offsetParent,"position")==="static"){return getOffsetParent(offsetParent)}return offsetParent}function isOffsetContainer(element){var nodeName=element.nodeName;if(nodeName==="BODY"){return false}return nodeName==="HTML"||getOffsetParent(element.firstElementChild)===element}function getRoot(node){if(node.parentNode!==null){return getRoot(node.parentNode)}return node}function findCommonOffsetParent(element1,element2){if(!element1||!element1.nodeType||!element2||!element2.nodeType){return document.documentElement}var order=element1.compareDocumentPosition(element2)&Node.DOCUMENT_POSITION_FOLLOWING;var start=order?element1:element2;var end=order?element2:element1;var range=document.createRange();range.setStart(start,0);range.setEnd(end,0);var commonAncestorContainer=range.commonAncestorContainer;if(element1!==commonAncestorContainer&&element2!==commonAncestorContainer||start.contains(end)){if(isOffsetContainer(commonAncestorContainer)){return commonAncestorContainer}return getOffsetParent(commonAncestorContainer)}var element1root=getRoot(element1);if(element1root.host){return findCommonOffsetParent(element1root.host,element2)}else{return findCommonOffsetParent(element1,getRoot(element2).host)}}function getScroll(element){var side=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"top";var upperSide=side==="top"?"scrollTop":"scrollLeft";var nodeName=element.nodeName;if(nodeName==="BODY"||nodeName==="HTML"){var html=element.ownerDocument.documentElement;var scrollingElement=element.ownerDocument.scrollingElement||html;return scrollingElement[upperSide]}return element[upperSide]}function includeScroll(rect,element){var subtract=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var scrollTop=getScroll(element,"top");var scrollLeft=getScroll(element,"left");var modifier=subtract?-1:1;rect.top+=scrollTop*modifier;rect.bottom+=scrollTop*modifier;rect.left+=scrollLeft*modifier;rect.right+=scrollLeft*modifier;return rect}function getBordersSize(styles,axis){var sideA=axis==="x"?"Left":"Top";var sideB=sideA==="Left"?"Right":"Bottom";return parseFloat(styles["border"+sideA+"Width"])+parseFloat(styles["border"+sideB+"Width"])}function getSize(axis,body,html,computedStyle){return Math.max(body["offset"+axis],body["scroll"+axis],html["client"+axis],html["offset"+axis],html["scroll"+axis],isIE(10)?parseInt(html["offset"+axis])+parseInt(computedStyle["margin"+(axis==="Height"?"Top":"Left")])+parseInt(computedStyle["margin"+(axis==="Height"?"Bottom":"Right")]):0)}function getWindowSizes(document){var body=document.body;var html=document.documentElement;var computedStyle=isIE(10)&&getComputedStyle(html);return{height:getSize("Height",body,html,computedStyle),width:getSize("Width",body,html,computedStyle)}}var classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}};var createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var defineProperty=function(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj};var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};function getClientRect(offsets){return _extends({},offsets,{right:offsets.left+offsets.width,bottom:offsets.top+offsets.height})}function getBoundingClientRect(element){var rect={};try{if(isIE(10)){rect=element.getBoundingClientRect();var scrollTop=getScroll(element,"top");var scrollLeft=getScroll(element,"left");rect.top+=scrollTop;rect.left+=scrollLeft;rect.bottom+=scrollTop;rect.right+=scrollLeft}else{rect=element.getBoundingClientRect()}}catch(e){}var result={left:rect.left,top:rect.top,width:rect.right-rect.left,height:rect.bottom-rect.top};var sizes=element.nodeName==="HTML"?getWindowSizes(element.ownerDocument):{};var width=sizes.width||element.clientWidth||result.width;var height=sizes.height||element.clientHeight||result.height;var horizScrollbar=element.offsetWidth-width;var vertScrollbar=element.offsetHeight-height;if(horizScrollbar||vertScrollbar){var styles=getStyleComputedProperty(element);horizScrollbar-=getBordersSize(styles,"x");vertScrollbar-=getBordersSize(styles,"y");result.width-=horizScrollbar;result.height-=vertScrollbar}return getClientRect(result)}function getOffsetRectRelativeToArbitraryNode(children,parent){var fixedPosition=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var isIE10=isIE(10);var isHTML=parent.nodeName==="HTML";var childrenRect=getBoundingClientRect(children);var parentRect=getBoundingClientRect(parent);var scrollParent=getScrollParent(children);var styles=getStyleComputedProperty(parent);var borderTopWidth=parseFloat(styles.borderTopWidth);var borderLeftWidth=parseFloat(styles.borderLeftWidth);if(fixedPosition&&isHTML){parentRect.top=Math.max(parentRect.top,0);parentRect.left=Math.max(parentRect.left,0)}var offsets=getClientRect({top:childrenRect.top-parentRect.top-borderTopWidth,left:childrenRect.left-parentRect.left-borderLeftWidth,width:childrenRect.width,height:childrenRect.height});offsets.marginTop=0;offsets.marginLeft=0;if(!isIE10&&isHTML){var marginTop=parseFloat(styles.marginTop);var marginLeft=parseFloat(styles.marginLeft);offsets.top-=borderTopWidth-marginTop;offsets.bottom-=borderTopWidth-marginTop;offsets.left-=borderLeftWidth-marginLeft;offsets.right-=borderLeftWidth-marginLeft;offsets.marginTop=marginTop;offsets.marginLeft=marginLeft}if(isIE10&&!fixedPosition?parent.contains(scrollParent):parent===scrollParent&&scrollParent.nodeName!=="BODY"){offsets=includeScroll(offsets,parent)}return offsets}function getViewportOffsetRectRelativeToArtbitraryNode(element){var excludeScroll=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var html=element.ownerDocument.documentElement;var relativeOffset=getOffsetRectRelativeToArbitraryNode(element,html);var width=Math.max(html.clientWidth,window.innerWidth||0);var height=Math.max(html.clientHeight,window.innerHeight||0);var scrollTop=!excludeScroll?getScroll(html):0;var scrollLeft=!excludeScroll?getScroll(html,"left"):0;var offset={top:scrollTop-relativeOffset.top+relativeOffset.marginTop,left:scrollLeft-relativeOffset.left+relativeOffset.marginLeft,width:width,height:height};return getClientRect(offset)}function isFixed(element){var nodeName=element.nodeName;if(nodeName==="BODY"||nodeName==="HTML"){return false}if(getStyleComputedProperty(element,"position")==="fixed"){return true}var parentNode=getParentNode(element);if(!parentNode){return false}return isFixed(parentNode)}function getFixedPositionOffsetParent(element){if(!element||!element.parentElement||isIE()){return document.documentElement}var el=element.parentElement;while(el&&getStyleComputedProperty(el,"transform")==="none"){el=el.parentElement}return el||document.documentElement}function getBoundaries(popper,reference,padding,boundariesElement){var fixedPosition=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var boundaries={top:0,left:0};var offsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));if(boundariesElement==="viewport"){boundaries=getViewportOffsetRectRelativeToArtbitraryNode(offsetParent,fixedPosition)}else{var boundariesNode=void 0;if(boundariesElement==="scrollParent"){boundariesNode=getScrollParent(getParentNode(reference));if(boundariesNode.nodeName==="BODY"){boundariesNode=popper.ownerDocument.documentElement}}else if(boundariesElement==="window"){boundariesNode=popper.ownerDocument.documentElement}else{boundariesNode=boundariesElement}var offsets=getOffsetRectRelativeToArbitraryNode(boundariesNode,offsetParent,fixedPosition);if(boundariesNode.nodeName==="HTML"&&!isFixed(offsetParent)){var _getWindowSizes=getWindowSizes(popper.ownerDocument),height=_getWindowSizes.height,width=_getWindowSizes.width;boundaries.top+=offsets.top-offsets.marginTop;boundaries.bottom=height+offsets.top;boundaries.left+=offsets.left-offsets.marginLeft;boundaries.right=width+offsets.left}else{boundaries=offsets}}padding=padding||0;var isPaddingNumber=typeof padding==="number";boundaries.left+=isPaddingNumber?padding:padding.left||0;boundaries.top+=isPaddingNumber?padding:padding.top||0;boundaries.right-=isPaddingNumber?padding:padding.right||0;boundaries.bottom-=isPaddingNumber?padding:padding.bottom||0;return boundaries}function getArea(_ref){var width=_ref.width,height=_ref.height;return width*height}function computeAutoPlacement(placement,refRect,popper,reference,boundariesElement){var padding=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;if(placement.indexOf("auto")===-1){return placement}var boundaries=getBoundaries(popper,reference,padding,boundariesElement);var rects={top:{width:boundaries.width,height:refRect.top-boundaries.top},right:{width:boundaries.right-refRect.right,height:boundaries.height},bottom:{width:boundaries.width,height:boundaries.bottom-refRect.bottom},left:{width:refRect.left-boundaries.left,height:boundaries.height}};var sortedAreas=Object.keys(rects).map(function(key){return _extends({key:key},rects[key],{area:getArea(rects[key])})}).sort(function(a,b){return b.area-a.area});var filteredAreas=sortedAreas.filter(function(_ref2){var width=_ref2.width,height=_ref2.height;return width>=popper.clientWidth&&height>=popper.clientHeight});var computedPlacement=filteredAreas.length>0?filteredAreas[0].key:sortedAreas[0].key;var variation=placement.split("-")[1];return computedPlacement+(variation?"-"+variation:"")}function getReferenceOffsets(state,popper,reference){var fixedPosition=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var commonOffsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));return getOffsetRectRelativeToArbitraryNode(reference,commonOffsetParent,fixedPosition)}function getOuterSizes(element){var window=element.ownerDocument.defaultView;var styles=window.getComputedStyle(element);var x=parseFloat(styles.marginTop||0)+parseFloat(styles.marginBottom||0);var y=parseFloat(styles.marginLeft||0)+parseFloat(styles.marginRight||0);var result={width:element.offsetWidth+y,height:element.offsetHeight+x};return result}function getOppositePlacement(placement){var hash={left:"right",right:"left",bottom:"top",top:"bottom"};return placement.replace(/left|right|bottom|top/g,function(matched){return hash[matched]})}function getPopperOffsets(popper,referenceOffsets,placement){placement=placement.split("-")[0];var popperRect=getOuterSizes(popper);var popperOffsets={width:popperRect.width,height:popperRect.height};var isHoriz=["right","left"].indexOf(placement)!==-1;var mainSide=isHoriz?"top":"left";var secondarySide=isHoriz?"left":"top";var measurement=isHoriz?"height":"width";var secondaryMeasurement=!isHoriz?"height":"width";popperOffsets[mainSide]=referenceOffsets[mainSide]+referenceOffsets[measurement]/2-popperRect[measurement]/2;if(placement===secondarySide){popperOffsets[secondarySide]=referenceOffsets[secondarySide]-popperRect[secondaryMeasurement]}else{popperOffsets[secondarySide]=referenceOffsets[getOppositePlacement(secondarySide)]}return popperOffsets}function find(arr,check){if(Array.prototype.find){return arr.find(check)}return arr.filter(check)[0]}function findIndex(arr,prop,value){if(Array.prototype.findIndex){return arr.findIndex(function(cur){return cur[prop]===value})}var match=find(arr,function(obj){return obj[prop]===value});return arr.indexOf(match)}function runModifiers(modifiers,data,ends){var modifiersToRun=ends===undefined?modifiers:modifiers.slice(0,findIndex(modifiers,"name",ends));modifiersToRun.forEach(function(modifier){if(modifier["function"]){console.warn("`modifier.function` is deprecated, use `modifier.fn`!")}var fn=modifier["function"]||modifier.fn;if(modifier.enabled&&isFunction(fn)){data.offsets.popper=getClientRect(data.offsets.popper);data.offsets.reference=getClientRect(data.offsets.reference);data=fn(data,modifier)}});return data}function update(){if(this.state.isDestroyed){return}var data={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:false,offsets:{}};data.offsets.reference=getReferenceOffsets(this.state,this.popper,this.reference,this.options.positionFixed);data.placement=computeAutoPlacement(this.options.placement,data.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding);data.originalPlacement=data.placement;data.positionFixed=this.options.positionFixed;data.offsets.popper=getPopperOffsets(this.popper,data.offsets.reference,data.placement);data.offsets.popper.position=this.options.positionFixed?"fixed":"absolute";data=runModifiers(this.modifiers,data);if(!this.state.isCreated){this.state.isCreated=true;this.options.onCreate(data)}else{this.options.onUpdate(data)}}function isModifierEnabled(modifiers,modifierName){return modifiers.some(function(_ref){var name=_ref.name,enabled=_ref.enabled;return enabled&&name===modifierName})}function getSupportedPropertyName(property){var prefixes=[false,"ms","Webkit","Moz","O"];var upperProp=property.charAt(0).toUpperCase()+property.slice(1);for(var i=0;i<prefixes.length;i++){var prefix=prefixes[i];var toCheck=prefix?""+prefix+upperProp:property;if(typeof document.body.style[toCheck]!=="undefined"){return toCheck}}return null}function destroy(){this.state.isDestroyed=true;if(isModifierEnabled(this.modifiers,"applyStyle")){this.popper.removeAttribute("x-placement");this.popper.style.position="";this.popper.style.top="";this.popper.style.left="";this.popper.style.right="";this.popper.style.bottom="";this.popper.style.willChange="";this.popper.style[getSupportedPropertyName("transform")]=""}this.disableEventListeners();if(this.options.removeOnDestroy){this.popper.parentNode.removeChild(this.popper)}return this}function getWindow(element){var ownerDocument=element.ownerDocument;return ownerDocument?ownerDocument.defaultView:window}function attachToScrollParents(scrollParent,event,callback,scrollParents){var isBody=scrollParent.nodeName==="BODY";var target=isBody?scrollParent.ownerDocument.defaultView:scrollParent;target.addEventListener(event,callback,{passive:true});if(!isBody){attachToScrollParents(getScrollParent(target.parentNode),event,callback,scrollParents)}scrollParents.push(target)}function setupEventListeners(reference,options,state,updateBound){state.updateBound=updateBound;getWindow(reference).addEventListener("resize",state.updateBound,{passive:true});var scrollElement=getScrollParent(reference);attachToScrollParents(scrollElement,"scroll",state.updateBound,state.scrollParents);state.scrollElement=scrollElement;state.eventsEnabled=true;return state}function enableEventListeners(){if(!this.state.eventsEnabled){this.state=setupEventListeners(this.reference,this.options,this.state,this.scheduleUpdate)}}function removeEventListeners(reference,state){getWindow(reference).removeEventListener("resize",state.updateBound);state.scrollParents.forEach(function(target){target.removeEventListener("scroll",state.updateBound)});state.updateBound=null;state.scrollParents=[];state.scrollElement=null;state.eventsEnabled=false;return state}function disableEventListeners(){if(this.state.eventsEnabled){cancelAnimationFrame(this.scheduleUpdate);this.state=removeEventListeners(this.reference,this.state)}}function isNumeric(n){return n!==""&&!isNaN(parseFloat(n))&&isFinite(n)}function setStyles(element,styles){Object.keys(styles).forEach(function(prop){var unit="";if(["width","height","top","right","bottom","left"].indexOf(prop)!==-1&&isNumeric(styles[prop])){unit="px"}element.style[prop]=styles[prop]+unit})}function setAttributes(element,attributes){Object.keys(attributes).forEach(function(prop){var value=attributes[prop];if(value!==false){element.setAttribute(prop,attributes[prop])}else{element.removeAttribute(prop)}})}function applyStyle(data){setStyles(data.instance.popper,data.styles);setAttributes(data.instance.popper,data.attributes);if(data.arrowElement&&Object.keys(data.arrowStyles).length){setStyles(data.arrowElement,data.arrowStyles)}return data}function applyStyleOnLoad(reference,popper,options,modifierOptions,state){var referenceOffsets=getReferenceOffsets(state,popper,reference,options.positionFixed);var placement=computeAutoPlacement(options.placement,referenceOffsets,popper,reference,options.modifiers.flip.boundariesElement,options.modifiers.flip.padding);popper.setAttribute("x-placement",placement);setStyles(popper,{position:options.positionFixed?"fixed":"absolute"});return options}function getRoundedOffsets(data,shouldRound){var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var round=Math.round,floor=Math.floor;var noRound=function noRound(v){return v};var referenceWidth=round(reference.width);var popperWidth=round(popper.width);var isVertical=["left","right"].indexOf(data.placement)!==-1;var isVariation=data.placement.indexOf("-")!==-1;var sameWidthParity=referenceWidth%2===popperWidth%2;var bothOddWidth=referenceWidth%2===1&&popperWidth%2===1;var horizontalToInteger=!shouldRound?noRound:isVertical||isVariation||sameWidthParity?round:floor;var verticalToInteger=!shouldRound?noRound:round;return{left:horizontalToInteger(bothOddWidth&&!isVariation&&shouldRound?popper.left-1:popper.left),top:verticalToInteger(popper.top),bottom:verticalToInteger(popper.bottom),right:horizontalToInteger(popper.right)}}var isFirefox=isBrowser&&/Firefox/i.test(navigator.userAgent);function computeStyle(data,options){var x=options.x,y=options.y;var popper=data.offsets.popper;var legacyGpuAccelerationOption=find(data.instance.modifiers,function(modifier){return modifier.name==="applyStyle"}).gpuAcceleration;if(legacyGpuAccelerationOption!==undefined){console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!")}var gpuAcceleration=legacyGpuAccelerationOption!==undefined?legacyGpuAccelerationOption:options.gpuAcceleration;var offsetParent=getOffsetParent(data.instance.popper);var offsetParentRect=getBoundingClientRect(offsetParent);var styles={position:popper.position};var offsets=getRoundedOffsets(data,window.devicePixelRatio<2||!isFirefox);var sideA=x==="bottom"?"top":"bottom";var sideB=y==="right"?"left":"right";var prefixedProperty=getSupportedPropertyName("transform");var left=void 0,top=void 0;if(sideA==="bottom"){if(offsetParent.nodeName==="HTML"){top=-offsetParent.clientHeight+offsets.bottom}else{top=-offsetParentRect.height+offsets.bottom}}else{top=offsets.top}if(sideB==="right"){if(offsetParent.nodeName==="HTML"){left=-offsetParent.clientWidth+offsets.right}else{left=-offsetParentRect.width+offsets.right}}else{left=offsets.left}if(gpuAcceleration&&prefixedProperty){styles[prefixedProperty]="translate3d("+left+"px, "+top+"px, 0)";styles[sideA]=0;styles[sideB]=0;styles.willChange="transform"}else{var invertTop=sideA==="bottom"?-1:1;var invertLeft=sideB==="right"?-1:1;styles[sideA]=top*invertTop;styles[sideB]=left*invertLeft;styles.willChange=sideA+", "+sideB}var attributes={"x-placement":data.placement};data.attributes=_extends({},attributes,data.attributes);data.styles=_extends({},styles,data.styles);data.arrowStyles=_extends({},data.offsets.arrow,data.arrowStyles);return data}function isModifierRequired(modifiers,requestingName,requestedName){var requesting=find(modifiers,function(_ref){var name=_ref.name;return name===requestingName});var isRequired=!!requesting&&modifiers.some(function(modifier){return modifier.name===requestedName&&modifier.enabled&&modifier.order<requesting.order});if(!isRequired){var _requesting="`"+requestingName+"`";var requested="`"+requestedName+"`";console.warn(requested+" modifier is required by "+_requesting+" modifier in order to work, be sure to include it before "+_requesting+"!")}return isRequired}function arrow(data,options){var _data$offsets$arrow;if(!isModifierRequired(data.instance.modifiers,"arrow","keepTogether")){return data}var arrowElement=options.element;if(typeof arrowElement==="string"){arrowElement=data.instance.popper.querySelector(arrowElement);if(!arrowElement){return data}}else{if(!data.instance.popper.contains(arrowElement)){console.warn("WARNING: `arrow.element` must be child of its popper element!");return data}}var placement=data.placement.split("-")[0];var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var isVertical=["left","right"].indexOf(placement)!==-1;var len=isVertical?"height":"width";var sideCapitalized=isVertical?"Top":"Left";var side=sideCapitalized.toLowerCase();var altSide=isVertical?"left":"top";var opSide=isVertical?"bottom":"right";var arrowElementSize=getOuterSizes(arrowElement)[len];if(reference[opSide]-arrowElementSize<popper[side]){data.offsets.popper[side]-=popper[side]-(reference[opSide]-arrowElementSize)}if(reference[side]+arrowElementSize>popper[opSide]){data.offsets.popper[side]+=reference[side]+arrowElementSize-popper[opSide]}data.offsets.popper=getClientRect(data.offsets.popper);var center=reference[side]+reference[len]/2-arrowElementSize/2;var css=getStyleComputedProperty(data.instance.popper);var popperMarginSide=parseFloat(css["margin"+sideCapitalized]);var popperBorderSide=parseFloat(css["border"+sideCapitalized+"Width"]);var sideValue=center-data.offsets.popper[side]-popperMarginSide-popperBorderSide;sideValue=Math.max(Math.min(popper[len]-arrowElementSize,sideValue),0);data.arrowElement=arrowElement;data.offsets.arrow=(_data$offsets$arrow={},defineProperty(_data$offsets$arrow,side,Math.round(sideValue)),defineProperty(_data$offsets$arrow,altSide,""),_data$offsets$arrow);return data}function getOppositeVariation(variation){if(variation==="end"){return"start"}else if(variation==="start"){return"end"}return variation}var placements=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"];var validPlacements=placements.slice(3);function clockwise(placement){var counter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var index=validPlacements.indexOf(placement);var arr=validPlacements.slice(index+1).concat(validPlacements.slice(0,index));return counter?arr.reverse():arr}var BEHAVIORS={FLIP:"flip",CLOCKWISE:"clockwise",COUNTERCLOCKWISE:"counterclockwise"};function flip(data,options){if(isModifierEnabled(data.instance.modifiers,"inner")){return data}if(data.flipped&&data.placement===data.originalPlacement){return data}var boundaries=getBoundaries(data.instance.popper,data.instance.reference,options.padding,options.boundariesElement,data.positionFixed);var placement=data.placement.split("-")[0];var placementOpposite=getOppositePlacement(placement);var variation=data.placement.split("-")[1]||"";var flipOrder=[];switch(options.behavior){case BEHAVIORS.FLIP:flipOrder=[placement,placementOpposite];break;case BEHAVIORS.CLOCKWISE:flipOrder=clockwise(placement);break;case BEHAVIORS.COUNTERCLOCKWISE:flipOrder=clockwise(placement,true);break;default:flipOrder=options.behavior}flipOrder.forEach(function(step,index){if(placement!==step||flipOrder.length===index+1){return data}placement=data.placement.split("-")[0];placementOpposite=getOppositePlacement(placement);var popperOffsets=data.offsets.popper;var refOffsets=data.offsets.reference;var floor=Math.floor;var overlapsRef=placement==="left"&&floor(popperOffsets.right)>floor(refOffsets.left)||placement==="right"&&floor(popperOffsets.left)<floor(refOffsets.right)||placement==="top"&&floor(popperOffsets.bottom)>floor(refOffsets.top)||placement==="bottom"&&floor(popperOffsets.top)<floor(refOffsets.bottom);var overflowsLeft=floor(popperOffsets.left)<floor(boundaries.left);var overflowsRight=floor(popperOffsets.right)>floor(boundaries.right);var overflowsTop=floor(popperOffsets.top)<floor(boundaries.top);var overflowsBottom=floor(popperOffsets.bottom)>floor(boundaries.bottom);var overflowsBoundaries=placement==="left"&&overflowsLeft||placement==="right"&&overflowsRight||placement==="top"&&overflowsTop||placement==="bottom"&&overflowsBottom;var isVertical=["top","bottom"].indexOf(placement)!==-1;var flippedVariationByRef=!!options.flipVariations&&(isVertical&&variation==="start"&&overflowsLeft||isVertical&&variation==="end"&&overflowsRight||!isVertical&&variation==="start"&&overflowsTop||!isVertical&&variation==="end"&&overflowsBottom);var flippedVariationByContent=!!options.flipVariationsByContent&&(isVertical&&variation==="start"&&overflowsRight||isVertical&&variation==="end"&&overflowsLeft||!isVertical&&variation==="start"&&overflowsBottom||!isVertical&&variation==="end"&&overflowsTop);var flippedVariation=flippedVariationByRef||flippedVariationByContent;if(overlapsRef||overflowsBoundaries||flippedVariation){data.flipped=true;if(overlapsRef||overflowsBoundaries){placement=flipOrder[index+1]}if(flippedVariation){variation=getOppositeVariation(variation)}data.placement=placement+(variation?"-"+variation:"");data.offsets.popper=_extends({},data.offsets.popper,getPopperOffsets(data.instance.popper,data.offsets.reference,data.placement));data=runModifiers(data.instance.modifiers,data,"flip")}});return data}function keepTogether(data){var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var placement=data.placement.split("-")[0];var floor=Math.floor;var isVertical=["top","bottom"].indexOf(placement)!==-1;var side=isVertical?"right":"bottom";var opSide=isVertical?"left":"top";var measurement=isVertical?"width":"height";if(popper[side]<floor(reference[opSide])){data.offsets.popper[opSide]=floor(reference[opSide])-popper[measurement]}if(popper[opSide]>floor(reference[side])){data.offsets.popper[opSide]=floor(reference[side])}return data}function toValue(str,measurement,popperOffsets,referenceOffsets){var split=str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);var value=+split[1];var unit=split[2];if(!value){return str}if(unit.indexOf("%")===0){var element=void 0;switch(unit){case"%p":element=popperOffsets;break;case"%":case"%r":default:element=referenceOffsets}var rect=getClientRect(element);return rect[measurement]/100*value}else if(unit==="vh"||unit==="vw"){var size=void 0;if(unit==="vh"){size=Math.max(document.documentElement.clientHeight,window.innerHeight||0)}else{size=Math.max(document.documentElement.clientWidth,window.innerWidth||0)}return size/100*value}else{return value}}function parseOffset(offset,popperOffsets,referenceOffsets,basePlacement){var offsets=[0,0];var useHeight=["right","left"].indexOf(basePlacement)!==-1;var fragments=offset.split(/(\+|\-)/).map(function(frag){return frag.trim()});var divider=fragments.indexOf(find(fragments,function(frag){return frag.search(/,|\s/)!==-1}));if(fragments[divider]&&fragments[divider].indexOf(",")===-1){console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.")}var splitRegex=/\s*,\s*|\s+/;var ops=divider!==-1?[fragments.slice(0,divider).concat([fragments[divider].split(splitRegex)[0]]),[fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider+1))]:[fragments];ops=ops.map(function(op,index){var measurement=(index===1?!useHeight:useHeight)?"height":"width";var mergeWithPrevious=false;return op.reduce(function(a,b){if(a[a.length-1]===""&&["+","-"].indexOf(b)!==-1){a[a.length-1]=b;mergeWithPrevious=true;return a}else if(mergeWithPrevious){a[a.length-1]+=b;mergeWithPrevious=false;return a}else{return a.concat(b)}},[]).map(function(str){return toValue(str,measurement,popperOffsets,referenceOffsets)})});ops.forEach(function(op,index){op.forEach(function(frag,index2){if(isNumeric(frag)){offsets[index]+=frag*(op[index2-1]==="-"?-1:1)}})});return offsets}function offset(data,_ref){var offset=_ref.offset;var placement=data.placement,_data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var basePlacement=placement.split("-")[0];var offsets=void 0;if(isNumeric(+offset)){offsets=[+offset,0]}else{offsets=parseOffset(offset,popper,reference,basePlacement)}if(basePlacement==="left"){popper.top+=offsets[0];popper.left-=offsets[1]}else if(basePlacement==="right"){popper.top+=offsets[0];popper.left+=offsets[1]}else if(basePlacement==="top"){popper.left+=offsets[0];popper.top-=offsets[1]}else if(basePlacement==="bottom"){popper.left+=offsets[0];popper.top+=offsets[1]}data.popper=popper;return data}function preventOverflow(data,options){var boundariesElement=options.boundariesElement||getOffsetParent(data.instance.popper);if(data.instance.reference===boundariesElement){boundariesElement=getOffsetParent(boundariesElement)}var transformProp=getSupportedPropertyName("transform");var popperStyles=data.instance.popper.style;var top=popperStyles.top,left=popperStyles.left,transform=popperStyles[transformProp];popperStyles.top="";popperStyles.left="";popperStyles[transformProp]="";var boundaries=getBoundaries(data.instance.popper,data.instance.reference,options.padding,boundariesElement,data.positionFixed);popperStyles.top=top;popperStyles.left=left;popperStyles[transformProp]=transform;options.boundaries=boundaries;var order=options.priority;var popper=data.offsets.popper;var check={primary:function primary(placement){var value=popper[placement];if(popper[placement]<boundaries[placement]&&!options.escapeWithReference){value=Math.max(popper[placement],boundaries[placement])}return defineProperty({},placement,value)},secondary:function secondary(placement){var mainSide=placement==="right"?"left":"top";var value=popper[mainSide];if(popper[placement]>boundaries[placement]&&!options.escapeWithReference){value=Math.min(popper[mainSide],boundaries[placement]-(placement==="right"?popper.width:popper.height))}return defineProperty({},mainSide,value)}};order.forEach(function(placement){var side=["left","top"].indexOf(placement)!==-1?"primary":"secondary";popper=_extends({},popper,check[side](placement))});data.offsets.popper=popper;return data}function shift(data){var placement=data.placement;var basePlacement=placement.split("-")[0];var shiftvariation=placement.split("-")[1];if(shiftvariation){var _data$offsets=data.offsets,reference=_data$offsets.reference,popper=_data$offsets.popper;var isVertical=["bottom","top"].indexOf(basePlacement)!==-1;var side=isVertical?"left":"top";var measurement=isVertical?"width":"height";var shiftOffsets={start:defineProperty({},side,reference[side]),end:defineProperty({},side,reference[side]+reference[measurement]-popper[measurement])};data.offsets.popper=_extends({},popper,shiftOffsets[shiftvariation])}return data}function hide(data){if(!isModifierRequired(data.instance.modifiers,"hide","preventOverflow")){return data}var refRect=data.offsets.reference;var bound=find(data.instance.modifiers,function(modifier){return modifier.name==="preventOverflow"}).boundaries;if(refRect.bottom<bound.top||refRect.left>bound.right||refRect.top>bound.bottom||refRect.right<bound.left){if(data.hide===true){return data}data.hide=true;data.attributes["x-out-of-boundaries"]=""}else{if(data.hide===false){return data}data.hide=false;data.attributes["x-out-of-boundaries"]=false}return data}function inner(data){var placement=data.placement;var basePlacement=placement.split("-")[0];var _data$offsets=data.offsets,popper=_data$offsets.popper,reference=_data$offsets.reference;var isHoriz=["left","right"].indexOf(basePlacement)!==-1;var subtractLength=["top","left"].indexOf(basePlacement)===-1;popper[isHoriz?"left":"top"]=reference[basePlacement]-(subtractLength?popper[isHoriz?"width":"height"]:0);data.placement=getOppositePlacement(placement);data.offsets.popper=getClientRect(popper);return data}var modifiers={shift:{order:100,enabled:true,fn:shift},offset:{order:200,enabled:true,fn:offset,offset:0},preventOverflow:{order:300,enabled:true,fn:preventOverflow,priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:true,fn:keepTogether},arrow:{order:500,enabled:true,fn:arrow,element:"[x-arrow]"},flip:{order:600,enabled:true,fn:flip,behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:false,flipVariationsByContent:false},inner:{order:700,enabled:false,fn:inner},hide:{order:800,enabled:true,fn:hide},computeStyle:{order:850,enabled:true,fn:computeStyle,gpuAcceleration:true,x:"bottom",y:"right"},applyStyle:{order:900,enabled:true,fn:applyStyle,onLoad:applyStyleOnLoad,gpuAcceleration:undefined}};var Defaults={placement:"bottom",positionFixed:false,eventsEnabled:true,removeOnDestroy:false,onCreate:function onCreate(){},onUpdate:function onUpdate(){},modifiers:modifiers};var Popper=function(){function Popper(reference,popper){var _this=this;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};classCallCheck(this,Popper);this.scheduleUpdate=function(){return requestAnimationFrame(_this.update)};this.update=debounce(this.update.bind(this));this.options=_extends({},Popper.Defaults,options);this.state={isDestroyed:false,isCreated:false,scrollParents:[]};this.reference=reference&&reference.jquery?reference[0]:reference;this.popper=popper&&popper.jquery?popper[0]:popper;this.options.modifiers={};Object.keys(_extends({},Popper.Defaults.modifiers,options.modifiers)).forEach(function(name){_this.options.modifiers[name]=_extends({},Popper.Defaults.modifiers[name]||{},options.modifiers?options.modifiers[name]:{})});this.modifiers=Object.keys(this.options.modifiers).map(function(name){return _extends({name:name},_this.options.modifiers[name])}).sort(function(a,b){return a.order-b.order});this.modifiers.forEach(function(modifierOptions){if(modifierOptions.enabled&&isFunction(modifierOptions.onLoad)){modifierOptions.onLoad(_this.reference,_this.popper,_this.options,modifierOptions,_this.state)}});this.update();var eventsEnabled=this.options.eventsEnabled;if(eventsEnabled){this.enableEventListeners()}this.state.eventsEnabled=eventsEnabled}createClass(Popper,[{key:"update",value:function update$1(){return update.call(this)}},{key:"destroy",value:function destroy$1(){return destroy.call(this)}},{key:"enableEventListeners",value:function enableEventListeners$1(){return enableEventListeners.call(this)}},{key:"disableEventListeners",value:function disableEventListeners$1(){return disableEventListeners.call(this)}}]);return Popper}();Popper.Utils=(typeof window!=="undefined"?window:global).PopperUtils;Popper.placements=placements;Popper.Defaults=Defaults;return Popper});(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):factory(global.PopperUtils={})})(this,function(exports){"use strict";function getStyleComputedProperty(element,property){if(element.nodeType!==1){return[]}var window=element.ownerDocument.defaultView;var css=window.getComputedStyle(element,null);return property?css[property]:css}function getParentNode(element){if(element.nodeName==="HTML"){return element}return element.parentNode||element.host}function getScrollParent(element){if(!element){return document.body}switch(element.nodeName){case"HTML":case"BODY":return element.ownerDocument.body;case"#document":return element.body}var _getStyleComputedProp=getStyleComputedProperty(element),overflow=_getStyleComputedProp.overflow,overflowX=_getStyleComputedProp.overflowX,overflowY=_getStyleComputedProp.overflowY;if(/(auto|scroll|overlay)/.test(overflow+overflowY+overflowX)){return element}return getScrollParent(getParentNode(element))}function getReferenceNode(reference){return reference&&reference.referenceNode?reference.referenceNode:reference}var isBrowser=typeof window!=="undefined"&&typeof document!=="undefined"&&typeof navigator!=="undefined";var isIE11=isBrowser&&!!(window.MSInputMethodContext&&document.documentMode);var isIE10=isBrowser&&/MSIE 10/.test(navigator.userAgent);function isIE(version){if(version===11){return isIE11}if(version===10){return isIE10}return isIE11||isIE10}function getOffsetParent(element){if(!element){return document.documentElement}var noOffsetParent=isIE(10)?document.body:null;var offsetParent=element.offsetParent||null;while(offsetParent===noOffsetParent&&element.nextElementSibling){offsetParent=(element=element.nextElementSibling).offsetParent}var nodeName=offsetParent&&offsetParent.nodeName;if(!nodeName||nodeName==="BODY"||nodeName==="HTML"){return element?element.ownerDocument.documentElement:document.documentElement}if(["TH","TD","TABLE"].indexOf(offsetParent.nodeName)!==-1&&getStyleComputedProperty(offsetParent,"position")==="static"){return getOffsetParent(offsetParent)}return offsetParent}function isOffsetContainer(element){var nodeName=element.nodeName;if(nodeName==="BODY"){return false}return nodeName==="HTML"||getOffsetParent(element.firstElementChild)===element}function getRoot(node){if(node.parentNode!==null){return getRoot(node.parentNode)}return node}function findCommonOffsetParent(element1,element2){if(!element1||!element1.nodeType||!element2||!element2.nodeType){return document.documentElement}var order=element1.compareDocumentPosition(element2)&Node.DOCUMENT_POSITION_FOLLOWING;var start=order?element1:element2;var end=order?element2:element1;var range=document.createRange();range.setStart(start,0);range.setEnd(end,0);var commonAncestorContainer=range.commonAncestorContainer;if(element1!==commonAncestorContainer&&element2!==commonAncestorContainer||start.contains(end)){if(isOffsetContainer(commonAncestorContainer)){return commonAncestorContainer}return getOffsetParent(commonAncestorContainer)}var element1root=getRoot(element1);if(element1root.host){return findCommonOffsetParent(element1root.host,element2)}else{return findCommonOffsetParent(element1,getRoot(element2).host)}}function getScroll(element){var side=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"top";var upperSide=side==="top"?"scrollTop":"scrollLeft";var nodeName=element.nodeName;if(nodeName==="BODY"||nodeName==="HTML"){var html=element.ownerDocument.documentElement;var scrollingElement=element.ownerDocument.scrollingElement||html;return scrollingElement[upperSide]}return element[upperSide]}function includeScroll(rect,element){var subtract=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var scrollTop=getScroll(element,"top");var scrollLeft=getScroll(element,"left");var modifier=subtract?-1:1;rect.top+=scrollTop*modifier;rect.bottom+=scrollTop*modifier;rect.left+=scrollLeft*modifier;rect.right+=scrollLeft*modifier;return rect}function getBordersSize(styles,axis){var sideA=axis==="x"?"Left":"Top";var sideB=sideA==="Left"?"Right":"Bottom";return parseFloat(styles["border"+sideA+"Width"])+parseFloat(styles["border"+sideB+"Width"])}function getSize(axis,body,html,computedStyle){return Math.max(body["offset"+axis],body["scroll"+axis],html["client"+axis],html["offset"+axis],html["scroll"+axis],isIE(10)?parseInt(html["offset"+axis])+parseInt(computedStyle["margin"+(axis==="Height"?"Top":"Left")])+parseInt(computedStyle["margin"+(axis==="Height"?"Bottom":"Right")]):0)}function getWindowSizes(document){var body=document.body;var html=document.documentElement;var computedStyle=isIE(10)&&getComputedStyle(html);return{height:getSize("Height",body,html,computedStyle),width:getSize("Width",body,html,computedStyle)}}var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};function getClientRect(offsets){return _extends({},offsets,{right:offsets.left+offsets.width,bottom:offsets.top+offsets.height})}function getBoundingClientRect(element){var rect={};try{if(isIE(10)){rect=element.getBoundingClientRect();var scrollTop=getScroll(element,"top");var scrollLeft=getScroll(element,"left");rect.top+=scrollTop;rect.left+=scrollLeft;rect.bottom+=scrollTop;rect.right+=scrollLeft}else{rect=element.getBoundingClientRect()}}catch(e){}var result={left:rect.left,top:rect.top,width:rect.right-rect.left,height:rect.bottom-rect.top};var sizes=element.nodeName==="HTML"?getWindowSizes(element.ownerDocument):{};var width=sizes.width||element.clientWidth||result.width;var height=sizes.height||element.clientHeight||result.height;var horizScrollbar=element.offsetWidth-width;var vertScrollbar=element.offsetHeight-height;if(horizScrollbar||vertScrollbar){var styles=getStyleComputedProperty(element);horizScrollbar-=getBordersSize(styles,"x");vertScrollbar-=getBordersSize(styles,"y");result.width-=horizScrollbar;result.height-=vertScrollbar}return getClientRect(result)}function getOffsetRectRelativeToArbitraryNode(children,parent){var fixedPosition=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var isIE10=isIE(10);var isHTML=parent.nodeName==="HTML";var childrenRect=getBoundingClientRect(children);var parentRect=getBoundingClientRect(parent);var scrollParent=getScrollParent(children);var styles=getStyleComputedProperty(parent);var borderTopWidth=parseFloat(styles.borderTopWidth);var borderLeftWidth=parseFloat(styles.borderLeftWidth);if(fixedPosition&&isHTML){parentRect.top=Math.max(parentRect.top,0);parentRect.left=Math.max(parentRect.left,0)}var offsets=getClientRect({top:childrenRect.top-parentRect.top-borderTopWidth,left:childrenRect.left-parentRect.left-borderLeftWidth,width:childrenRect.width,height:childrenRect.height});offsets.marginTop=0;offsets.marginLeft=0;if(!isIE10&&isHTML){var marginTop=parseFloat(styles.marginTop);var marginLeft=parseFloat(styles.marginLeft);offsets.top-=borderTopWidth-marginTop;offsets.bottom-=borderTopWidth-marginTop;offsets.left-=borderLeftWidth-marginLeft;offsets.right-=borderLeftWidth-marginLeft;offsets.marginTop=marginTop;offsets.marginLeft=marginLeft}if(isIE10&&!fixedPosition?parent.contains(scrollParent):parent===scrollParent&&scrollParent.nodeName!=="BODY"){offsets=includeScroll(offsets,parent)}return offsets}function getViewportOffsetRectRelativeToArtbitraryNode(element){var excludeScroll=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var html=element.ownerDocument.documentElement;var relativeOffset=getOffsetRectRelativeToArbitraryNode(element,html);var width=Math.max(html.clientWidth,window.innerWidth||0);var height=Math.max(html.clientHeight,window.innerHeight||0);var scrollTop=!excludeScroll?getScroll(html):0;var scrollLeft=!excludeScroll?getScroll(html,"left"):0;var offset={top:scrollTop-relativeOffset.top+relativeOffset.marginTop,left:scrollLeft-relativeOffset.left+relativeOffset.marginLeft,width:width,height:height};return getClientRect(offset)}function isFixed(element){var nodeName=element.nodeName;if(nodeName==="BODY"||nodeName==="HTML"){return false}if(getStyleComputedProperty(element,"position")==="fixed"){return true}var parentNode=getParentNode(element);if(!parentNode){return false}return isFixed(parentNode)}function getFixedPositionOffsetParent(element){if(!element||!element.parentElement||isIE()){return document.documentElement}var el=element.parentElement;while(el&&getStyleComputedProperty(el,"transform")==="none"){el=el.parentElement}return el||document.documentElement}function getBoundaries(popper,reference,padding,boundariesElement){var fixedPosition=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var boundaries={top:0,left:0};var offsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));if(boundariesElement==="viewport"){boundaries=getViewportOffsetRectRelativeToArtbitraryNode(offsetParent,fixedPosition)}else{var boundariesNode=void 0;if(boundariesElement==="scrollParent"){boundariesNode=getScrollParent(getParentNode(reference));if(boundariesNode.nodeName==="BODY"){boundariesNode=popper.ownerDocument.documentElement}}else if(boundariesElement==="window"){boundariesNode=popper.ownerDocument.documentElement}else{boundariesNode=boundariesElement}var offsets=getOffsetRectRelativeToArbitraryNode(boundariesNode,offsetParent,fixedPosition);if(boundariesNode.nodeName==="HTML"&&!isFixed(offsetParent)){var _getWindowSizes=getWindowSizes(popper.ownerDocument),height=_getWindowSizes.height,width=_getWindowSizes.width;boundaries.top+=offsets.top-offsets.marginTop;boundaries.bottom=height+offsets.top;boundaries.left+=offsets.left-offsets.marginLeft;boundaries.right=width+offsets.left}else{boundaries=offsets}}padding=padding||0;var isPaddingNumber=typeof padding==="number";boundaries.left+=isPaddingNumber?padding:padding.left||0;boundaries.top+=isPaddingNumber?padding:padding.top||0;boundaries.right-=isPaddingNumber?padding:padding.right||0;boundaries.bottom-=isPaddingNumber?padding:padding.bottom||0;return boundaries}function getArea(_ref){var width=_ref.width,height=_ref.height;return width*height}function computeAutoPlacement(placement,refRect,popper,reference,boundariesElement){var padding=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;if(placement.indexOf("auto")===-1){return placement}var boundaries=getBoundaries(popper,reference,padding,boundariesElement);var rects={top:{width:boundaries.width,height:refRect.top-boundaries.top},right:{width:boundaries.right-refRect.right,height:boundaries.height},bottom:{width:boundaries.width,height:boundaries.bottom-refRect.bottom},left:{width:refRect.left-boundaries.left,height:boundaries.height}};var sortedAreas=Object.keys(rects).map(function(key){return _extends({key:key},rects[key],{area:getArea(rects[key])})}).sort(function(a,b){return b.area-a.area});var filteredAreas=sortedAreas.filter(function(_ref2){var width=_ref2.width,height=_ref2.height;return width>=popper.clientWidth&&height>=popper.clientHeight});var computedPlacement=filteredAreas.length>0?filteredAreas[0].key:sortedAreas[0].key;var variation=placement.split("-")[1];return computedPlacement+(variation?"-"+variation:"")}var timeoutDuration=function(){var longerTimeoutBrowsers=["Edge","Trident","Firefox"];for(var i=0;i<longerTimeoutBrowsers.length;i+=1){if(isBrowser&&navigator.userAgent.indexOf(longerTimeoutBrowsers[i])>=0){return 1}}return 0}();function microtaskDebounce(fn){var called=false;return function(){if(called){return}called=true;window.Promise.resolve().then(function(){called=false;fn()})}}function taskDebounce(fn){var scheduled=false;return function(){if(!scheduled){scheduled=true;setTimeout(function(){scheduled=false;fn()},timeoutDuration)}}}var supportsMicroTasks=isBrowser&&window.Promise;var debounce=supportsMicroTasks?microtaskDebounce:taskDebounce;function find(arr,check){if(Array.prototype.find){return arr.find(check)}return arr.filter(check)[0]}function findIndex(arr,prop,value){if(Array.prototype.findIndex){return arr.findIndex(function(cur){return cur[prop]===value})}var match=find(arr,function(obj){return obj[prop]===value});return arr.indexOf(match)}function getOffsetRect(element){var elementRect=void 0;if(element.nodeName==="HTML"){var _getWindowSizes=getWindowSizes(element.ownerDocument),width=_getWindowSizes.width,height=_getWindowSizes.height;elementRect={width:width,height:height,left:0,top:0}}else{elementRect={width:element.offsetWidth,height:element.offsetHeight,left:element.offsetLeft,top:element.offsetTop}}return getClientRect(elementRect)}function getOuterSizes(element){var window=element.ownerDocument.defaultView;var styles=window.getComputedStyle(element);var x=parseFloat(styles.marginTop||0)+parseFloat(styles.marginBottom||0);var y=parseFloat(styles.marginLeft||0)+parseFloat(styles.marginRight||0);var result={width:element.offsetWidth+y,height:element.offsetHeight+x};return result}function getOppositePlacement(placement){var hash={left:"right",right:"left",bottom:"top",top:"bottom"};return placement.replace(/left|right|bottom|top/g,function(matched){return hash[matched]})}function getPopperOffsets(popper,referenceOffsets,placement){placement=placement.split("-")[0];var popperRect=getOuterSizes(popper);var popperOffsets={width:popperRect.width,height:popperRect.height};var isHoriz=["right","left"].indexOf(placement)!==-1;var mainSide=isHoriz?"top":"left";var secondarySide=isHoriz?"left":"top";var measurement=isHoriz?"height":"width";var secondaryMeasurement=!isHoriz?"height":"width";popperOffsets[mainSide]=referenceOffsets[mainSide]+referenceOffsets[measurement]/2-popperRect[measurement]/2;if(placement===secondarySide){popperOffsets[secondarySide]=referenceOffsets[secondarySide]-popperRect[secondaryMeasurement]}else{popperOffsets[secondarySide]=referenceOffsets[getOppositePlacement(secondarySide)]}return popperOffsets}function getReferenceOffsets(state,popper,reference){var fixedPosition=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var commonOffsetParent=fixedPosition?getFixedPositionOffsetParent(popper):findCommonOffsetParent(popper,getReferenceNode(reference));return getOffsetRectRelativeToArbitraryNode(reference,commonOffsetParent,fixedPosition)}function getSupportedPropertyName(property){var prefixes=[false,"ms","Webkit","Moz","O"];var upperProp=property.charAt(0).toUpperCase()+property.slice(1);for(var i=0;i<prefixes.length;i++){var prefix=prefixes[i];var toCheck=prefix?""+prefix+upperProp:property;if(typeof document.body.style[toCheck]!=="undefined"){return toCheck}}return null}function isFunction(functionToCheck){var getType={};return functionToCheck&&getType.toString.call(functionToCheck)==="[object Function]"}function isModifierEnabled(modifiers,modifierName){return modifiers.some(function(_ref){var name=_ref.name,enabled=_ref.enabled;return enabled&&name===modifierName})}function isModifierRequired(modifiers,requestingName,requestedName){var requesting=find(modifiers,function(_ref){var name=_ref.name;return name===requestingName});var isRequired=!!requesting&&modifiers.some(function(modifier){return modifier.name===requestedName&&modifier.enabled&&modifier.order<requesting.order});if(!isRequired){var _requesting="`"+requestingName+"`";var requested="`"+requestedName+"`";console.warn(requested+" modifier is required by "+_requesting+" modifier in order to work, be sure to include it before "+_requesting+"!")}return isRequired}function isNumeric(n){return n!==""&&!isNaN(parseFloat(n))&&isFinite(n)}function getWindow(element){var ownerDocument=element.ownerDocument;return ownerDocument?ownerDocument.defaultView:window}function removeEventListeners(reference,state){getWindow(reference).removeEventListener("resize",state.updateBound);state.scrollParents.forEach(function(target){target.removeEventListener("scroll",state.updateBound)});state.updateBound=null;state.scrollParents=[];state.scrollElement=null;state.eventsEnabled=false;return state}function runModifiers(modifiers,data,ends){var modifiersToRun=ends===undefined?modifiers:modifiers.slice(0,findIndex(modifiers,"name",ends));modifiersToRun.forEach(function(modifier){if(modifier["function"]){console.warn("`modifier.function` is deprecated, use `modifier.fn`!")}var fn=modifier["function"]||modifier.fn;if(modifier.enabled&&isFunction(fn)){data.offsets.popper=getClientRect(data.offsets.popper);data.offsets.reference=getClientRect(data.offsets.reference);data=fn(data,modifier)}});return data}function setAttributes(element,attributes){Object.keys(attributes).forEach(function(prop){var value=attributes[prop];if(value!==false){element.setAttribute(prop,attributes[prop])}else{element.removeAttribute(prop)}})}function setStyles(element,styles){Object.keys(styles).forEach(function(prop){var unit="";if(["width","height","top","right","bottom","left"].indexOf(prop)!==-1&&isNumeric(styles[prop])){unit="px"}element.style[prop]=styles[prop]+unit})}function attachToScrollParents(scrollParent,event,callback,scrollParents){var isBody=scrollParent.nodeName==="BODY";var target=isBody?scrollParent.ownerDocument.defaultView:scrollParent;target.addEventListener(event,callback,{passive:true});if(!isBody){attachToScrollParents(getScrollParent(target.parentNode),event,callback,scrollParents)}scrollParents.push(target)}function setupEventListeners(reference,options,state,updateBound){state.updateBound=updateBound;getWindow(reference).addEventListener("resize",state.updateBound,{passive:true});var scrollElement=getScrollParent(reference);attachToScrollParents(scrollElement,"scroll",state.updateBound,state.scrollParents);state.scrollElement=scrollElement;state.eventsEnabled=true;return state}var index={computeAutoPlacement:computeAutoPlacement,debounce:debounce,findIndex:findIndex,getBordersSize:getBordersSize,getBoundaries:getBoundaries,getBoundingClientRect:getBoundingClientRect,getClientRect:getClientRect,getOffsetParent:getOffsetParent,getOffsetRect:getOffsetRect,getOffsetRectRelativeToArbitraryNode:getOffsetRectRelativeToArbitraryNode,getOuterSizes:getOuterSizes,getParentNode:getParentNode,getPopperOffsets:getPopperOffsets,getReferenceOffsets:getReferenceOffsets,getScroll:getScroll,getScrollParent:getScrollParent,getStyleComputedProperty:getStyleComputedProperty,getSupportedPropertyName:getSupportedPropertyName,getWindowSizes:getWindowSizes,isFixed:isFixed,isFunction:isFunction,isModifierEnabled:isModifierEnabled,isModifierRequired:isModifierRequired,isNumeric:isNumeric,removeEventListeners:removeEventListeners,runModifiers:runModifiers,setAttributes:setAttributes,setStyles:setStyles,setupEventListeners:setupEventListeners};exports.computeAutoPlacement=computeAutoPlacement;exports.debounce=debounce;exports.findIndex=findIndex;exports.getBordersSize=getBordersSize;exports.getBoundaries=getBoundaries;exports.getBoundingClientRect=getBoundingClientRect;exports.getClientRect=getClientRect;exports.getOffsetParent=getOffsetParent;exports.getOffsetRect=getOffsetRect;exports.getOffsetRectRelativeToArbitraryNode=getOffsetRectRelativeToArbitraryNode;exports.getOuterSizes=getOuterSizes;exports.getParentNode=getParentNode;exports.getPopperOffsets=getPopperOffsets;exports.getReferenceOffsets=getReferenceOffsets;exports.getScroll=getScroll;exports.getScrollParent=getScrollParent;exports.getStyleComputedProperty=getStyleComputedProperty;exports.getSupportedPropertyName=getSupportedPropertyName;exports.getWindowSizes=getWindowSizes;exports.isFixed=isFixed;exports.isFunction=isFunction;exports.isModifierEnabled=isModifierEnabled;exports.isModifierRequired=isModifierRequired;exports.isNumeric=isNumeric;exports.removeEventListeners=removeEventListeners;exports.runModifiers=runModifiers;exports.setAttributes=setAttributes;exports.setStyles=setStyles;exports.setupEventListeners=setupEventListeners;exports["default"]=index;Object.defineProperty(exports,"__esModule",{value:true})})}if(typeof ToolTip==="undefined"){(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory(require("popper.js")):typeof define==="function"&&define.amd?define(["popper.js"],factory):global.Tooltip=factory(global.Popper)})(this,function(Popper){"use strict";Popper=Popper&&Popper.hasOwnProperty("default")?Popper["default"]:Popper;function isFunction(functionToCheck){var getType={};return functionToCheck&&getType.toString.call(functionToCheck)==="[object Function]"}var classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}};var createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var DEFAULT_OPTIONS={container:false,delay:0,html:false,placement:"top",title:"",template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",offset:0,arrowSelector:".tooltip-arrow, .tooltip__arrow",innerSelector:".tooltip-inner, .tooltip__inner"};var Tooltip=function(){function Tooltip(reference,options){classCallCheck(this,Tooltip);_initialiseProps.call(this);options=_extends({},DEFAULT_OPTIONS,options);reference.jquery&&(reference=reference[0]);this.reference=reference;this.options=options;var events=typeof options.trigger==="string"?options.trigger.split(" ").filter(function(trigger){return["click","hover","focus"].indexOf(trigger)!==-1}):[];this._isOpen=false;this._popperOptions={};this._setEventListeners(reference,events,options)}createClass(Tooltip,[{key:"_create",value:function _create(reference,template,title,allowHtml){var tooltipGenerator=window.document.createElement("div");tooltipGenerator.innerHTML=template.trim();var tooltipNode=tooltipGenerator.childNodes[0];tooltipNode.id="tooltip_"+Math.random().toString(36).substr(2,10);tooltipNode.setAttribute("aria-hidden","false");var titleNode=tooltipGenerator.querySelector(this.options.innerSelector);this._addTitleContent(reference,title,allowHtml,titleNode);return tooltipNode}},{key:"_addTitleContent",value:function _addTitleContent(reference,title,allowHtml,titleNode){if(title.nodeType===1||title.nodeType===11){allowHtml&&titleNode.appendChild(title)}else if(isFunction(title)){var titleText=title.call(reference);allowHtml?titleNode.innerHTML=titleText:titleNode.textContent=titleText}else{allowHtml?titleNode.innerHTML=title:titleNode.textContent=title}}},{key:"_show",value:function _show(reference,options){if(this._isOpen&&!this._isOpening){return this}this._isOpen=true;if(this._tooltipNode){this._tooltipNode.style.visibility="visible";this._tooltipNode.setAttribute("aria-hidden","false");this.popperInstance.update();return this}var title=reference.getAttribute("title")||options.title;if(!title){return this}var tooltipNode=this._create(reference,options.template,title,options.html);reference.setAttribute("aria-describedby",tooltipNode.id);var container=this._findContainer(options.container,reference);this._append(tooltipNode,container);this._popperOptions=_extends({},options.popperOptions,{placement:options.placement});this._popperOptions.modifiers=_extends({},this._popperOptions.modifiers,{arrow:{element:this.options.arrowSelector},offset:{offset:options.offset}});if(options.boundariesElement){this._popperOptions.modifiers.preventOverflow={boundariesElement:options.boundariesElement}}this.popperInstance=new Popper(reference,tooltipNode,this._popperOptions);this._tooltipNode=tooltipNode;return this}},{key:"_hide",value:function _hide(){if(!this._isOpen){return this}this._isOpen=false;this._tooltipNode.style.visibility="hidden";this._tooltipNode.setAttribute("aria-hidden","true");return this}},{key:"_dispose",value:function _dispose(){var _this=this;this._events.forEach(function(_ref){var func=_ref.func,event=_ref.event;_this.reference.removeEventListener(event,func)});this._events=[];if(this._tooltipNode){this._hide();this.popperInstance.destroy();if(!this.popperInstance.options.removeOnDestroy){this._tooltipNode.parentNode.removeChild(this._tooltipNode);this._tooltipNode=null}}return this}},{key:"_findContainer",value:function _findContainer(container,reference){if(typeof container==="string"){container=window.document.querySelector(container)}else if(container===false){container=reference.parentNode}return container}},{key:"_append",value:function _append(tooltipNode,container){container.appendChild(tooltipNode)}},{key:"_setEventListeners",value:function _setEventListeners(reference,events,options){var _this2=this;var directEvents=[];var oppositeEvents=[];events.forEach(function(event){switch(event){case"hover":directEvents.push("mouseenter");oppositeEvents.push("mouseleave");break;case"focus":directEvents.push("focus");oppositeEvents.push("blur");break;case"click":directEvents.push("click");oppositeEvents.push("click");break}});directEvents.forEach(function(event){var func=function func(evt){if(_this2._isOpening===true){return}evt.usedByTooltip=true;_this2._scheduleShow(reference,options.delay,options,evt)};_this2._events.push({event:event,func:func});reference.addEventListener(event,func)});oppositeEvents.forEach(function(event){var func=function func(evt){if(evt.usedByTooltip===true){return}_this2._scheduleHide(reference,options.delay,options,evt)};_this2._events.push({event:event,func:func});reference.addEventListener(event,func);if(event==="click"&&options.closeOnClickOutside){document.addEventListener("mousedown",function(e){if(!_this2._isOpening){return}var popper=_this2.popperInstance.popper;if(reference.contains(e.target)||popper.contains(e.target)){return}func(e)},true)}})}},{key:"_scheduleShow",value:function _scheduleShow(reference,delay,options){var _this3=this;this._isOpening=true;var computedDelay=delay&&delay.show||delay||0;this._showTimeout=window.setTimeout(function(){return _this3._show(reference,options)},computedDelay)}},{key:"_scheduleHide",value:function _scheduleHide(reference,delay,options,evt){var _this4=this;this._isOpening=false;var computedDelay=delay&&delay.hide||delay||0;window.setTimeout(function(){window.clearTimeout(_this4._showTimeout);if(_this4._isOpen===false){return}if(!document.body.contains(_this4._tooltipNode)){return}if(evt.type==="mouseleave"){var isSet=_this4._setTooltipNodeEvent(evt,reference,delay,options);if(isSet){return}}_this4._hide(reference,options)},computedDelay)}},{key:"_updateTitleContent",value:function _updateTitleContent(title){if(typeof this._tooltipNode==="undefined"){if(typeof this.options.title!=="undefined"){this.options.title=title}return}var titleNode=this._tooltipNode.parentNode.querySelector(this.options.innerSelector);this._clearTitleContent(titleNode,this.options.html,this.reference.getAttribute("title")||this.options.title);this._addTitleContent(this.reference,title,this.options.html,titleNode);this.options.title=title;this.popperInstance.update()}},{key:"_clearTitleContent",value:function _clearTitleContent(titleNode,allowHtml,lastTitle){if(lastTitle.nodeType===1||lastTitle.nodeType===11){allowHtml&&titleNode.removeChild(lastTitle)}else{allowHtml?titleNode.innerHTML="":titleNode.textContent=""}}}]);return Tooltip}();var _initialiseProps=function _initialiseProps(){var _this5=this;this.show=function(){return _this5._show(_this5.reference,_this5.options)};this.hide=function(){return _this5._hide()};this.dispose=function(){return _this5._dispose()};this.toggle=function(){if(_this5._isOpen){return _this5.hide()}else{return _this5.show()}};this.updateTitleContent=function(title){return _this5._updateTitleContent(title)};this._events=[];this._setTooltipNodeEvent=function(evt,reference,delay,options){var relatedreference=evt.relatedreference||evt.toElement||evt.relatedTarget;var callback=function callback(evt2){var relatedreference2=evt2.relatedreference||evt2.toElement||evt2.relatedTarget;_this5._tooltipNode.removeEventListener(evt.type,callback);if(!reference.contains(relatedreference2)){_this5._scheduleHide(reference,options.delay,options,evt2)}};if(_this5._tooltipNode.contains(relatedreference)){_this5._tooltipNode.addEventListener(evt.type,callback);return true}return false}};return Tooltip})}var Config={version:"3.0.4",features:[],validLangs:[],location:{mapping:{},registering:{location:false,geofencing:false}},crypto:false,cordova:false,fullNative:true,geoGroup:{}};if(!!!mgTemplates)var mgTemplates={};mgTemplates["aroundme-categories"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");if(t.s(t.f("categories",c,p,1),c,p,0,15,102,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <option value="');t.b(t.v(t.f("value",c,p,0)));t.b('" ');if(t.s(t.f("isSelected",c,p,1),c,p,0,59,67,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("selected")});c.pop()}t.b(">");t.b(t.v(t.f("label",c,p,0)));t.b("</option>");t.b("\n"+i)});c.pop()}return t.fl()},partials:{},subs:{}});mgTemplates["aroundme"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div id="am-container">');t.b("\n"+i);t.b('  <div id="am-nb-results">');t.b("\n"+i);t.b("    <div>");t.b("\n"+i);t.b('      <span class="am-label">');t.b(t.v(t.f("nbResultsLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b('      <input type="number" value="');t.b(t.v(t.f("nbResults",c,p,0)));t.b('" />');t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("  </div>");t.b("\n");t.b("\n"+i);t.b('  <div id="am-type">');t.b("\n"+i);t.b("    <div>");t.b("\n"+i);t.b('      <span class="am-label">');t.b(t.v(t.f("typeLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("      <select>");t.b("\n"+i);if(t.s(t.f("types",c,p,1),c,p,0,301,400,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('        <option value="');t.b(t.v(t.f("value",c,p,0)));t.b('" ');if(t.s(t.f("isSelected",c,p,1),c,p,0,351,359,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("selected")});c.pop()}t.b(">");t.b(t.v(t.f("value",c,p,0)));t.b("</option>");t.b("\n"+i)});c.pop()}t.b("      </select>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("  </div>");t.b("\n");t.b("\n"+i);t.b('  <div id="am-category">');t.b("\n"+i);t.b("    <div>");t.b("\n"+i);t.b('      <span class="am-label">');t.b(t.v(t.f("categoryLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("      <select multiple>");t.b(t.t(t.f("categoriesHtml",c,p,0)));t.b("</select>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("  </div>");t.b("\n");t.b("\n"+i);if(t.s(t.f("isStateDisplayed",c,p,1),c,p,0,636,903,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <div id="am-state">');t.b("\n"+i);t.b("    <div>");t.b("\n"+i);t.b('      <span class="am-label">');t.b(t.v(t.f("stateLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b('      <input type="checkbox" ');if(t.s(t.f("isStateChecked",c,p,1),c,p,0,768,775,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("checked")});c.pop()}t.b("/>");t.b("\n"+i);t.b("      <textarea ");if(!t.s(t.f("isStateChecked",c,p,1),c,p,1,0,0,"")){t.b("disabled")}t.b(">");t.b(t.v(t.f("state",c,p,0)));t.b("</textarea>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("  </div>");t.b("\n"+i)});c.pop()}t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["button"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="ui button ');t.b(t.v(t.f("classes",c,p,0)));t.b('">');t.b("\n"+i);t.b("    ");t.b(t.v(t.f("title",c,p,0)));t.b("\n"+i);t.b("    ");t.b(t.t(t.f("extra",c,p,0)));t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["compasscalibration"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<p><span class="compass-calibration-text">');t.b(t.v(t.f("text",c,p,0)));t.b("</span></p>");t.b("\n"+i);t.b('<p style="display:none"><span class="compass-calibration-image"></span></p>');return t.fl()},partials:{},subs:{}});mgTemplates["legend"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="legend-modal">');t.b("\n");t.b("\n"+i);if(t.s(t.f("hasHalls",c,p,1),c,p,0,43,293,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <div class="legend-modal-halls">');t.b("\n"+i);if(t.s(t.f("legendHalls",c,p,1),c,p,0,99,265,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div class="legend-row-container">');t.b("\n"+i);t.b('      <div class="icon-legend">');t.b("\n"+i);t.b("        ");t.b(t.v(t.f("icon",c,p,0)));t.b("\n"+i);t.b("      </div>");t.b("\n"+i);t.b('      <span class="text-legend">');t.b(t.v(t.f("title",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}t.b("  </div>");t.b("\n"+i)});c.pop()}t.b("\n"+i);if(t.s(t.f("hasPoiStateFeature",c,p,1),c,p,0,333,1030,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <div class="legend-modal-poi-state">');t.b("\n"+i);t.b('    <div class="legend-category-title">');t.b(t.v(t.f("poiStateTitle",c,p,0)));t.b("</div>");t.b("\n"+i);if(t.s(t.f("poiStyles",c,p,1),c,p,0,454,1004,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div data-icon-id="');t.b(t.v(t.f("id",c,p,0)));t.b('" class="legend-row-container">');t.b("\n"+i);t.b('      <div class="icon-legend">');t.b("\n"+i);t.b('        <svg version="1.1" id="Calque_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 ');t.b(t.v(t.f("size",c,p,0)));t.b(" ");t.b(t.v(t.f("size",c,p,0)));t.b('" style="enable-background:new 0 0 ');t.b(t.v(t.f("size",c,p,0)));t.b(" ");t.b(t.v(t.f("size",c,p,0)));t.b(';" xml:space="preserve">');t.b("\n"+i);t.b('          <rect style="');t.b(t.v(t.f("style",c,p,0)));t.b('stroke:#9D4F99;stroke-width:3;stroke-miterlimit:10;" width="');t.b(t.v(t.f("size",c,p,0)));t.b('" height="');t.b(t.v(t.f("size",c,p,0)));t.b('"/>');t.b("\n"+i);t.b("        </svg>");t.b("\n"+i);t.b("      </div>");t.b("\n"+i);t.b('      <span class="text-legend">');t.b(t.v(t.f("label",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}t.b("  </div>");t.b("\n"+i)});c.pop()}t.b("\n"+i);if(t.s(t.f("hasIcons",c,p,1),c,p,0,1070,1805,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <div class="legend-modal-icons">');t.b("\n"+i);if(t.s(t.f("legendIcons",c,p,1),c,p,0,1126,1777,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div data-icon-id="');t.b(t.v(t.f("id",c,p,0)));t.b('" class="legend-row-container ');if(t.s(t.f("lump",c,p,1),c,p,0,1195,1215,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("legend-row-clickable")});c.pop()}t.b('">');t.b("\n"+i);t.b('      <div class="icon-legend">');t.b("\n"+i);if(t.s(t.d("icon.isSecure",c,p,1),c,p,0,1285,1511,"{{ }}")){t.rs(c,p,function(c,p,t){if(t.s(t.d("icon.isSvg",c,p,1),c,p,0,1311,1381,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('            <i class="icon-legend-svg">');t.b(t.t(t.d("icon.icon",c,p,0)));t.b("</i>");t.b("\n"+i)});c.pop()}if(!t.s(t.d("icon.isSvg",c,p,1),c,p,1,0,0,"")){t.b('            <img src="');t.b(t.v(t.d("icon.icon",c,p,0)));t.b('" alt="');t.b(t.v(t.f("title",c,p,0)));t.b('">');t.b("\n"+i)}});c.pop()}if(!t.s(t.d("icon.isSecure",c,p,1),c,p,1,0,0,"")){t.b('          <img src="');t.b(t.v(t.d("icon.icon",c,p,0)));t.b('" alt="');t.b(t.v(t.f("title",c,p,0)));t.b('">');t.b("\n"+i)}t.b("      </div>");t.b("\n"+i);t.b('      <span class="text-legend">');t.b(t.v(t.f("title",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("      ");if(t.s(t.f("lump",c,p,1),c,p,0,1713,1752,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div class="legend-aroundme-btn"></div>')});c.pop()}t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}t.b("  </div>");t.b("\n"+i)});c.pop()}t.b("\n"+i);if(t.s(t.f("hasFlags",c,p,1),c,p,0,1835,2135,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('  <div class="legend-modal-flags">');t.b("\n"+i);if(t.s(t.f("legendFlags",c,p,1),c,p,0,1891,2107,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div data-icon-id="');t.b(t.v(t.f("id",c,p,0)));t.b('" class="legend-row-container">');t.b("\n"+i);t.b('      <div class="icon-legend">');t.b("\n"+i);t.b('        <img src="');t.b(t.v(t.f("icon",c,p,0)));t.b('" alt="');t.b(t.v(t.f("title",c,p,0)));t.b('">');t.b("\n"+i);t.b("      </div>");t.b("\n"+i);t.b('      <span class="text-legend">');t.b(t.v(t.f("title",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}t.b("  </div>");t.b("\n"+i)});c.pop()}t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["list"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<ul class="list-data" data-place-id="');t.b(t.v(t.f("placeId",c,p,0)));t.b('">');t.b("\n"+i);if(t.s(t.f("members",c,p,1),c,p,0,67,725,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <li class="link poi-list-item" data-id="');t.b(t.v(t.f("_id",c,p,0)));t.b('" data-type="');t.b(t.v(t.f("type",c,p,0)));t.b('" data-collection="');t.b(t.v(t.d("collection.id",c,p,0)));t.b('">');t.b("\n"+i);t.b('        <div class="icon-poi" ');if(!t.s(t.f("icon",c,p,1),c,p,1,0,0,"")){t.b('style="display:none;"')}t.b(">");t.b("\n"+i);if(t.s(t.d("icon.isSecure",c,p,1),c,p,0,280,531,"{{ }}")){t.rs(c,p,function(c,p,t){if(t.s(t.d("icon.isSvg",c,p,1),c,p,0,308,381,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('                <i class="icon-poi-svg">');t.b(t.t(t.d("icon.icon",c,p,0)));t.b("</i>");t.b("\n"+i)});c.pop()}if(!t.s(t.d("icon.isSvg",c,p,1),c,p,1,0,0,"")){t.b('                <img src="');t.b(t.v(t.d("icon.icon",c,p,0)));t.b('" alt="');t.b(t.v(t.d("icon.legend",c,p,0)));t.b('" />');t.b("\n"+i)}});c.pop()}if(!t.s(t.d("icon.isSecure",c,p,1),c,p,1,0,0,"")){t.b('                <img src="');t.b(t.v(t.d("icon.icon",c,p,0)));t.b('" alt="');t.b(t.v(t.d("icon.legend",c,p,0)));t.b('" />');t.b("\n"+i)}t.b("        </div>");t.b("\n"+i);t.b("        ");t.b(t.v(t.f("title",c,p,0)));t.b("\n"+i);t.b("    </li>");t.b("\n"+i)});c.pop()}if(!t.s(t.f("members",c,p,1),c,p,1,0,0,"")){t.b("    <li>");t.b(t.v(t.f("noData",c,p,0)));t.b("</li>");t.b("\n"+i)}t.b("</ul>");return t.fl()},partials:{},subs:{}});mgTemplates["map"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");if(t.s(t.f("hasMapTitle",c,p,1),c,p,0,16,70,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div class="map-title">');t.b("\n"+i);t.b("    <div>&nbsp;</div>");t.b("\n"+i);t.b("</div>");t.b("\n"+i)});c.pop()}t.b('<div id="mg-notifications-anchor">');t.b("\n"+i);t.b("    <div>&nbsp;</div>");t.b("\n"+i);t.b("</div>");t.b("\n"+i);if(t.s(t.f("hasThumbnail",c,p,1),c,p,0,168,230,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div id="thumbnail">');t.b("\n"+i);t.b('    <div id="smallwindow"></div>');t.b("\n"+i);t.b("</div>");t.b("\n"+i)});c.pop()}t.b("\x3c!-- Synoptic --\x3e");t.b("\n"+i);t.b('<div id="synoptic-container" class="display-none-f">');t.b("\n"+i);t.b('    <div id="synoptic-closebutton-container">');t.b("\n"+i);t.b('        <div class="mg-cross-close-btn"></div>');t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div id="synoptic-pin-containers"></div>');t.b("\n"+i);t.b('    <div id="synoptic-svg-container"></div>');t.b("\n"+i);t.b("</div>");t.b("\n"+i);t.b("\x3c!-- Itinerary --\x3e");t.b("\n"+i);t.b('<div class="iti-infos-container display-none-f">');t.b("\n"+i);t.b('    <div class="iti-infos">');t.b("\n"+i);t.b('        <div class="iti-infos-text">');t.b("\n"+i);t.b('            <div class="iti-infos-text-destination"></div>');t.b("\n"+i);t.b('            <div class="iti-infos-text-step-legend"></div>');t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div id="iti-buttons-container">');t.b("\n"+i);t.b('        <div id="iti-buttons">');t.b("\n"+i);t.b('            <div id="iti-top-buttons">');t.b("\n"+i);t.b('                <div class="btn-iti btn-iti-arrow btn-iti-arrow-left" title="');t.b(t.v(t.d("_labels.itiArrowLeftTitle",c,p,0)));t.b('"></div>');t.b("\n"+i);t.b("                ");if(t.s(t.f("hasButtonReloadIti",c,p,1),c,p,0,1057,1156,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div class="btn-iti btn-iti-reload" href="#" title="');t.b(t.v(t.d("_labels.itiReloadTitle",c,p,0)));t.b('"><span></span></div>')});c.pop()}t.b("\n"+i);t.b('                <div class="btn-iti btn-iti-clear" href="#" title="');t.b(t.v(t.d("_labels.itiClearTitle",c,p,0)));t.b('"><span></span></div>');t.b("\n"+i);t.b('                <div class="btn-iti btn-iti-arrow btn-iti-arrow-right" title="');t.b(t.v(t.d("_labels.itiArrowRightTitle",c,p,0)));t.b('"></div>');t.b("\n"+i);t.b("            </div>");t.b("\n"+i);t.b('            <div class="btn-iti-rsteps" title="');t.b(t.v(t.d("_labels.itiRoutingsStepsTitle",c,p,0)));t.b('"></div>');t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("</div>");t.b("\n"+i);if(t.s(t.f("zones",c,p,1),c,p,0,1562,2232,"{{ }}")){t.rs(c,p,function(c,p,t){if(t.s(t.f("hasfloors",c,p,1),c,p,0,1577,1657,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div class="mg-buttons mg-buttons-vertical elevator" id="elevator_');t.b(t.v(t.f("id",c,p,0)));t.b('">');t.b("\n"+i)});c.pop()}if(t.s(t.f("hasfloors",c,p,1),c,p,0,1690,2176,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div class="elevator-up-arrow">');t.b("\n"+i);t.b("        <div></div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="elevator-floor-list" data-prevent-scroll-on-this>');t.b("\n"+i);t.b('        <nav data-zone="');t.b(t.v(t.f("id",c,p,0)));t.b('">');t.b("\n"+i);if(t.s(t.f("floorsData",c,p,1),c,p,0,1884,2061,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('            <a id="asc_');t.b(t.v(t.f("id",c,p,0)));t.b("_");t.b(t.v(t.f("floorId",c,p,0)));t.b('" class="mg-button btn-floornumber" data-floor="');t.b(t.v(t.f("floorId",c,p,0)));t.b('">');t.b("\n"+i);t.b("                <span>");t.b(t.v(t.f("floorLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("            </a>");t.b("\n"+i)});c.pop()}t.b("        </nav>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="elevator-down-arrow">');t.b("\n"+i);t.b("        <div></div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}if(t.s(t.f("hasfloors",c,p,1),c,p,0,2209,2217,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("</div>");t.b("\n"+i)});c.pop()}});c.pop()}t.b('<div id="mapstack" touch-action="none" style="touch-action: none;">');t.b("\n"+i);if(t.s(t.f("zones",c,p,1),c,p,0,2325,2508,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div class="zone display-none-f" id="zone_');t.b(t.v(t.f("id",c,p,0)));t.b('">');t.b("\n"+i);if(t.s(t.f("floorsData",c,p,1),c,p,0,2404,2477,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('        <div class="floor" id="floor_');t.b(t.v(t.f("id",c,p,0)));t.b("_");t.b(t.v(t.f("floorId",c,p,0)));t.b('"></div>');t.b("\n"+i)});c.pop()}t.b("    </div>");t.b("\n"+i)});c.pop()}if(t.s(t.f("zones",c,p,1),c,p,0,2533,2815,"{{ }}")){t.rs(c,p,function(c,p,t){if(t.s(t.f("floorsData",c,p,1),c,p,0,2553,2795,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("    ");t.b(t.v(t.f("* Order is very important, do not change *",c,p,0)));t.b("\n"+i);t.b('    <div class="mg-icons" id="mg-icons_');t.b(t.v(t.f("id",c,p,0)));t.b("_");t.b(t.v(t.f("floorId",c,p,0)));t.b('"></div>');t.b("\n"+i);t.b('    <div class="labels" id="labels_');t.b(t.v(t.f("id",c,p,0)));t.b("_");t.b(t.v(t.f("floorId",c,p,0)));t.b('"></div>');t.b("\n"+i);t.b('    <div class="pins" id="pins_');t.b(t.v(t.f("id",c,p,0)));t.b("_");t.b(t.v(t.f("floorId",c,p,0)));t.b('"></div>');t.b("\n"+i)});c.pop()}});c.pop()}t.b("</div>");t.b("\n"+i);t.b("\x3c!-- Bottom buttons --\x3e");t.b("\n"+i);t.b('<div class="mg-buttons mg-buttons-horizontal bottom-bar">');t.b("\n"+i);t.b("    <nav>");t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonBack",c,p,1),c,p,0,2951,2998,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-back"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonHome",c,p,1),c,p,0,3043,3090,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-home"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonClearAndResetZoom",c,p,1),c,p,0,3148,3257,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-clearAndResetZoom" title="');t.b(t.v(t.d("_labels.buttonClearAndResetZoomTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonClear",c,p,1),c,p,0,3316,3401,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-clear" title="');t.b(t.v(t.d("_labels.buttonClearTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonResetZoom",c,p,1),c,p,0,3452,3545,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-resetZoom" title="');t.b(t.v(t.d("_labels.buttonResetZoomTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonPosition",c,p,1),c,p,0,3599,3690,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-position" title="');t.b(t.v(t.d("_labels.buttonPositionTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonRoute",c,p,1),c,p,0,3740,3825,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-route" title="');t.b(t.v(t.d("_labels.buttonRouteTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonAroundMe",c,p,1),c,p,0,3875,3966,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-aroundme" title="');t.b(t.v(t.d("_labels.buttonAroundMeTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonGeoGroup",c,p,1),c,p,0,4019,4110,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-geogroup" title="');t.b(t.v(t.d("_labels.buttonGeoGroupTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonGeoPush",c,p,1),c,p,0,4162,4212,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-geopush"><span></span></a>')});c.pop()}t.b("\n"+i);if(t.s(t.f("hasButtonZoom",c,p,1),c,p,0,4260,4386,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('        <a class="mg-button btn-zoomin"><span></span></a>');t.b("\n"+i);t.b('        <a class="mg-button btn-zoomout"><span></span></a>');t.b("\n"+i)});c.pop()}t.b("        ");if(t.s(t.f("hasButtonSearch",c,p,1),c,p,0,4433,4520,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-search" title="');t.b(t.v(t.d("_labels.buttonSearchTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonServices",c,p,1),c,p,0,4571,4662,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-services" title="');t.b(t.v(t.d("_labels.buttonServicesTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("        ");if(t.s(t.f("hasButtonLegend",c,p,1),c,p,0,4713,4800,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<a class="mg-button btn-legend" title="');t.b(t.v(t.d("_labels.buttonLegendTitle",c,p,0)));t.b('"><span></span></a>')});c.pop()}t.b("\n"+i);t.b("    </nav>");t.b("\n"+i);t.b("</div>");t.b("\n"+i);t.b("\x3c!-- Marker for itineraries --\x3e");t.b("\n"+i);t.b("<svg>");t.b("\n"+i);t.b("    <g>");t.b("\n"+i);t.b("        <defs>");t.b("\n"+i);t.b('            <marker viewBox="0 0 15 15" id="markerArrowEmpty" markerWidth="13" markerHeight="13" refX="2.2" refY="3.5" orient="auto" markerUnits="strokeWidth">');t.b("\n"+i);t.b('                <path d="M2,2 L2,5 L3.5,3.5 L2,2" style="opacity: 1;pointer-events: none;stroke: #ff0000;stroke-width: 0.5px;fill: #ff0000;stroke-linejoin:round;stroke-linecap:round;"></path>');t.b("\n"+i);t.b("            </marker>");t.b("\n"+i);t.b("        </defs>");t.b("\n"+i);t.b("    </g>");t.b("\n"+i);t.b("</svg>");t.b("\n"+i);t.b('<div id="mg-ws-status" title="WebSocket connection status"></div>');t.b("\n"+i);if(t.s(t.f("hasWatermark",c,p,1),c,p,0,5389,5474,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<div id="ms-watermark">Mobigeo v');t.b(t.v(t.f("mobigeoVersion",c,p,0)));t.b(" ©Mobile-Spot ");t.b(t.v(t.f("currentYear",c,p,0)));t.b("</div>")});c.pop()}return t.fl()},partials:{},subs:{}});mgTemplates["modal"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="mobigeo-modal ');if(t.s(t.f("isMessage",c,p,1),c,p,0,40,61,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mobigeo-modal-message")});c.pop()}t.b(" ");if(!t.s(t.f("buttons",c,p,1),c,p,1,0,0,"")){t.b("modal-no-button")}t.b('" ');if(t.s(t.f("skipFadeIn",c,p,1),c,p,0,132,164,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('style="transition-duration: 0s;"')});c.pop()}t.b(" >");t.b("\n"+i);t.b('    <div class="mobigeo-modal-top-buttons" >');t.b("\n"+i);t.b('        <div style="display: inline-block;">');t.b("\n"+i);t.b('            <span class="mobigeo-modal-loader display-none-f">');t.b("\n"+i);t.b("                <span>l</span>");t.b("\n"+i);t.b("            </span>");t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("        ");if(!t.s(t.f("hideCrossClose",c,p,1),c,p,1,0,0,"")){t.b('<span class="mobigeo-modal-cross-close mg-cross-close-btn"></span>')}t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="mobigeo-modal-header" ');if(!t.s(t.f("title",c,p,1),c,p,1,0,0,"")){t.b('style="display:none;"')}t.b(">");t.b("\n"+i);t.b("        <div>");t.b(t.t(t.f("title",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("        <hr>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="mobigeo-modal-content" data-prevent-scroll-on-this ');if(t.s(t.f("useTransition",c,p,1),c,p,0,746,834,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('style="transition-property: width height; transition-duration: ');t.b(t.v(t.f("transitionDuration",c,p,0)));t.b('s" ')});c.pop()}t.b(">");t.b(t.t(t.f("content",c,p,0)));t.b("</div>");t.b("\n"+i);t.b('    <div class="mobigeo-modal-buttons">');t.b("\n"+i);t.b("        <hr>");t.b("\n"+i);t.b('        <div class="mobigeo-modal-buttons-container">');t.b("\n"+i);if(t.s(t.f("buttons",c,p,1),c,p,0,1004,1086,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('            <span class="');t.b(t.v(t.f("btnNamePrefix",c,p,0)));t.b(t.v(t.f("name",c,p,0)));t.b('">');t.b(t.v(t.f("title",c,p,0)));t.b("</span>");t.b("\n"+i)});c.pop()}t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["notificationlist"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<ul class="notif-list">');t.b("\n"+i);if(t.s(t.f("notifications",c,p,1),c,p,0,42,268,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("  <li>");t.b("\n"+i);t.b('    <div class="notif-title">');t.b("\n"+i);t.b('      <span class="notif-zone-name">');t.b(t.v(t.f("zoneName",c,p,0)));t.b("</span>");t.b("\n"+i);t.b('      <span class="notif-date"> - ');t.b(t.v(t.f("getFormatedDateTime",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="notif-message">');t.b(t.t(t.f("text",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("  </li>");t.b("\n"+i)});c.pop()}t.b("</ul>");return t.fl()},partials:{},subs:{}});mgTemplates["skeleton"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="');t.b(t.v(t.f("containerClass",c,p,0)));t.b(" ");if(t.s(t.f("isIE",c,p,1),c,p,0,40,48,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mg-is-ie")});c.pop()}t.b(" ");if(t.s(t.f("isEdge",c,p,1),c,p,0,69,79,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mg-is-edge")});c.pop()}t.b(" ");if(t.s(t.f("isSafari",c,p,1),c,p,0,104,116,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mg-is-safari")});c.pop()}t.b('">');t.b("\n");t.b("\n"+i);t.b('    <div class="mobigeo-loader">');t.b("\n"+i);t.b("        <div>");t.b("\n"+i);t.b('            <div class="mobigeo-loader-icon"></div>');t.b("\n"+i);t.b('            <div class="mobigeo-loader-content">');t.b(t.v(t.f("loadingText",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n");t.b("\n"+i);t.b('    <div id="map-display"></div>');t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["draggableLabel"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<li data-member-type="');t.b(t.v(t.d("member.type",c,p,0)));t.b('" data-member-id="');t.b(t.v(t.d("member.id",c,p,0)));t.b('"');t.b("\n"+i);t.b("    ");if(t.s(t.f("isMemberEditable",c,p,1),c,p,0,95,196,"{{ }}")){t.rs(c,p,function(c,p,t){t.b(' class="');t.b(t.v(t.f("DRAGGABLE_FLAG_CLASS",c,p,0)));t.b(" ");t.b(t.v(t.f("DRAGGABLE_LABEL_CLASS",c,p,0)));t.b(" ");t.b(t.v(t.f("TOPBRAND_FLAG_CLASS",c,p,0)));t.b('" draggable="true" ')});c.pop()}t.b("\n"+i);t.b("    ");if(!t.s(t.f("isMemberEditable",c,p,1),c,p,1,0,0,"")){t.b(' class="mg-not-draggable ');t.b(t.v(t.f("TOPBRAND_FLAG_CLASS",c,p,0)));t.b('" ')}t.b("\n"+i);t.b(">");t.b(t.v(t.f("memberTitle",c,p,0)));t.b("</li>");return t.fl()},partials:{},subs:{}});mgTemplates["edit-panel-content"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");if(t.s(t.f("types",c,p,1),c,p,0,10,737,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div class="mg-ep-content-type">');t.b(t.v(t.f("typeTitle",c,p,0)));t.b("</div>");t.b("\n"+i);t.b('    <ul data-zone="');t.b(t.v(t.f("zone",c,p,0)));t.b('" data-floor="');t.b(t.v(t.f("floor",c,p,0)));t.b('">');t.b("\n"+i);if(t.s(t.f("members",c,p,1),c,p,0,136,714,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("        <li ");if(t.s(t.f("isDraggable",c,p,1),c,p,0,165,291,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('draggable="true" class="mg-draggable mg-draggable-label ');t.b(t.v(t.f("fromPanelClass",c,p,0)));t.b(" ");if(t.s(t.d("lump.top_brand",c,p,1),c,p,0,259,271,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mg-top-brand")});c.pop()}t.b('"')});c.pop()}t.b("\n"+i);t.b("            ");if(!t.s(t.f("isDraggable",c,p,1),c,p,1,0,0,"")){t.b('class="mg-not-draggable ');t.b(t.v(t.f("fromPanelClass",c,p,0)));t.b(" ");if(t.s(t.d("lump.top_brand",c,p,1),c,p,0,398,410,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("mg-top-brand")});c.pop()}t.b('"')}t.b('"');t.b("\n"+i);t.b('            data-member-type="');t.b(t.v(t.f("typeValue",c,p,0)));t.b('"');t.b("\n"+i);t.b('            data-member-id="');t.b(t.v(t.f("id",c,p,0)));t.b('">');t.b("\n");t.b("\n"+i);t.b("            ");if(t.s(t.f("icon",c,p,1),c,p,0,552,624,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<span class="mg-ep-icon" style="background-image: url(');t.b(t.v(t.f("icon",c,p,0)));t.b(')"></span>')});c.pop()}t.b("\n"+i);t.b('            <span class="mg-ep-member-title">');t.b(t.v(t.f("title",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("        </li>");t.b("\n"+i)});c.pop()}t.b("    </ul>");t.b("\n"+i)});c.pop()}if(!t.s(t.f("types",c,p,1),c,p,1,0,0,"")){t.b('    <div class="mg-ep-empty">');t.b(t.v(t.f("emptyLabel",c,p,0)));t.b("</div>");t.b("\n"+i)}return t.fl()},partials:{},subs:{}});mgTemplates["edit-panel"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div id="mg-ep-drop-mask"></div>');t.b("\n"+i);t.b('<div id="mg-ep-title-bar">');t.b("\n"+i);t.b('    <div id="mg-ep-title">');t.b(t.v(t.f("title",c,p,0)));t.b("</div>");t.b("\n"+i);t.b('    <div id="mg-ep-buttons">');t.b("\n"+i);t.b('        <div id="mg-ep-toggle-btn" title="');t.b(t.v(t.f("toggleBtnTitle",c,p,0)));t.b('">');t.b("\n"+i);t.b('            <div id="mg-ep-counter"></div>');t.b("\n"+i);t.b('            <div id="mg-ep-toggle-btn-symbol">▶</div>');t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("</div>");t.b("\n"+i);t.b('<div id="mg-ep-content-container"></div>');return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-createjoin"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="map-geogroup-createjoin_group-container">');t.b("\n"+i);t.b('  <div class="actionbutton change-pseudo" data-next="logout">');t.b(t.v(t.f("pseudo",c,p,0)));t.b("</div>");t.b("\n"+i);t.b('  <div class="actionbutton" data-next="create_group">');t.b(t.v(t.d("_labels.createGroup",c,p,0)));t.b("</div>");t.b("\n"+i);t.b('  <div class="actionbutton" data-next="join_group">');t.b(t.v(t.d("_labels.joinGroup",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-intro"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="mapGeogroup-intro">');t.b(t.t(t.f("intro",c,p,0)));t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-joingroup"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="map-geogroup-generic-container">');t.b("\n"+i);t.b("    <p>");t.b(t.v(t.d("_labels.joinGroupLegend",c,p,0)));t.b("</p>");t.b("\n"+i);t.b('    <form data-id="join-group">');t.b("\n"+i);t.b('        <input type="number" pattern="[0-9]*" class="query" name="code" value="');t.b(t.v(t.f("code",c,p,0)));t.b('" placeholder="X X X X X" autocorrect="off" autocapitalize="off" maxlength="5" required>');t.b("\n"+i);t.b("    </form>");t.b("\n"+i);t.b('    <p class="error-message"></p>');t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-memberlist-groupelement"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<li id="group-');t.b(t.v(t.f("id",c,p,0)));t.b('" class="geogroup-grouplistitem">');t.b("\n"+i);t.b('  <span data-icon="geogroup-group" class="icon geogroup-listitem-pingroup"></span>');t.b("\n"+i);t.b('  <span class="geogroup-grouplist-groupname">');t.b(t.v(t.d("_labels.group",c,p,0)));t.b("</span>");t.b("\n"+i);t.b('  <span class="geogroup-grouplist-buttons">');t.b("\n"+i);t.b('    <span data-icon="geogroup-position" class="icon geogroup-listitem-pinicon"></span>');t.b("\n"+i);t.b('    <span data-icon="geogroup-chat" class="icon geogroup-listitem-chaticon"></span>');t.b("\n"+i);t.b("  </span>");t.b("\n"+i);t.b("</li>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-memberlist-memberelement"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<li id="trackee-');t.b(t.v(t.f("id",c,p,0)));t.b('" data-color="');t.b(t.v(t.f("color",c,p,0)));t.b('" data-name="');t.b(t.v(t.f("pseudo",c,p,0)));t.b('" class="');if(t.s(t.f("hasPosition",c,p,1),c,p,0,93,120,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("geogroup-listitem-localized")});c.pop()}t.b('"');if(t.s(t.f("isMyself",c,p,1),c,p,0,150,180,"{{ }}")){t.rs(c,p,function(c,p,t){t.b(' data-trackee-is-myself="true"')});c.pop()}t.b(">");t.b("\n"+i);t.b('    <span data-icon="geogroup-trackee" class="geogroup-listitem-pingroup" data-color="');t.b(t.v(t.f("color",c,p,0)));t.b('"></span>');t.b("\n"+i);t.b('    <span class="geogroup-trackee-item-content">');t.b("\n"+i);t.b('        <span class="trackee-name-label">');t.b(t.v(t.f("pseudo",c,p,0)));t.b(" ");if(t.s(t.f("isMyself",c,p,1),c,p,0,414,431,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("(");t.b(t.v(t.d("_labels.you",c,p,0)));t.b(")")});c.pop()}t.b("</span><br>");t.b("\n"+i);t.b("        ");if(t.s(t.f("location",c,p,1),c,p,0,477,537,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('<span class="trackee-position-label">');t.b(t.v(t.f("location",c,p,0)));t.b("</span><br>")});c.pop()}t.b("\n"+i);t.b('        <span class="trackee-position-label">');t.b(t.t(t.f("positionLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </span>");t.b("\n"+i);t.b('    <span class="geogroup-grouplist-buttons">');t.b("\n"+i);t.b('        <span data-icon="geogroup-position" class="geogroup-listitem-pinicon" data-trackee-id="');t.b(t.v(t.f("id",c,p,0)));t.b('"></span>');t.b("\n"+i);t.b('        <span data-icon="geogroup-chat" class="geogroup-listitem-chaticon ');if(t.s(t.f("isMyself",c,p,1),c,p,0,879,888,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("unvisible")});c.pop()}t.b('"></span>');t.b("\n"+i);t.b("    </span>");t.b("\n"+i);t.b("</li>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-memberlist"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="list-item-error display-none-f">');t.b("\n"+i);t.b("    ");t.b(t.t(t.d("_labels.networkError",c,p,0)));t.b("\n"+i);t.b("</div>");t.b("\n"+i);t.b('<ul data-id="geogroup-members-list" class="geogroup-members-list">');t.b("\n"+i);t.b("    ");t.b(t.t(t.f("content",c,p,0)));t.b("\n"+i);t.b("</ul>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-setusername"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="map-geogroup-generic-container">');t.b("\n"+i);t.b("    <p>");t.b(t.t(t.d("_labels.legend",c,p,0)));t.b("</p>");t.b("\n"+i);t.b('    <form data-id="set_username">');t.b("\n"+i);t.b('        <input type="text" class="query" name="username" value="');t.b(t.v(t.f("pseudo",c,p,0)));t.b('" placeholder="');t.b(t.v(t.d("_labels.placeholder",c,p,0)));t.b('" autocorrect="off" autocapitalize="off" maxlength="');t.b(t.v(t.f("pseudoMax",c,p,0)));t.b('" required>');t.b("\n"+i);t.b("    </form>");t.b("\n"+i);t.b('    <p class="error-message"></p>');t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-sharedpositions"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="list-item-error display-none-f">');t.b("\n"+i);t.b("    ");t.b(t.t(t.d("_labels.networkError",c,p,0)));t.b("\n"+i);t.b("</div>");t.b("\n"+i);t.b('<ul data-id="geogroup-members-list" class="geogroup-members-list">');t.b("\n"+i);t.b("    ");t.b(t.t(t.f("content",c,p,0)));t.b("\n"+i);t.b("</ul>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-trackee-icon"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<?xml version="1.0" encoding="UTF-8" standalone="no"?>');t.b("\n"+i);t.b("<svg");t.b("\n"+i);t.b(' xmlns:dc="http://purl.org/dc/elements/1.1/"');t.b("\n"+i);t.b(' xmlns:cc="http://creativecommons.org/ns#"');t.b("\n"+i);t.b(' xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"');t.b("\n"+i);t.b(' xmlns:svg="http://www.w3.org/2000/svg"');t.b("\n"+i);t.b(' xmlns="http://www.w3.org/2000/svg"');t.b("\n"+i);t.b(' version="1.1"');t.b("\n"+i);t.b(' id="svg4147"');t.b("\n"+i);t.b(' viewBox="0 0 60 60"');t.b("\n"+i);t.b(' height="60"');t.b("\n"+i);t.b(' width="60">');t.b("\n"+i);t.b("<defs");t.b("\n"+i);t.b(' id="defs4149" />');t.b("\n"+i);t.b("<metadata");t.b("\n"+i);t.b(' id="metadata4152">');t.b("\n"+i);t.b("<rdf:RDF>");t.b("\n"+i);t.b("<cc:Work");t.b("\n"+i);t.b(' rdf:about="">');t.b("\n"+i);t.b("<dc:format>image/svg+xml</dc:format>");t.b("\n"+i);t.b("<dc:type");t.b("\n"+i);t.b(' rdf:resource="http://purl.org/dc/dcmitype/StillImage" />');t.b("\n"+i);t.b("<dc:title></dc:title>");t.b("\n"+i);t.b("</cc:Work>");t.b("\n"+i);t.b("</rdf:RDF>");t.b("\n"+i);t.b("</metadata>");t.b("\n"+i);t.b("<g");t.b("\n"+i);t.b(' transform="translate(0,-992.4)"');t.b("\n"+i);t.b(' id="layer1">');t.b("\n"+i);t.b("<path");t.b("\n"+i);t.b(' d="m 34.244,1009.9 c 0,2.3 -1.906,4.3 -4.246,4.3 c -2.335,0 -4.232,-2 -4.239,-4.3 c -0.03,-2.4 1.877,-4.4 4.239,-4.4 c 2.365,0 4.275,2 4.246,4.4 z m 9.791,0 c 0,5.3 -5.519,12.9 -9.025,21 c -3.506,8.1 -4.281,12.6 -5.01,15.3 c -0.737,-2.7 -1.504,-7.2 -5.011,-15.3 c -3.506,-8.1 -9.049,-15.7 -9.025,-21 c 0,-7.8 6.281,-14.04 14.034,-14.04 c 7.754,0 14.04,6.24 14.037,14.04 z"');t.b("\n"+i);t.b(' style="opacity:0.847;fill:');t.b(t.v(t.f("color",c,p,0)));t.b(';fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:2.0001;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"');t.b("\n"+i);t.b(' id="circle4717" />');t.b("\n"+i);t.b("</g>");t.b("\n"+i);t.b("</svg>");return t.fl()},partials:{},subs:{}});mgTemplates["geogroup-trackee-label"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b("<li>");t.b("\n"+i);if(t.s(t.f("notMyself",c,p,1),c,p,0,23,90,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("    <div ");t.b("\n"+i);t.b('        class="trackee-name-label">');t.b(t.v(t.f("pseudo",c,p,0)));t.b("</div>");t.b("\n"+i)});c.pop()}t.b('  \x3c!-- <div style="display:none" >');t.b(t.t(t.f("geoGroupeLabel",c,p,0)));t.b("</div> --\x3e");t.b("\n"+i);t.b("</li>");return t.fl()},partials:{},subs:{}});mgTemplates["itipopup"]=new Hogan.Template({code:function(c,p,i){var t=this;t.b(i=i||"");t.b('<div class="iti-summary">');t.b("\n"+i);if(t.s(t.f("showTimeAndLength",c,p,1),c,p,0,52,239,"{{ }}")){t.rs(c,p,function(c,p,t){t.b('    <div class="iti-summary-dist-time">');t.b("\n"+i);t.b('        <span class="iti-summary-distance">');t.b(t.v(t.f("meters",c,p,0)));t.b(" ");t.b(t.v(t.f("meterLabel",c,p,0)));t.b("</span>");t.b("\n"+i);t.b('        <span class="iti-summary-time">');t.b(t.v(t.f("time",c,p,0)));t.b("</span>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i)});c.pop()}t.b('    <div class="iti-summary-row">');t.b("\n"+i);t.b("    ");t.b("\n"+i);t.b('        <span class="iti-summary-icon ');if(t.s(t.f("startsFromUserPosition",c,p,1),c,p,0,388,413,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("iti-summary-icon-user-pos")});c.pop()}if(!t.s(t.f("startsFromUserPosition",c,p,1),c,p,1,0,0,"")){t.b("iti-summary-icon-start")}t.b(" ");if(t.s(t.f("flagStartLabelOnly",c,p,1),c,p,0,540,563,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("iti-summary-label-start")});c.pop()}t.b('">');t.b("\n"+i);t.b("            ");if(t.s(t.f("flagStartLabelOnly",c,p,1),c,p,0,624,641,"{{ }}")){t.rs(c,p,function(c,p,t){t.b(t.v(t.f("startIconText",c,p,0)))});c.pop()}t.b("\n"+i);t.b("        </span>");t.b("\n"+i);t.b('        <div class="iti-summary-label">');t.b(t.v(t.f("startTitle",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="iti-routing-steps">');t.b("\n"+i);t.b('        <div class="iti-routing-step">');t.b("\n"+i);t.b('            <div class="iti-routing-separator">');t.b("\n"+i);t.b("            </div>");t.b("\n"+i);t.b('            <div class="iti-summary-row">');t.b("\n"+i);t.b('                <span class="iti-summary-icon iti-summary-icon-step"></span>');t.b("\n"+i);t.b('                <div class="iti-rs-text">');t.b("\n"+i);t.b("                </div>");t.b("\n"+i);t.b("            </div>");t.b("\n"+i);t.b("        </div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b('    <div class="iti-summary-row">');t.b("\n"+i);t.b('        <span class="iti-summary-icon iti-summary-icon-dest ');if(t.s(t.f("destinationType",c,p,1),c,p,0,1265,1306,"{{ }}")){t.rs(c,p,function(c,p,t){t.b("iti-summary-icon-dest-");t.b(t.v(t.f("destinationType",c,p,0)))});c.pop()}t.b('"></span>');t.b("\n"+i);t.b('        <div class="iti-summary-label">');t.b(t.v(t.f("destinationTitle",c,p,0)));t.b("</div>");t.b("\n"+i);t.b("    </div>");t.b("\n"+i);t.b("</div>");return t.fl()},partials:{},subs:{}});var mgLogger=function(){"use strict";var LOG_LEVELS={DEBUG:2,INFO:1,NONE:0},LOG_LABELS={DEBUG:"[DEBUG] ",INFO:" [INFO] "},colorsEnabled=true,modules={BackendAPI:{id:"BackendAPI",level:LOG_LEVELS.NONE,color:"cyan"},Core:{id:"Core",level:LOG_LEVELS.NONE,color:"red"},Data:{id:"Data",level:LOG_LEVELS.NONE,color:"purple"},Edit:{id:"Edit",level:LOG_LEVELS.NONE,color:"pink"},Favorite:{id:"Favorite",level:LOG_LEVELS.NONE,color:"grey"},GeoPush:{id:"GeoPush",level:LOG_LEVELS.NONE,color:"cornflowerblue"},GeoGroup:{id:"GeoGroup",level:LOG_LEVELS.NONE,color:"indianred"},I18n:{id:"I18n",level:LOG_LEVELS.NONE,color:"darkgreen"},Route:{id:"Route",level:LOG_LEVELS.NONE,color:"darkorange"},Legend:{id:"Legend",level:LOG_LEVELS.NONE,color:"aqua"},Location:{id:"Location",level:LOG_LEVELS.NONE,color:"blue"},Map:{id:"Map",level:LOG_LEVELS.NONE,color:"green"},MapSVG:{id:"MapSVG",level:LOG_LEVELS.NONE,color:"limegreen"},Modal:{id:"Modal",level:LOG_LEVELS.NONE,color:"#008F91"},Native:{id:"Native",level:LOG_LEVELS.NONE,color:"brown"},Permissions:{id:"Permissions",level:LOG_LEVELS.NONE,color:"red"},Icon:{id:"Icon",level:LOG_LEVELS.NONE,color:"darkgrey"},POI:{id:"POI",level:LOG_LEVELS.NONE,color:"darkgrey"},Pin:{id:"Pin",level:LOG_LEVELS.NONE,color:"#FFD509"},Position:{id:"Position",level:LOG_LEVELS.NONE,color:"orange"},PushWoosh:{id:"PushWoosh",level:LOG_LEVELS.NONE,color:"grey"},RealTime:{id:"RealTime",level:LOG_LEVELS.NONE,color:"pink"},Support:{id:"Support",level:LOG_LEVELS.NONE,color:"#7D7D50"},Synoptic:{id:"Synoptic",level:LOG_LEVELS.NONE,color:"purple"},Update:{id:"Update",level:LOG_LEVELS.NONE,color:"black"},Zone:{id:"Zone",level:LOG_LEVELS.NONE,color:"#F915D0"}};var debug=function(module){_log("DEBUG",mgJt.argumentsToArray(arguments))};var info=function(module){_log("INFO",mgJt.argumentsToArray(arguments))};var _log=function(level,params){params.splice(1,0,level);log.apply(null,params)};var log=function(_module,level){if(typeof _module!=="object"){console.error("'module' should be an object, got: ",_module);return}else if(typeof modules[_module.id]==="undefined"){console.error("Unknown module: ",_module);return}var params=mgJt.argumentsToArray(arguments).slice(2);if(typeof level!=="string"||typeof LOG_LEVELS[level]==="undefined"){console.error("Invalid log level.",level);return}if(LOG_LEVELS[level]<=_module.level){var paramsAsString=getParamsValueAsString(params);if(colorsEnabled===true){console.log(LOG_LABELS[level]+"%c["+_module.id+"]","color: "+_module.color,paramsAsString)}else{console.log("["+level+"] ["+_module.id+"] "+paramsAsString)}}};var error=function(_module){var params=mgJt.argumentsToArray(arguments);params.shift();if(typeof _module==="undefined"){console.error("This module does not exist.",_module);return}var paramsAsString=getParamsValueAsString(params);if(colorsEnabled===true){console.error("%c["+_module.id+"]","color: "+_module.color,paramsAsString)}else{console.error("["+_module.id+"] "+paramsAsString)}};var argToString=function(arg){if(typeof arg==="object"){try{return JSON.stringify(arg)}catch(e){return arg}}else{return arg}};var getParamsValueAsString=function(params){return mgJt.isEmpty(params)===true?"":params.map(argToString).join(" ")};var setLevel=function(level,moduleToSet){if(mgJt.isEmpty(level)===true||typeof level!=="string"){console.error("Invalid log level:",level);return false}var newLogLevel=LOG_LEVELS[level.toUpperCase()];if(typeof newLogLevel!=="number"){console.error("Invalid log level:",level);return false}if(typeof moduleToSet==="string"){if(!modules[moduleToSet]){console.error("Invalid module id:",moduleToSet);return false}modules[moduleToSet].level=newLogLevel}else{Object.keys(modules).forEach(function(moduleId){modules[moduleId].level=newLogLevel});console.log("Updated log level for all modules")}return true};var time=function(module,timerName){if(typeof console.time==="undefined"){return}if(typeof module==="undefined"){console.error("This module does not exist.",module);return}if(module.level>LOG_LEVELS.NONE&&typeof console.time==="function"){console.time(LOG_LABELS.INFO+timerName)}};var timeEnd=function(module,timerName){if(typeof console.timeEnd==="undefined"){return}if(typeof module==="undefined"){console.error("This module does not exist.",module);return}if(module.level>LOG_LEVELS.NONE&&typeof console.timeEnd==="function"){console.timeEnd(LOG_LABELS.INFO+timerName)}};var fullLoadingTag="MobiGeo full loading time";var startFullLoadingTime=function(){time(modules.Core,fullLoadingTag)};var stopFullLoadingTime=function(){timeEnd(modules.Core,fullLoadingTag)};return{LOG_LEVELS:LOG_LEVELS,modules:modules,setLevel:setLevel,debug:debug,info:info,error:error,time:time,timeEnd:timeEnd,startFullLoadingTime:startFullLoadingTime,stopFullLoadingTime:stopFullLoadingTime,disableColors:function(){colorsEnabled=false},enableColors:function(){colorsEnabled=true}}}();var mgJt=function(){"use strict";var module=mgLogger.modules.Core;var isEmpty=function(data){if(data===undefined||data===null){return true}if(Array.isArray(data)){return data.length===0}var type=typeof data;if(type==="string"){return data.trim().length===0}if(data.jquery!==undefined){return data.length===0}if(type==="number"||type==="boolean"||type==="object"){return false}return true};var objectTotalSize=function(object,onlyFirstLevel){if(isEmpty(object)===true){return 0}if(typeof object!=="object"){return 1}if("length"in object){return object.length}var totalLength=0;for(var i in object){if(object.hasOwnProperty(i)===false){continue}if(onlyFirstLevel===true){totalLength+=1}else{totalLength+=objectTotalSize(object[i])}}return totalLength};var getRandomArbitrary=function(min,max){return Math.random()*(max-min)+min};var emptyArray=function(arr){if(isEmpty(arr)===false){while(arr.length){arr.shift()}}return arr};var clearPubSubSubscriptions=function(subscription){if(isEmpty(subscription)===true){return}if(Array.isArray(subscription)){for(var index in subscription){clearPubSubSubscriptions(subscription[index])}return}PubSub.unsubscribe(subscription)};var removeAccents=function(input){if(typeof input!=="string"){input=String(input)}input=input.split("");var inputOut=[];var accents="ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž";var accentsOut=["A","A","A","A","A","A","a","a","a","a","a","a","O","O","O","O","O","O","O","o","o","o","o","o","o","E","E","E","E","e","e","e","e","e","C","c","D","I","I","I","I","i","i","i","i","U","U","U","U","u","u","u","u","N","n","S","s","Y","y","y","Z","z"];for(var y=0;y<input.length;y++){if(accents.indexOf(input[y])!==-1){inputOut[y]=accentsOut[accents.indexOf(input[y])]}else{inputOut[y]=input[y]}}return inputOut.join("")};var addMissingZero=function(value){value=value.toString();return value.length===1?"0"+value:value};var getValueFromStringAttribute=function(obj,attr){if(isEmpty(obj)===true){return null}if(typeof attr!=="string"){throw new Error('Invalid argument! expected "attr" to be a string, but got '+typeof attr)}var path=attr.split(".");if(path.length===1){return obj[path]}else{var tmpValue=obj[path.shift()];var step;while(isEmpty(step=path.shift())===false){if(isEmpty(tmpValue)===true||tmpValue.hasOwnProperty(step)===false){return null}tmpValue=tmpValue[step]}return tmpValue}};var filterObjects=function(objs,criterias,filterOne){var matched=[];if(isEmpty(objs)===true){return matched}for(var i=0;i<objs.length;i++){if(matchCriterias(objs[i],criterias)===true){matched.push(objs[i]);if(matched.length===1&&filterOne===true){return matched}}}return matched};var matchCriterias=function(obj,criterias){if(isEmpty(criterias)===true){return true}var doesMatch=true;for(var criteria in criterias){if(doesMatch===false){break}if(criterias.hasOwnProperty(criteria)===false){continue}if(criteria==="not"){var notCriterias=criterias[criteria];for(var notCriteria in notCriterias){if(notCriterias.hasOwnProperty(notCriteria)===false){continue}if(getValueFromStringAttribute(obj,notCriteria)===notCriterias[notCriteria]){doesMatch=false}}}else if(getValueFromStringAttribute(obj,criteria)!==criterias[criteria]){doesMatch=false}}return doesMatch};var filterOne=function(obj,criterias){var results=filterObjects(obj,criterias,true);return results.length>0?results[0]:null};var objectToArray=function(obj){var array=[];for(var key in obj){if(obj.hasOwnProperty(key)===true){array.push(obj[key])}}return array};var capitalizeFirstLetter=function(string){return mgJt.isEmpty(string)===true?"":string.charAt(0).toUpperCase()+string.slice(1)};var getParameterByName=function(name,url){if(!url){url=window.location.href}name=name.replace(/[\[\]]/g,"\\//{{#file:modules/util/mgJsTools.js}}");var regex=new RegExp("[?&]"+name+"(=([^&#]*)|&|#|$)"),results=regex.exec(url);if(!results){return null}else if(!results[2]){return""}else{return decodeURIComponent(results[2].replace(/\+/g," "))}};var getDifferenceBetweenNumbers=function(a,b){if(typeof a!=="number"){mgLogger.error(module,"Expected a number but got ("+typeof a+") ",a);return}else if(typeof a!=="number"){mgLogger.error(module,"Expected a number but got ("+typeof b+") ",b);return}else{return Math.abs(a-b)}};var argumentsToArray=function(args){return Array.prototype.slice.call(args)};var secondsToString=function(seconds){if(mgJt.isEmpty(seconds)===true){return""}var mins=Math.round(seconds/60);return mins>0?mins+" min.":" < 1 min."};var ignoreScrollStart=null;var ionicHackStart=function(){if(typeof ionic==="object"&&typeof ionic.tap==="object"&&typeof ionic.tap.ignoreScrollStart==="function"){ignoreScrollStart=ionic.tap.ignoreScrollStart;ionic.tap.ignoreScrollStart=function(){return true};mgLogger.debug(module,"ionic scroll hack enabled")}};var ionicHackEnd=function(){if(typeof ionic==="object"&&typeof ionic.tap==="object"&&typeof ionic.tap.ignoreScrollStart==="function"){if(ignoreScrollStart!==null){mgLogger.debug(module,"ionic scroll hack removed");ionic.tap.ignoreScrollStart=ignoreScrollStart}}};var _stringAndNumberTypes=["string","number"];var isStringOrNumber=function(obj){return _stringAndNumberTypes.indexOf(typeof obj)!==-1};var nullOrUndefined=function(param){return typeof param==="undefined"||param===null};var notNullNorUndefined=function(param){return nullOrUndefined(param)===false};var _onlyNumbersRegExp=/^\d*$/;var isStringParsableAsInt=function(str){return _onlyNumbersRegExp.test(str)};var isCordovaDefined=function(){return mgJt.notNullNorUndefined(window.cordova)};var convertFileSrc=function(url){var webviewServerUrl="http://localhost";if(mgSupport.env.os==="iOS"){webviewServerUrl="ionic://localhost"}if(!url){return url}if(url.startsWith("/")){return webviewServerUrl+"/_app_file_"+url}if(url.startsWith("file://")){return webviewServerUrl+url.replace("file://","/_app_file_")}if(url.startsWith("content://")){return webviewServerUrl+url.replace("content:/","/_app_content_")}return url};return{isEmpty:isEmpty,objectTotalSize:objectTotalSize,getRandomArbitrary:getRandomArbitrary,removeAccents:removeAccents,addMissingZero:addMissingZero,getValueFromStringAttribute:getValueFromStringAttribute,filterObjects:filterObjects,filterOne:filterOne,matchCriterias:matchCriterias,objectToArray:objectToArray,clearPubSubSubscriptions:clearPubSubSubscriptions,emptyArray:emptyArray,capitalizeFirstLetter:capitalizeFirstLetter,getParameterByName:getParameterByName,getDifferenceBetweenNumbers:getDifferenceBetweenNumbers,argumentsToArray:argumentsToArray,secondsToString:secondsToString,ionicHackStart:ionicHackStart,ionicHackEnd:ionicHackEnd,isStringOrNumber:isStringOrNumber,nullOrUndefined:nullOrUndefined,notNullNorUndefined:notNullNorUndefined,isStringParsableAsInt:isStringParsableAsInt,isCordovaDefined:isCordovaDefined,convertFileSrc:convertFileSrc}}();var mgFetchHelper=function(){var module=mgLogger.modules.Core,LOG_PREF="[FetchHelper] ";var FETCH_ERRORS={REQUEST:"Request failed",PARSE:"Failed to parse json"};var errorHandler=function(msg,cb){mgLogger.error(module,LOG_PREF+msg,mgJt.argumentsToArray(arguments).slice(2));if(typeof cb==="function"){cb()}};var commonHandler=function(promise,successCb,errorCb){promise.then(function(response){if(response.status>=400){errorHandler(FETCH_ERRORS.REQUEST+" ("+response.status+")",errorCb)}else if(typeof successCb==="function"){window.setTimeout(function(){successCb(response.text)},0)}},function(){errorHandler(FETCH_ERRORS.REQUEST,errorCb,arguments)})};var jsonHandler=function(promise,successCb,errorCb){promise.then(function(response){if(response.status>=400){return Promise.reject(FETCH_ERRORS.REQUEST+" ("+response.status+")")}else{return JSON.parse(response.text)}}).then(function(json){if(json){if(typeof successCb==="function"){window.setTimeout(function(){successCb(json)},0)}}else{return Promise.reject(FETCH_ERRORS.PARSE)}}).catch(function(reason){errorHandler(reason,errorCb)})};var getTimestampedUrl=function(url){return url+(url.indexOf("?")===-1?"?":"&")+(new Date).getTime()};var fetchUsingXhr=function(opts){return new Promise(function(resolve,reject){var xhr=new XMLHttpRequest,ended=false;xhr.onload=function(){if(ended){return}ended=true;resolve({text:opts.responseType?xhr.response:xhr.responseText,status:xhr.status||200})};var onFailure=function(){if(ended){return}ended=true;reject(new Error("Request failed # "+JSON.stringify(opts)),arguments)};xhr.onerror=onFailure;xhr.ontimeout=onFailure;xhr.onabort=onFailure;if(opts&&typeof opts.timeout==="number"){xhr.timeout=opts.timeout}xhr.open(opts&&opts.type?opts.type:"GET",opts.cache===false?getTimestampedUrl(opts.url):opts.url);if(opts.headers){Object.entries(opts.headers).forEach(function(item){xhr.setRequestHeader(item[0],item[1])})}if(opts.responseType){xhr.responseType=opts.responseType}xhr.send(opts&&opts.data?opts.data:null)})};return{execute:function(opts){if(typeof opts!=="object"||opts===null){mgLogger.error(module,"Invalid or missing request options",opts);return}if(!opts.url||typeof opts.url!=="string"){mgLogger.error(module,LOG_PREF+"Invalid 'url' parameter",opts.url);if(typeof opts.errorCb==="function"){opts.errorCb()}return}mgLogger.debug(module,LOG_PREF+"About to fetch",opts);var promise;if(true){promise=fetchUsingXhr(opts)}if(opts.dataType&&opts.dataType.indexOf("json")!==-1){jsonHandler(promise,opts.success,opts.error)}else{commonHandler(promise,opts.success,opts.error)}}}}();var MAIN_CONFIG_PATH="public/config/config.json";var mgMainConfig=function(){var getMobigeoPath=function(){var defaultPath="mobigeo/";if(mgJt.isCordovaDefined()){return defaultPath}var scriptName=mgJt.isCordovaDefined()?"mobigeo-cordova":Config.fullNative?"mobigeo-fullNative":"mobigeo-web";var scriptEl=document.querySelector("script[src*="+scriptName+"]");if(mgJt.isEmpty(scriptEl)===false){var srcValue=scriptEl.getAttribute("src"),strIndex=srcValue.indexOf(defaultPath);if(strIndex!==-1){return srcValue.substr(0,strIndex+defaultPath.length)}}return defaultPath};function initConfig(){mgFetchHelper.execute({type:"get",dataType:"json",url:getMobigeoPath()+MAIN_CONFIG_PATH,cache:false,success:function(dataConfig){Config=Object.assign(Config,dataConfig);PubSub.publish("mainConfig-loaded")},error:function(error){MobiGeo.Map.publish("error",_MobiGeoMap.ERRORS.LOADING_FAILED)}})}initConfig();return{Config:Config}}();var mgDt=function(){"use strict";var module=mgLogger.modules.Core,FORCED_HIDE_CSS_CLASS="display-none-f",OPACITY_0_CSS_CLASS="opacity-0",OPACITY_TRANSITION_CSS_CLASS="opacity-transition";var loadAsyncCss=function(src,cb){if(typeof src!=="string"){mgLogger.error(module,"src parameter is invalid: ["+src+"]")}else if(mgJt.isEmpty(document.head.querySelector('link[href="'+src+'"]'))!==true){mgLogger.debug(module,"Stylesheet "+src+" is already included")}else{var el=document.createElement("link");el.rel="stylesheet";el.href=src;el.async=true;el.onerror=function(err){cb("Failed to load CSS file: "+src)};el.onload=function(){cb(null)};document.head.appendChild(el)}};var isDOMElement=function(obj){return obj!==null&&typeof obj==="object"&&obj.nodeType===1&&typeof obj.style==="object"&&typeof obj.ownerDocument==="object"};var findParentNode=function(element,matcher){if(!element||typeof element!=="object"){return null}if(matcher(element)){return element}else{return findParentNode(element.parentNode,matcher)}};var findParentNodeWithNodeName=function(element,nodeName){if(typeof nodeName!=="string"){mgLogger.error(module,"className parameter is not valid: "+nodeName);return null}var lowerCasedNodeName=nodeName.toLowerCase();function matcher(el){return el.nodeName.toLowerCase()===lowerCasedNodeName}return findParentNode(element,matcher)};var findParentNodeWithAttribute=function(element,attributeName){if(typeof attributeName!=="string"){mgLogger.error(module,"attributeName parameter is not valid: "+attributeName);return null}function matcher(el){return typeof el.getAttribute==="function"&&el.getAttribute(attributeName)!==null}return findParentNode(element,matcher)};var getSiblings=function(el,filter){var siblings=[],sibling=el.parentNode.firstChild;do{if(sibling!==el&&(!filter||filter(sibling))){siblings.push(sibling)}sibling=sibling.nextSibling}while(sibling!==null);return siblings};var elementFilter=function(el){return mgJt.isEmpty(el)===false&&el.nodeType===Node.ELEMENT_NODE};var getSiblingElements=function(el){return getSiblings(el,elementFilter)};var _getSingleValueFromComputedStyle=function(cs,element,itemName,forceNoPadding){if(typeof cs[itemName]!=="string"){mgLogger.error(module,"Could not get getComputedStyle of ",element,itemName);return null}if(cs[itemName]==="auto"){mgLogger.info(module,"Could not return getComputedStyle of ",element,itemName," because it is in auto mode");return null}var value=parseInt(cs[itemName].replace("px",""));if(isNaN(value)===true){mgLogger.error(module,"getItemHeight: item is invalid",element,value);return null}if(forceNoPadding!==true&&(itemName==="top"||itemName==="height")){var paddingHeightTop=parseInt(cs.paddingTop.replace("px",""));if(isNaN(paddingHeightTop)===false){value+=paddingHeightTop}var paddingHeightBottom=parseInt(cs.paddingBottom.replace("px",""));if(isNaN(paddingHeightBottom)===false){value+=paddingHeightBottom}}return value};var insertAfter=function(newNode,referenceNode){referenceNode.parentNode.insertBefore(newNode,referenceNode.nextSibling)};var getItemComputedValue=function(element,itemNames,forceNoPadding){if(mgJt.isEmpty(element)===true){mgLogger.error(module,"getItemComputedValue: element is empty",element);return null}if(mgJt.isEmpty(itemNames)===true){mgLogger.error(module,"getItemComputedValue: itemNames is empty",itemNames);return null}var singleValueAsked=false;if(typeof itemNames==="string"){itemNames=[itemNames];singleValueAsked=true}var cs;try{cs=window.getComputedStyle(element)}catch(error){mgLogger.error(module,"Could not get getComputedStyle of ",element,error);return null}var values={};for(var i=0,total=itemNames.length;i<total;i++){var value=_getSingleValueFromComputedStyle(cs,element,itemNames[i],forceNoPadding);if(singleValueAsked===true){return value}else{values[itemNames[i]]=value}}return values};var showElement=function(element,fadeIn,cb){if(mgDt.isDOMElement(element)===false){mgLogger.error(module,"Cannot show element",element)}else{if(mgJt.isEmpty(fadeIn)||fadeIn===false){element.classList.remove(FORCED_HIDE_CSS_CLASS);if(typeof cb==="function"){cb()}}else{window.requestAnimationFrame(function(){element.classList.add(OPACITY_0_CSS_CLASS);element.classList.add(OPACITY_TRANSITION_CSS_CLASS);element.classList.remove(FORCED_HIDE_CSS_CLASS);window.requestAnimationFrame(function(){if(typeof cb==="function"){cb()}element.classList.remove(OPACITY_0_CSS_CLASS)})})}}};var hideElement=function(element,fadeIn){if(typeof element==="undefined"||element===null){return}if(mgDt.isDOMElement(element)===false){mgLogger.error(module,"Cannot hide element",element);return}if(mgJt.isEmpty(fadeIn)||fadeIn===false){element.classList.add(FORCED_HIDE_CSS_CLASS)}else{window.requestAnimationFrame(function(){element.classList.remove(OPACITY_TRANSITION_CSS_CLASS);element.classList.add(FORCED_HIDE_CSS_CLASS)})}};var removeElement=function(element){if(mgJt.isEmpty(element)===true){return}var parent=element.parentNode;if(mgJt.isEmpty(parent)===true){mgLogger.error(module,"This item has not parent",element," so it cannot be removed.");return}parent.removeChild(element)};var getChildrenTotalHeight=function(el){var h=0;for(var i=0;i<el.children.length;i++){h+=el.children[i].offsetHeight}return h};var applyStyle=function(element,style){if(mgDt.isDOMElement(element)===false){mgLogger.error(module,"Expected element argument to be a DOM element but got ",element);return}if(typeof style!=="object"){mgLogger.error(module,"Expected style argument to be an object but got ",style);return}for(var key in style){if(style.hasOwnProperty(key)!==true){continue}element.style[camelizeCssPropertyName(key)]=style[key]}return element};var appendSvg=function(element,subElement){if(mgDt.isDOMElement(element)===false){mgLogger.error(module,"Expected element argument to be a DOM element but got ",element);return}element.innerHTML=subElement;return element};var cssSnakeCaseStylePattern=/-./;var camelizeCssPropertyName=function(str){var match,to;do{match=cssSnakeCaseStylePattern.exec(str);if(match&&match.length){to=match[0].charAt(1);if(match.index>0){to=to.toUpperCase()}str=str.replace(match[0],to)}else{break}}while(true);return str};var extensionMatcher=/^(.*)(\.[a-zA-Z]*)$/;var extensionParser=function(url){if(typeof url==="undefined"||url===null){mgLogger.error(module,"extensionParser: missing argument, got: "+url);return[]}else{return extensionMatcher.exec(url)}};var createStyleSheet=function(parent,attrs){if(isDOMElement(parent)!==true){mgLogger.error(module,"Invalid parent",parent);return}var styleEl=document.createElement("style");if(attrs){if(typeof attrs==="object"){for(var attrName in attrs){if(attrs.hasOwnProperty(attrName)!==true){continue}styleEl.setAttribute(attrName,attrs[attrName])}}else{mgLogger.error(module,"Unexpected attributes type ",attrs)}}styleEl.appendChild(document.createTextNode(""));parent.appendChild(styleEl);return styleEl.sheet};var addCssRule=function(sheet,selector,rule){if(!rule){mgLogger.error(module,"Empty rule argument");return}var _rule;if(typeof rule==="string"){_rule=rule}else if(typeof rule==="object"){_rule="";Object.keys(rule).forEach(function(cssProp){_rule+=cssProp+":"+rule[cssProp]+";"})}else{mgLogger.error(module,"Bad rule argument",rule);return}if(typeof sheet.insertRule==="function"){sheet.insertRule(selector+"{"+_rule+"}",0)}else if(typeof sheet.addRule==="function"){sheet.addRule(selector,rule,0)}else{mgLogger.error(module,"Your browser does not support stylesheets")}};var clearCssRules=function(sheet){if(mgJt.isEmpty(sheet)===false){while(sheet.cssRules.length>0){sheet.deleteRule(0)}}};var stringifyStyle=function(style){var stringified="";if(style===null||typeof style!=="object"){return stringified}Object.keys(style).forEach(function(cssProp){var styleValue=style[cssProp].trim();stringified+=cssProp+":"+styleValue+(styleValue[styleValue.length-1]===";"?"":";")});return stringified};var getClassList=function(el){var classList;if(typeof el.classList==="undefined"){var classValue=el.getAttribute("class");if(mgJt.isEmpty(classValue)===false){classList=classValue.split(" ")}else{classList=[]}}else{classList=[];for(var i=0,length=el.classList.length;i<length;i++){classList.push(el.classList[i])}}return classList};var getElPagePosition=function(el){var xPos=0;var yPos=0;var reachedBodyEl=false;var nextEl=el;while(nextEl){el=nextEl;if(el.tagName==="BODY"){xPos+=el.offsetLeft+el.clientLeft;yPos+=el.offsetTop+el.clientTop;reachedBodyEl=true}else{xPos+=el.offsetLeft-el.scrollLeft+el.clientLeft;yPos+=el.offsetTop-el.scrollTop+el.clientTop}nextEl=el.offsetParent}if(!reachedBodyEl){xPos+=window.document.body.scrollLeft;yPos+=window.document.body.scrollTop}return{x:xPos,y:yPos}};var toggleHoverClass=function(el){if(Array.isArray(el)){el.forEach(toggleHoverClass)}else{el.classList.add("hover");window.setTimeout(_removeHoverClass,350,el)}};var _removeHoverClass=function(el){el.classList.remove("hover")};var addTapEvent=function(el,cb){if(typeof cb!=="function"){mgLogger.error(module,"Expected `cb` to be a function");return}if(isDOMElement(el)!==true){mgLogger.error(module,"Expected `el` to be a DOM element");return}if(mgSupport.interaction.click==="click"){el.addEventListener(mgSupport.interaction.click,cb)}else{var MOVE_THRESHOLD=10,eventStart=mgSupport.interaction.start,eventMove=mgSupport.interaction.move,eventEnd=mgSupport.interaction.end,lastEventReceived,startEvent;el.addEventListener(eventStart,function(e){lastEventReceived=eventStart;startEvent=e});el.addEventListener(eventMove,function(e){if(!startEvent){return}if(mgInteractionHelper.dist([startEvent,e])>MOVE_THRESHOLD){lastEventReceived=eventMove}});el.addEventListener(eventEnd,function(e){if(lastEventReceived===eventStart){lastEventReceived=eventEnd;cb(e)}startEvent=null})}};var _prefixedCache={};var getPrefixedCssProperty=function(propName){var prefixed=_prefixedCache[propName];if(typeof prefixed==="string"){return prefixed}prefixed=Modernizr.prefixed(propName);_prefixedCache[propName]=prefixed;return prefixed};var iosHackScrollTo0=function(){if(mgJt.isCordovaDefined()&&(mgSupport.env.iPhone||mgSupport.env.iPad)){window.scrollTo(0,0)}};return{get FORCED_HIDE_CSS_CLASS(){return FORCED_HIDE_CSS_CLASS},loadAsyncCss:loadAsyncCss,isDOMElement:isDOMElement,findParentNode:findParentNode,findParentNodeWithNodeName:findParentNodeWithNodeName,findParentNodeWithAttribute:findParentNodeWithAttribute,getSiblings:getSiblings,getSiblingElements:getSiblingElements,elementFilter:elementFilter,insertAfter:insertAfter,getItemComputedValue:getItemComputedValue,showElement:showElement,hideElement:hideElement,removeElement:removeElement,getChildrenTotalHeight:getChildrenTotalHeight,applyStyle:applyStyle,appendSvg:appendSvg,extensionParser:extensionParser,camelizeCssPropertyName:camelizeCssPropertyName,createStyleSheet:createStyleSheet,addCssRule:addCssRule,clearCssRules:clearCssRules,stringifyStyle:stringifyStyle,getClassList:getClassList,getElPagePosition:getElPagePosition,toggleHoverClass:toggleHoverClass,addTapEvent:addTapEvent,getPrefixedCssProperty:getPrefixedCssProperty,iosHackScrollTo0:iosHackScrollTo0}}();var mgUtils=function(){"use strict";var module=mgLogger.modules.Core;var dist2=function(coord1,coord2){if(coord1===null||typeof coord1!=="object"){mgLogger.error(module,"Cannot calculate distance, 'coord1' is not an object",coord1)}if(typeof coord1.x!=="number"){mgLogger.error(module,"Cannot calculate distance, 'coord1.x' is not a number",coord1)}if(typeof coord1.y!=="number"){mgLogger.error(module,"Cannot calculate distance, 'coord1.y' is not a number",coord1)}if(coord2===null||typeof coord2!=="object"){mgLogger.error(module,"Cannot calculate distance, 'coord2' is not an object",coord1)}if(typeof coord2.x!=="number"){mgLogger.error(module,"Cannot calculate distance, 'coord2.x' is not a number",coord2)}if(typeof coord2.y!=="number"){mgLogger.error(module,"Cannot calculate distance, 'coord2.y' is not a number",coord2)}return Math.pow(coord1.x-coord2.x,2)+Math.pow(coord1.y-coord2.y,2)};var dist=function(coord1,coord2){return Math.sqrt(dist2(coord1,coord2))};var gtwType="elevatorarea|elevator|stairs|stairsarea|escalator";var getClosestGatewayOnSameZoneFloorArea=function(position){if(!position){mgLogger.error(module,"Missing 'position' argument");return}if(typeof position.zone!=="number"||typeof position.floor!=="string"||position.floor.length===0||typeof position.area!=="number"){mgLogger.error(module,"Invalid 'position' argument, it needs properties 'zone', 'floor' and 'area' to be set");return}var floorGateways=mgData.query(mgData.TABLES.GTW_PATHS,{type:gtwType,zone:position.zone,floor:position.floor,area:position.area});var closestGtw,closestDistance;floorGateways.forEach(function(_gtw){var _dist=dist(position.xy_m,_gtw);if(typeof closestDistance!=="number"||closestDistance>_dist){closestGtw=_gtw;closestDistance=_dist}});return closestGtw};return{dist:dist,dist2:dist2,getClosestGatewayOnSameZoneFloorArea:getClosestGatewayOnSameZoneFloorArea}}();var mgLang={getUserLanguage:function(defaultLanguage){"use strict";var lang=window.navigator.userLanguage||window.navigator.language;if(mgJt.isEmpty(lang)===true){return defaultLanguage}return lang.substr(0,2)}};var mgEventPublisherFactory=function(){"use strict";var module=mgLogger.modules.Core,_events=[];var on=function(event,callback){if(typeof event!=="string"||event.length===0){return false}if(typeof callback!=="function"){return false}if(typeof _events==="undefined"){_events=[]}if(typeof _events[event]==="undefined"){_events[event]=[]}_events[event].push(callback);return true};var off=function(event,callback){if(typeof event!=="string"||event.length===0){return false}if(typeof callback!=="function"){return false}if(typeof _events==="undefined"){_events=[]}if(typeof _events[event]==="undefined"){_events[event]=[]}for(var i=0;i<_events[event].length;i++){if(_events[event][i]===callback){_events[event].splice(i,1);return true}}mgLogger.error(module,"Could not remove this callback");return false};var _deplayedPublish=function(event,data){if(typeof _events[event]==="undefined"){return}for(var i=0;i<_events[event].length;i++){_events[event][i](data)}};var publish=function(event,data){window.setTimeout(_deplayedPublish,0,event,data)};return{on:on,off:off,publish:publish}};var mgOnboard=function(){"use strict";var LOCAL_STORAGE_KEY="mobigeo-onboard-displayed",DEFAULT_DURATION=1900,DEFAULT_DELAY_BETWEEN=500;var getMaxDisplayValue=function(){var value=mgMapUi.getOptions().displayOnboardingNTimes;if(typeof value==="number"){return value}return mgMapConfig.get().Ui.onboard?mgMapConfig.get().Ui.onboard.displayOnboardingNTimes:2};var performIfNeeded=function(){var displayed=window.localStorage.getItem(LOCAL_STORAGE_KEY);switch(typeof displayed){case"string":displayed=parseInt(displayed,10);break;case"number":break;default:displayed=0}var displayOnboardingNTimes=getMaxDisplayValue();if(displayed<displayOnboardingNTimes){if(mgFeatures.isFavoritesEnabled()){showLongPressTooltip(displayButtonsToolTip)}else{displayButtonsToolTip()}window.localStorage.setItem(LOCAL_STORAGE_KEY,displayed+1)}};var displayButtonsToolTip=function(){var duration,delayBetween,delay,buttons=[".btn-clearAndResetZoom",".btn-clear",".btn-resetZoom",".btn-position",".btn-route",".btn-geogroup",".btn-aroundme",".btn-search",".btn-services",".btn-legend"];var config=mgMapConfig.get().Ui.onboard;if(config){duration=config.duration;delayBetween=config.delayBetween}else{duration=DEFAULT_DURATION;delayBetween=DEFAULT_DELAY_BETWEEN}var n=0;for(var i=0;i<buttons.length;i++){var selector=buttons[i],el=mgMapUi.getBottomButton(selector);if(el&&el.classList.contains(mgDt.FORCED_HIDE_CSS_CLASS)===false){delay=delayBetween+(duration+delayBetween)*n++;window.setTimeout(mgMessage.displayTooltip,delay,el,el.title,{duration:duration})}}};var showLongPressTooltip=function(next){var labelKey=mgSupport.env.isAndroid||mgSupport.env.iPad||mgSupport.env.iPhone||navigator.maxTouchPoints?"onboardMobile":"onboardDesktop";var okButton=mgModalButton.ok;okButton.cb=function(){mgModal.hide({next:next})};mgModal.showMessage({hideCrossClose:true,title:mgI18N.t("tip","misc"),content:mgI18N.t(labelKey,"favorites"),buttons:[okButton]})};return{performIfNeeded:performIfNeeded}}();var mgMessage=function(){"use strict";var module=mgLogger.modules.Core,DEFAULT_DURATION=3e3,displayedTooltips=[],maxDisplayPerTooltip=3;var anchorEl,currentNotifs=[],currentDisposeTimeout;var _clearNotifs=function(){if(currentDisposeTimeout){window.clearTimeout(currentDisposeTimeout)}while(currentNotifs.length){currentNotifs.shift().dispose()}};var displayNotification=function(msg,options){_clearNotifs();if(!anchorEl){anchorEl=document.getElementById("mg-notifications-anchor");anchorEl.style.top=mgMapUi.getMapTitleHeight()+"px"}var t=new Tooltip(anchorEl,{placement:"bottom",title:msg,template:'<div class="tooltip mg-notification" role="tooltip"><div class="tooltip-inner"></div></div>'});currentNotifs.push(t);t.show();currentDisposeTimeout=window.setTimeout(_clearNotifs,options&&options.duration||DEFAULT_DURATION)};var displayTooltip=function(el,msg,options){if(mgDt.isDOMElement(el)===false){mgLogger.error(module,"invalid argument, expected a DOM element, got: ",el);return}if(typeof msg!=="string"){mgLogger.error(module,"invalid argument, expected a string, got: ",msg);return}var count=displayedTooltips[msg];if(el.offsetParent===null){return}if(typeof count!=="number"){displayedTooltips[msg]=1}else if(count<maxDisplayPerTooltip){displayedTooltips[msg]=count+1}else{return}var titleValue=el.title;if(titleValue){el.removeAttribute("title")}var t=new Tooltip(el,{placement:options&&options.placement||"top",title:msg});t.show();var duration=options&&options.duration?options.duration:DEFAULT_DURATION;window.setTimeout(function(){t.dispose();if(titleValue){el.setAttribute("title",titleValue)}},duration)};return{displayNotification:displayNotification,displayTooltip:displayTooltip}}();var mgNaoService=function(){"use strict";var module=mgLogger.modules.Location,_options={wantBackgroundPositions:false},coordinatesMapping,coordinatesMappingBeingFetched,initialized=false,isPaused,isStoppedBeforePause,naoVersion,currentNaoStatus,naoPDBVersion,intervalGetLastErrorId,currentLocation,currentSiteName,compassCalibrationModal,hasRegistered=false,areAndroidPermissionsGranted=false,NAO_STATUSES={AVAILABLE:"NAO_FIX_AVAILABLE",UNAVAILABLE:"NAO_FIX_UNAVAILABLE",TEMPORARILY_UNAVAILABLE:"NAO_TEMPORARY_UNAVAILABLE",OUT_OF_SERVICE:"NAO_OUT_OF_SERVICE"},ERROR_CODES={UNSUPPORTED_OS:2,BLE_OFF:3,DATABASE_INITIALIZATION:6,LOCATION_PERMISSION_DENIED:7,WIFI_OFF:8,STARTUP_ERROR:12,INVALID_API_KEY:13,UNKNOWN:99};var fetchCoordinatesMapping=function(dataName){if(!dataName){if(mgData.getName()){dataName=mgData.getName()}else{mgLogger.error(module,"Cannot fetch coordinates-mapping.json as data set name is missing")}}if(coordinatesMappingBeingFetched){return}mgLogger.debug(module,"Get coordinates mapping for site "+dataName);coordinatesMappingBeingFetched=true;var provider=mgLocation.getCoordinatesMappingProvider(),url;if(typeof provider==="function"){url=provider(dataName)}else{if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(mgLocation.COORDINATES_MAPPING_PATH)}else{url=mgData.getPath()+mgLocation.COORDINATES_MAPPING_PATH}}mgFetchHelper.execute({type:"GET",url:url,isLocal:true,dataType:"json",success:function(datas){coordinatesMappingBeingFetched=false;if(mgJt.isEmpty(datas)===true){mgLogger.error(module,"Invalid coordinates-mapping.json",datas);mgLocation.setStatus("OUT_OF_SERVICE");return}coordinatesMapping=datas},error:function(){coordinatesMappingBeingFetched=false;mgLogger.error(module,"coordinates-mapping.json is missing!");mgLocation.setStatus("OUT_OF_SERVICE")}})};var resetCoordinatesMapping=function(){coordinatesMapping=null};var register=function(){if(hasRegistered!==true){mgNativeInterface.registerNaoCloud(Config.location.key,Config.location.registering.location,Config.location.registering.geofencing,Config.location.forceSynchronize===true);hasRegistered=true}};var isPositionSame=function(position1,position2){if(position1===null||position2===null){return false}var osKey=mgSupport.env.isAndroid?"Android":"iOS";var thresholds=mgMapConfig.get().Ui.locationThresholds;var compassThreshold=thresholds?thresholds.compass[osKey]:5;var translationThreshold=thresholds?thresholds.translation[osKey]:5;var x1=typeof position1.x_m==="number"?position1.x_m:position1.xy_m.x,x2=typeof position2.x_m==="number"?position2.x_m:position2.xy_m.x,y1=typeof position1.y_m==="number"?position1.y_m:position1.xy_m.y,y2=typeof position2.y_m==="number"?position2.y_m:position2.xy_m.y;if(Math.abs(x1-x2)>translationThreshold||Math.abs(y1-y2)>translationThreshold){return false}if(Math.abs(position1.course-position2.course)>compassThreshold){return false}if(mgJt.isEmpty(position1.floor)===false&&mgJt.isEmpty(position2.floor)===false){if(position1.floor!==position2.floor){return false}}return true};var update=function(latitude,longitude,altitude,accuracy,course){if(!mgPositionManager.getUserPosition()){mgLogger.debug(module,"Got a position but UI not ready");return}if(!coordinatesMapping){fetchCoordinatesMapping();mgLogger.debug(module,"Got a position but coordinates-mapping data is not yet available");return}var naoLocation={latitude:parseFloat(latitude),longitude:parseFloat(longitude),altitude:parseFloat(altitude),accuracy:parseFloat(accuracy),course:course};if(currentLocation!==null){if(naoLocation.latitude===currentLocation.latitude&&naoLocation.longitude===currentLocation.longitude&&naoLocation.altitude===currentLocation.altitude&&naoLocation.course===currentLocation.course){mgLogger.info(module,"Same location. Do nothing.");return}}var polestarIDAltitudeCoords=0;if(typeof coordinatesMapping[polestarIDAltitudeCoords]!=="object"){mgLogger.error(module,"Invalid altitude: not match with coordinates-mapping data!",polestarIDAltitudeCoords);return}var coords=coordinatesMapping[polestarIDAltitudeCoords];var naoPosition=null;var data=coords,x_mp=naoLocation.longitude*data.LonX+naoLocation.latitude*data.LatX+data.OffsetX,y_mp=naoLocation.longitude*data.LonY+naoLocation.latitude*data.LatY+data.OffsetY,x_mt=data.a+x_mp*data.c+y_mp*data.e,y_mt=data.b+x_mp*data.d+y_mp*data.f,zone=mgZoneManager.getZoneFromXY({x:x_mt*mgMapConfig.get().Ui.mapScale,y:y_mt*mgMapConfig.get().Ui.mapScale}),floorId=mgZoneManager.getZone(zone).getFloorIdFromAltitude(naoLocation.altitude);naoPosition={xy_m:{x:x_mt*mgMapConfig.get().Ui.mapScale,y:y_mt*mgMapConfig.get().Ui.mapScale},zone:zone,floor:floorId,course:typeof naoLocation.course==="number"?naoLocation.course-data.angle:null,accuracy:naoLocation.accuracy*data.scale*mgMapConfig.get().Ui.mapScale};if(mgLocation.isInRangePosition(naoPosition)===false){mgLogger.debug(module,"position is out of range");mgLocation.setIsPositionOutOfRange(true);mgLocation.refreshStatus();return}mgLocation.setIsPositionOutOfRange(false);if(naoPosition===null){mgLogger.error(module,"Could not set nao position from this coordinates.");return}if(isPositionSame(naoPosition,mgLocation.getCurrentPosition())===true){mgLogger.debug(module,"Same position. Do nothing.");return}currentLocation=naoLocation;mgLocation.setCurrentPosition(naoPosition);mgLocation.refreshStatus()};var initialize=function(){if(initialized===true||mgFeatures.isLocationEnabled()!==true||mgLocation.isLocationTypeNao()===false||isItSupported()===false){return}mgLogger.debug(module,"Initializing NAO location");var naoUpdateStatus=function(eventName,data){mgLogger.info(module,"=> updateStatus",data);if(data!==NAO_STATUSES.AVAILABLE){MobiGeo.Location.publish("locationUnavailable")}else if(data===NAO_STATUSES.AVAILABLE){MobiGeo.Location.publish("locationAvailable")}if(mgLocation.isStarted===false){mgLogger.info(module,"Ignoring event because Polestar is not started");return}switch(data){case NAO_STATUSES.AVAILABLE:case NAO_STATUSES.TEMPORARILY_UNAVAILABLE:case NAO_STATUSES.UNAVAILABLE:case NAO_STATUSES.OUT_OF_SERVICE:currentNaoStatus=data;mgLocation.refreshStatus();break;default:mgLogger.error(module,"Invalid nao update status",data)}};PubSub.subscribe("naoClient.updateStatus",naoUpdateStatus);var naoIncompatibleDevice=function(eventName,data){mgLogger.info(module,"incompatibleDevice",data);mgLocation.setStatus(mgLocationStatus.NOT_SUPPORTED)};PubSub.subscribe("naoClient.incompatibleDevice",naoIncompatibleDevice);var naoUpdatePosition=function(eventName,data){mgLogger.debug(module,"=> updatePosition",data);if(compassCalibrationModal&&data&&typeof data.headingAccuracy==="number"&&data.headingAccuracy>0){mgModal.hide({el:compassCalibrationModal})}if(mgLocation.isStarted===false){mgLogger.debug(module,"Ignoring event because Polestar is not started");return}if(mgLocation.getStatus()===mgLocationStatus.L12N_FORBIDDEN){naoUpdateStatus(null,NAO_STATUSES.AVAILABLE)}if(LocationValidStatus.indexOf(mgLocation.getStatus())===-1){mgLogger.debug(module,"Ignoring event because status is ",mgLocation.getStatus());return}if(doesSiteAndDatasetMatch()!==true){return}if(mgJt.isEmpty(data)===true||mgJt.isEmpty(data.latitude)===true){mgLogger.error(module,"Invalid parameters for updatePosition",data)}update(isNaN(parseFloat(data.latitude))===false?parseFloat(data.latitude):0,isNaN(parseFloat(data.longitude))===false?parseFloat(data.longitude):0,isNaN(parseFloat(data.altitude))===false?parseFloat(data.altitude):0,isNaN(parseFloat(data.hAccuracy))===false?parseFloat(data.hAccuracy):0,data.heading)};PubSub.subscribe("naoClient.updatePosition",naoUpdatePosition);var naoSendNotification=function(eventName,data){if(mgFeatures.isGeoPushEnabled()){mgLogger.debug(module,"GeoPush => "+data);MobiGeo.Location.GeoPush.publish("alert",data)}};PubSub.subscribe("naoClient.sendNotification",naoSendNotification);var naoSetStarted=function(eventName,data){mgLogger.debug(module,"=> setStarted",data);mgLocation.isReallyStarted=true;mgLocation.setStatus(mgLocationStatus.REALLY_STARTED)};PubSub.subscribe("naoClient.setStarted",naoSetStarted);var naoEnterSite=function(eventName,pdbName){if(Config.location.mapping&&Object.keys(Config.location.mapping).length>0){currentSiteName=Config.location.mapping[pdbName]}else{currentSiteName=mgData.getName()}if(doesSiteAndDatasetMatch()!==true){resetCoordinatesMapping()}else{fetchCoordinatesMapping()}mgLocation.isUserOnSite=true;MobiGeo.Location.publish("enterSite",currentSiteName||pdbName)};PubSub.subscribe("naoClient.enterSite",naoEnterSite);var naoExitSite=function(eventName,pdbName){var siteName;if(Config.location.mapping){siteName=Config.location.mapping[pdbName]}coordinatesMapping=null;mgLocation.isUserOnSite=false;if(siteName===currentSiteName){currentSiteName=null;resetCoordinatesMapping()}MobiGeo.Location.publish("exitSite",siteName||pdbName)};PubSub.subscribe("naoClient.exitSite",naoExitSite);var naoDisplayCalibration=function(eventName){mgLogger.info(module,"Compass calibration needed");if(!mgMapUi.ready){return}if(!compassCalibrationModal){compassCalibrationModal=mgModal.showMessage({title:mgI18N.t("_name_","mapPosition"),content:mgTemplates.compasscalibration.render({text:mgI18N.t("compassCalibration","mapPosition")}),buttons:[mgModalButton.close],onHide:function(){compassCalibrationModal=null}})}};PubSub.subscribe("naoClient.displayCalibration",naoDisplayCalibration);var naoSetError=function(eventName,data){switch(data.error){case ERROR_CODES.UNSUPPORTED_OS:mgLogger.error(module,"Unsupported Operating System",data);mgLocation.setStatus(mgLocationStatus.NOT_SUPPORTED);_MobiGeoLocation.broadcastLocationNotSupported();break;case ERROR_CODES.BLE_OFF:mgLocation.handleBleOff();break;case ERROR_CODES.DATABASE_INITIALIZATION:mgLogger.error(module,"Database initialisation",data);mgLocation.setStatus(mgLocationStatus.NETWORK_ERROR);_MobiGeoLocation.broadcastInitializationFailure();break;case ERROR_CODES.LOCATION_PERMISSION_DENIED:mgLogger.error(module,"Location permission denied",data);mgLocation.setStatus(mgLocationStatus.L12N_FORBIDDEN);_MobiGeoLocation.broadcastLocationDenied();break;case ERROR_CODES.WIFI_OFF:mgLogger.error(module,"Errors Wifi off",data);mgLocation.setStatus(mgLocationStatus.WIFI_OFF);_MobiGeoLocation.broadcastWifiDisabled();break;case ERROR_CODES.STARTUP_ERROR:mgLogger.error(module,"Startup error",data);mgLocation.setStatus(mgLocationStatus.NETWORK_ERROR);_MobiGeoLocation.broadcastInitializationFailure(data);break;case ERROR_CODES.INVALID_API_KEY:break;default:mgLogger.error(module,"Unknown error",data);mgLocation.setStatus(mgLocationStatus.UNKNOWN_ERROR);MobiGeo.Location.publish("error",_MobiGeoLocation.ERRORS.UNKNOWN_ERROR,data)}};PubSub.subscribe("naoClient.setError",naoSetError);initialized=true};var doesSiteAndDatasetMatch=function(){return!currentSiteName||!!(mgData.getName()&&mgData.getName()===currentSiteName)};var mToWgs=function(x,y){if(mgJt.isEmpty(coordinatesMapping[0].scale_svg_to_georeferenced_map)===true){}else{x=x*coordinatesMapping[0].scale_svg_to_georeferenced_map;y=y*coordinatesMapping[0].scale_svg_to_georeferenced_map;return{lon:coordinatesMapping[0].OffsetLon+coordinatesMapping[0].XLon*x+coordinatesMapping[0].YLon*y,lat:coordinatesMapping[0].OffsetLat+coordinatesMapping[0].XLat*x+coordinatesMapping[0].YLat*y}}};var getCoordinatesMapping=function(){return coordinatesMapping};var start=function(){if(isItSupported()===false){return}if(hasRegistered!==true){register();window.setTimeout(start,1e3);return}if(mgLocation.isStarted===true){mgLogger.info(module,"Nao service is already started!");return}if(isPaused===true&&_options.wantBackgroundPositions===false){mgLogger.info(module,"Start stopped because app is in pause and background positions are OFF.");return}mgLocation.setStatus(mgLocationStatus.STARTED);currentNaoStatus="";mgLogger.info(module,"Nao service about to start");window.naoClient.startLocation();mgLocation.refreshStatus();mgLocation.setIsStarted(true)};var stop=function(options,cb){mgLogger.debug(module,"stop");if(typeof cb!=="function"){cb=function(){}}if(isItSupported()===false){cb(_MobiGeoLocation.ERRORS.LOCATION_NOT_SUPPORTED);return false}if(mgLocation.isStarted===false){mgLogger.info(module,"Nao service is already stopped!");cb();return true}if(mgJt.isEmpty(options)===true||options.disableGetLastErrorHandler!==false){window.clearInterval(intervalGetLastErrorId)}mgPositionTracking.disable({showMessage:true});currentNaoStatus="";if(mgJt.isEmpty(options)===true||options.broadcast!==false){mgLocation.setStatus(mgLocationStatus.STOPPED)}window.naoClient.stopLocation();cb();return true};var isItSupported=function(){if(typeof window.naoClient!=="object"||typeof window.naoClient.startLocation!=="function"){mgLocation.notSupported("Could not access NAO client dependency");return false}return true};var setCurrentNaoStatus=function(value){currentNaoStatus=value};var reset=function(){mgLogger.debug(module,"[reset] NAO");hasRegistered=false;isPaused=false;currentNaoStatus="";naoVersion="";naoPDBVersion="";isStoppedBeforePause=false;intervalGetLastErrorId=null;currentLocation=null};var setUpdateServer=function(value){window.naoClient.setUpdateServer(value)};PubSub.subscribe("naoClient.synchronizationSucess",function(){window.setTimeout(window.naoClient.getDatabaseVersion,2e3)});PubSub.subscribe("naoClient.getDatabaseVersion",function(evtName,version){mgLogger.info(module,"NAO PDB updated to version: "+version)});reset();return{NAO_STATUSES:NAO_STATUSES,mToWgs:mToWgs,initialize:initialize,start:start,stop:stop,reset:reset,setCurrentNaoStatus:setCurrentNaoStatus,setUpdateServer:setUpdateServer,getCoordinatesMapping:getCoordinatesMapping,get currentNaoStatus(){return currentNaoStatus}}}();var mgPlanetIntusService=function(){"use strict";var module=mgLogger.modules.Location;var _options={positionMargin:5};var subscriptions=[],currentLocation=null,coordinatesMapping,currentStatus,dataFetched=false,STATUSES={AVAILABLE:"FIX_AVAILABLE"};var fetchCoordinatesMapping=function(dataName){if(!dataName){if(mgData.getName()){dataName=mgData.getName()}else{mgLogger.error(module,"Cannot fetch coordinates-mapping.json as data set name is missing")}}if(dataFetched){return}dataFetched=true;mgLogger.debug(module,"Get coordinates mapping for site "+dataName);var provider=mgLocation.getCoordinatesMappingProvider(),url;if(typeof provider==="function"){url=provider(dataName)}else{if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(mgLocation.COORDINATES_MAPPING_PATH)}else{url=mgData.getPath()+mgLocation.COORDINATES_MAPPING_PATH}}mgFetchHelper.execute({type:"GET",url:url,isLocal:true,dataType:"json",success:function(datas){if(mgJt.isEmpty(datas)===true){mgLogger.error(module,"Invalid coordinates-mapping data!",datas);mgLocation.setStatus("OUT_OF_SERVICE");return}coordinatesMapping=datas},error:function(){mgLogger.error(module,"coordinates-mapping.json is missing!");mgLocation.setStatus("OUT_OF_SERVICE")}})};var getCoordinatesMapping=function(){return coordinatesMapping};var update=function(latitude,longitude,altitude,accuracy,course){if(!mgPositionManager.getUserPosition()){mgLogger.debug(module,"Got a position but UI not ready");return}if(!coordinatesMapping){mgLogger.debug(module,"Got a position but coordinates mapping data is not yet available");return}var newLocation={latitude:parseFloat(latitude),longitude:parseFloat(longitude),altitude:parseFloat(altitude),accuracy:parseFloat(accuracy),course:course};if(!!currentLocation){if(newLocation.latitude===currentLocation.latitude&&newLocation.longitude===currentLocation.longitude&&newLocation.altitude===currentLocation.altitude&&newLocation.course===currentLocation.course){mgLogger.info(module,"Same location. Do nothing.");return}}var altitudeCoords=0;if(typeof coordinatesMapping[altitudeCoords]!=="object"){mgLogger.error(module,"Invalid altitude: not match with var-polestar data!",altitudeCoords);return}var coords=coordinatesMapping[altitudeCoords];var position=null;var data=coords,x_mp=newLocation.longitude*data.LonX+newLocation.latitude*data.LatX+data.OffsetX,y_mp=newLocation.longitude*data.LonY+newLocation.latitude*data.LatY+data.OffsetY,x_mt=data.a+x_mp*data.c+y_mp*data.e,y_mt=data.b+x_mp*data.d+y_mp*data.f,zone=mgZoneManager.getZoneFromXY({x:x_mt*mgMapConfig.get().Ui.mapScale,y:y_mt*mgMapConfig.get().Ui.mapScale}),floorId=mgZoneManager.getZone(zone).getFloorIdFromAltitude(newLocation.altitude);position={xy_m:{x:x_mt*mgMapConfig.get().Ui.mapScale,y:y_mt*mgMapConfig.get().Ui.mapScale},zone:zone,floor:floorId,course:typeof newLocation.course==="number"?newLocation.course-data.angle:null,accuracy:newLocation.accuracy*data.scale*mgMapConfig.get().Ui.mapScale};if(mgLocation.isInRangePosition(position)===false){mgLogger.debug(module,"position is out of range");mgLocation.setIsPositionOutOfRange(true);mgLocation.refreshStatus();return}mgLocation.setIsPositionOutOfRange(false);if(position===null){mgLogger.error(module,"Could not set position from this coordinates.");return}if(isPositionSame(position,mgLocation.getCurrentPosition())===true){mgLogger.debug(module,"Same position. Do nothing.");return}currentLocation=newLocation;mgLocation.setCurrentPosition(position);mgLocation.isUserOnSite=true;mgLocation.refreshStatus()};var isPositionSame=function(position1,position2){if(position1===null||position2===null){return false}if(Math.abs(position1.x_m-position2.x_m)>_options.positionMargin||Math.abs(position1.y_m-position2.y_m)>_options.positionMargin){return false}if(Math.abs(position1.course-position2.course)>_options.positionMargin){return false}if(mgJt.isEmpty(position1.floor)===false&&mgJt.isEmpty(position2.floor)===false){if(position1.floor!==position2.floor){return false}}return true};var onPosition=function(eventName,data){currentStatus=STATUSES.AVAILABLE;mgLogger.debug(module,"=> onPosition",data);if(mgLocation.isStarted===false){mgLogger.debug(module,"Ignoring event because location is not started");return}if(LocationValidStatus.indexOf(mgLocation.getStatus())===-1){mgLogger.debug(module,"Ignoring event because status is ",mgLocation.getStatus());return}if(mgJt.isEmpty(data)===true||mgJt.isEmpty(data.latitude)===true){mgLogger.error(module,"Invalid parameters for updatePosition",data)}update(isNaN(parseFloat(data.latitude))===false?parseFloat(data.latitude):0,isNaN(parseFloat(data.longitude))===false?parseFloat(data.longitude):0,isNaN(parseFloat(data.altitude))===false?parseFloat(data.altitude):0,isNaN(parseFloat(data.hAccuracy))===false?parseFloat(data.hAccuracy):0,data.course)};subscriptions.push(PubSub.subscribe("PlanetIntus.onPosition",onPosition));var onNotification=function(_,data){if(mgFeatures.isGeoPushEnabled()){mgLogger.debug(module,"GeoPush => "+data);MobiGeo.Location.GeoPush.publish("alert",data)}};subscriptions.push(PubSub.subscribe("PlanetIntus.onNotification",onNotification));var start=function(){mgLogger.debug(module,"Start location");if(isItSupported()===false){return}if(mgLocation.isStarted===true){mgLogger.info(module,"Planet Intus service is already started!");return}mgLocation.setStatus(mgLocationStatus.STARTED);currentStatus="";window.planetIntus.startLocation();mgLocation.setStatus(mgLocationStatus.STARTED);mgLocation.setIsStarted(true);mgLocation.isReallyStarted=true;mgLocation.setStatus(mgLocationStatus.REALLY_STARTED);mgLocation.refreshStatus()};var stop=function(options,cb){mgLogger.debug(module,"stop");if(typeof cb!=="function"){cb=function(){}}if(isItSupported()===false){cb(_MobiGeoLocation.ERRORS.LOCATION_NOT_SUPPORTED);return false}if(mgLocation.isStarted===false){mgLogger.info(module,"Planet Intus service is already stopped!");cb();return true}mgPositionTracking.disable({showMessage:true});window.planetIntus.stopLocation();mgLocation.setStatus(mgLocationStatus.STOPPED);currentStatus="";cb();return true};var isItSupported=function(){if(typeof window.planetIntus!=="object"||typeof window.planetIntus.startLocation!=="function"){mgLocation.notSupported("Could not access planetIntus dependency");return false}return true};var initialize=function(){currentStatus="";fetchCoordinatesMapping();start()};var reset=function(){};return{STATUSES:STATUSES,initialize:initialize,reset:reset,start:start,stop:stop,getCoordinatesMapping:getCoordinatesMapping,setCurrentStatus:function(value){currentStatus=value},get currentStatus(){return currentStatus}}}();var mgLocationStatus={NOT_SUPPORTED:"not-supported",STOPPED:"off",UNKNOWN_ERROR:"error",OUT_OF_SERVICE:"error",NETWORK_ERROR:"error-network",TEMPORARILY_UNAVAILABLE:"temporarily-unavailable",WIFI_OFF:"error-wifi-off",BLUETOOTH_OFF:"error-ble-off",L12N_FORBIDDEN:"error-location-forbidden",STARTED:"on",NOT_STARTED:"off",REALLY_STARTED:"on-blink",HAS_NO_POSITION:"on-no-position",OUT_OF_RANGE:"on-outside",ANDROID_PERMISSIONS_ERROR:"error-android-permissions",HAS_POSITION:{UNTRACK:"on-position",TRACK:"on-position-track",TRACK_UNCENTERED:"on-position-track-uncentered"}};var LocationValidStatus=[mgLocationStatus.STARTED,mgLocationStatus.REALLY_STARTED,mgLocationStatus.HAS_POSITION,mgLocationStatus.HAS_NO_POSITION,mgLocationStatus.TEMPORARILY_UNAVAILABLE,mgLocationStatus.OUT_OF_RANGE];var LocationErrorStatus=[mgLocationStatus.UNKNOWN_ERROR,mgLocationStatus.OUT_OF_SERVICE,mgLocationStatus.NETWORK_ERROR,mgLocationStatus.WIFI_OFF,mgLocationStatus.BLUETOOTH_OFF,mgLocationStatus.L12N_FORBIDDEN,mgLocationStatus.ANDROID_PERMISSIONS_ERROR];var mgLocationUi=function(){"use strict";var module=mgLogger.modules.Location,buttonEl,previousStatus,initialized;var reset=function(){mgLogger.debug(module,"[reset] location-ui");buttonEl=null;previousStatus=null;initialized=false};reset();var initialize=function(){mgLogger.debug(module,"Initialize mgLocationUi");buttonEl=mgMapUi.getBottomButton(".btn-position");if(mgJt.isEmpty(buttonEl)===true){mgLogger.error(module,"Could not find position button");return}initialized=true};var updateButtonStyle=function(status){if(!initialized){mgLogger.debug(module,"LocationUI not initialized yet");return}if(status===previousStatus){return}mgLogger.debug(module,"updateButtonStyle",status);if(mgJt.isEmpty(buttonEl)===true){mgLogger.error(module,"Coud not update button style because no button",status);return}if(previousStatus!==null){buttonEl.classList.remove(previousStatus)}mgLocation.setButtonStatus(status);if(LocationErrorStatus.indexOf(status)!==-1){previousStatus=mgLocationStatus.OUT_OF_SERVICE;buttonEl.classList.add(previousStatus)}else{switch(status){case mgLocationStatus.STARTED:case mgLocationStatus.OUT_OF_RANGE:case mgLocationStatus.HAS_NO_POSITION:previousStatus=mgLocationStatus.STARTED;buttonEl.classList.add(previousStatus);break;case mgLocationStatus.HAS_POSITION.UNTRACK:case mgLocationStatus.HAS_POSITION.TRACK:case mgLocationStatus.HAS_POSITION.TRACK_UNCENTERED:case mgLocationStatus.REALLY_STARTED:case mgLocationStatus.STOPPED:case mgLocationStatus.TEMPORARILY_UNAVAILABLE:previousStatus=status;buttonEl.classList.add(previousStatus);break;default:mgLogger.error(module,"Could not update status: invalid status",status)}}};var hideButton=function(){if(!initialized){mgLogger.debug(module,"LocationUI not initialized yet");return}mgDt.hideElement(buttonEl)};var showTooltip=function(message){mgMessage.displayTooltip(buttonEl,message)};return{reset:reset,initialize:initialize,get initialized(){return initialized},hideButton:hideButton,updateButtonStyle:updateButtonStyle,showTooltip:showTooltip}}();var mgLocation=function(){"use strict";var module=mgLogger.modules.Location,isPositionOutOfRange,isSupported=true,isStarted,isReallyStarted,hasPosition=false,isUserOnSite=false,currentPosition,haveAlreadyBeenLocalized,status,buttonStatus,geolocService=null,DELAY_BEFORE_RESTART=4500,isInitializing=false,isInitialized=false,coordinatesMappingProvider,COORDINATES_MAPPING_PATH="files/maps/config/coordinates-mapping.json";var onMapPositionButtonClick=function(){mgLogger.debug(module,"onMapPositionButtonClick",status,buttonStatus);MobiGeo.Map.publish("tapButtonPosition");var closeButton=mgModalButton.close,modalOptions={title:mgI18N.t("_name_","mapPosition"),buttons:[closeButton]};if(mgAndroidPermissions.areNeeded===true){mgAndroidPermissions.addGrantCallback(start);mgNativeInterface.checkPermissions();stop();return}switch(buttonStatus){case mgLocationStatus.STOPPED:if(mgMapConfig.get().legacyMobigeoPermissions===true){modalOptions.content=mgI18N.t("positionIsStopped","mapPosition");mgModal.showMessage(modalOptions)}else{MobiGeo.Location.publish("requestLocationCapabilities")}break;case mgLocationStatus.OUT_OF_SERVICE:modalOptions.content=mgI18N.t("positionOutOfService","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.NETWORK_ERROR:modalOptions.content=mgI18N.t("positionErrorNetwork","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.WIFI_OFF:modalOptions.content=mgI18N.t("positionErrorWifi","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.BLUETOOTH_OFF:showBleError();break;case mgLocationStatus.L12N_FORBIDDEN:modalOptions.content=mgI18N.t("positionErrorCoreLocation","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.HAS_POSITION.TRACK_UNCENTERED:mgPositionTracking.enable();break;case mgLocationStatus.HAS_POSITION.TRACK:mgPositionTracking.disable({showMessage:true});break;case mgLocationStatus.HAS_POSITION.UNTRACK:mgPositionTracking.enable();break;case mgLocationStatus.REALLY_STARTED:modalOptions.content=mgI18N.t("positionInProgress","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.TEMPORARILY_UNAVAILABLE:case mgLocationStatus.HAS_NO_POSITION:modalOptions.content=mgI18N.t("positionNotLocated","mapPosition");mgModal.showMessage(modalOptions);break;case mgLocationStatus.OUT_OF_RANGE:modalOptions.content=mgI18N.t("positionOutside","mapPosition");mgModal.showMessage(modalOptions);break}};var setStatus=function(newStatus){mgLogger.debug(module,"setStatus:",newStatus!==mgLocationStatus.HAS_POSITION?newStatus:getHasPositionCurrentState());if(status===newStatus){if((newStatus===mgLocationStatus.TEMPORARILY_UNAVAILABLE||newStatus===mgLocationStatus.HAS_POSITION)===false){mgLogger.info(module,"Same status, do nothing:",newStatus);return}}else{if(newStatus===mgLocationStatus.STOPPED){mgLogger.debug(module,"location stopped. old status was: "+status);MobiGeo.Location.publish("stopped")}}status=newStatus;switch(status){case mgLocationStatus.NOT_SUPPORTED:case mgLocationStatus.STOPPED:case mgLocationStatus.OUT_OF_SERVICE:case mgLocationStatus.OUT_OF_RANGE:case mgLocationStatus.HAS_NO_POSITION:case mgLocationStatus.UNKNOWN_ERROR:case mgLocationStatus.NETWORK_ERROR:case mgLocationStatus.L12N_FORBIDDEN:case mgLocationStatus.WIFI_OFF:case mgLocationStatus.BLUETOOTH_OFF:case mgLocationStatus.TEMPORARILY_UNAVAILABLE:currentPosition=null;setHasPosition(false);if(mgJt.isEmpty(mgPositionManager.getUserPosition())===false){mgPositionManager.getUserPosition().hide()}break}switch(status){case mgLocationStatus.OUT_OF_RANGE:case mgLocationStatus.REALLY_STARTED:case mgLocationStatus.STOPPED:case mgLocationStatus.HAS_NO_POSITION:case mgLocationStatus.NETWORK_ERROR:case mgLocationStatus.L12N_FORBIDDEN:case mgLocationStatus.WIFI_OFF:case mgLocationStatus.TEMPORARILY_UNAVAILABLE:mgLocationUi.updateButtonStyle(status);break;case mgLocationStatus.HAS_POSITION:mgLocationUi.updateButtonStyle(getHasPositionCurrentState());break;case mgLocationStatus.NOT_SUPPORTED:if(!mgLocationUi.initialized){return}if(mgNativeInterface.isNative===true){mgModal.showMessage({title:mgI18N.t("_name_","mapPosition"),content:mgI18N.t("not_compatible","mapPosition"),buttons:[mgModalButton.close]})}mgLocationUi.hideButton();break;case mgLocationStatus.OUT_OF_SERVICE:case mgLocationStatus.UNKNOWN_ERROR:mgLocationUi.updateButtonStyle(status);break;case mgLocationStatus.BLUETOOTH_OFF:mgLocationUi.updateButtonStyle(status);showBleError();break}};var getHasPositionCurrentState=function(){if(mgPositionTracking.isEnabled()===true){if(mgPositionTracking.isCentered()!==true){return mgLocationStatus.HAS_POSITION.TRACK_UNCENTERED}else{return mgLocationStatus.HAS_POSITION.TRACK}}else{return mgLocationStatus.HAS_POSITION.UNTRACK}};var showBleError=function(){if(!mgMapUi.ready){mgLogger.debug(module,"Can't display a modal to inform user that BLE needs to be turned on.")}else{if(mgSupport.env.isAndroid===true&&mgNativeInterface.hasBluetoothStatusAbility()===true){mgNativeInterface.showModalEnableBLE()}else{mgModal.showMessage({title:mgI18N.t("_name_","mapPosition"),content:mgI18N.t("no_bluetooth","mapPosition"),buttons:[mgModalButton.close]})}}};var refreshStatus=function(){mgLogger.debug(module,"refreshStatus...");if(isSupported===false){setHasPosition(false);setStatus(mgLocationStatus.NOT_SUPPORTED);return}if(isStarted===false||isReallyStarted===false&&!window.MOBIGEODEV){setHasPosition(false);setStatus(mgLocationStatus.NOT_STARTED);return}if(isLocationTypeNao()===true){if(mgNaoService.currentNaoStatus===""){setStatus(mgLocationStatus.REALLY_STARTED);return}if(mgNaoService.currentNaoStatus!==mgNaoService.NAO_STATUSES.AVAILABLE){if(mgNaoService.currentNaoStatus===mgNaoService.NAO_STATUSES.OUT_OF_SERVICE){setStatus(mgLocationStatus.OUT_OF_SERVICE)}else if(mgNaoService.currentNaoStatus===mgNaoService.NAO_STATUSES.TEMPORARILY_UNAVAILABLE){setStatus(mgLocationStatus.TEMPORARILY_UNAVAILABLE)}else{mgLogger.error(module,"Invalid currentNaoStatus",mgNaoService.currentNaoStatus)}return}}else if(isLocationTypeIntus()===true){if(planetIntus.currentStatus===""){setStatus(mgLocationStatus.REALLY_STARTED);return}}else{mgLogger.error(module,"Unsupported location type "+Config.location.type)}if(hasPosition===false||currentPosition===null){setStatus(mgLocationStatus.HAS_NO_POSITION);return}if(isPositionOutOfRange===true){setHasPosition(false);setStatus(mgLocationStatus.OUT_OF_RANGE);return}setStatus(mgLocationStatus.HAS_POSITION);MobiGeo.Location.publish("hasPosition",currentPosition);if(haveAlreadyBeenLocalized===false){haveAlreadyBeenLocalized=true}mgPositionManager.getUserPosition().setUserPosition(currentPosition)};var setHasPosition=function(value){if(!value){MobiGeo.Location.publish("locationUnavailable")}else{MobiGeo.Location.publish("locationAvailable")}if(typeof value!=="boolean"){mgLogger.error(module,"invalid value for hasPosition "+typeof value);return}if(hasPosition!==value){hasPosition=value;if(isLocationTypeNao()!==true){if(hasPosition===true){MobiGeo.Location.publish("enterSite")}else{MobiGeo.Location.publish("exitSite")}}}};var setGeolocService=function(){if(mgLocation.isLocationTypeNao()===true){if(!Config.location.key){mgLogger.error(module,"Could not read NAO location service API key")}else{geolocService=mgNaoService}}else if(mgLocation.isLocationTypeIntus()===true){geolocService=mgPlanetIntusService}else{mgLogger.error(module,"Cannot determine location service from configuration:",Config.location)}};var init=function(cb){var cbIsFunction=typeof cb==="function";if(isInitialized){if(cbIsFunction){cb()}return}isInitializing=true;setGeolocService();if(!geolocService){mgLogger.error(module,"Location service could not be determined");if(typeof cb==="function"){cb(_MobiGeoLocation.ERRORS.INITIALIZATION_FAILURE)}}else{if(mgNativeInterface.hasBluetoothStatusAbility()===false){notSupported("Bluetooth status unavailable");if(typeof cb==="function"){cb(_MobiGeoLocation.ERRORS.INITIALIZATION_FAILURE)}return}window.setTimeout(function(){if(mgNativeInterface.isBLECapable()===false){notSupported("Bluetooth Low Energy (BLE) is not supported");if(typeof cb==="function"){cb(_MobiGeoLocation.ERRORS.LOCATION_NOT_SUPPORTED)}return}geolocService.initialize();isInitializing=false;isInitialized=true;if(cbIsFunction){cb()}},300)}};PubSub.subscribe("mobigeo-mapsDisplayed",function(){});PubSub.subscribe("mobigeo-ble-enabled",function bleEnabled(){if(isStarted===false){return}mgLogger.debug(module,"Bluetooth has been enabled");setStatus(mgLocationStatus.REALLY_STARTED)});PubSub.subscribe("mobigeo-ble-disabled",function bleDisabled(){if(isStarted===false){return}mgLogger.debug(module,"Bluetooth has been disabled");handleBleOff()});var handleBleOff=function(){mgLogger.error(module,"PNAOLOCATIONSERVICE_ERRORS_BLUETOOTH_OFF");_MobiGeoLocation.broadcastBluetoothDisabled();setStatus(mgLocationStatus.BLUETOOTH_OFF)};var start=function(cb){if(typeof cb!=="function"){cb=function(){}}if(!mgFeatures.isLocationEnabled()||mgNativeInterface.isNative!==true&&window.MOBIGEODEV!==true){mgLogger.debug(module,"Location feature is not available");if(typeof cb==="function"){cb(_MobiGeoLocation.ERRORS.LOCATION_FEATURE_NOT_ACTIVATED)}return}if(isStarted===true){mgLogger.info(module,"Location already started");return}init(function(error){if(error){cb(error);return}_performStartWhenInitialized(cb)})};var _performStartWhenInitialized=function(cb){if(typeof cb!=="function"){cb=function(){}}if(mgJt.isEmpty(geolocService)===true){mgLogger.error(module,"No location feature detected.");cb(_MobiGeoLocation.ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}cb();if(mgAndroidPermissions.areNeeded===true){mgAndroidPermissions.addGrantCallback(_performStartWhenInitialized);mgNativeInterface.checkPermissions();mgLocationUi.updateButtonStyle(mgLocationStatus.ANDROID_PERMISSIONS_ERROR);return}window.setTimeout(function(){geolocService.start()},300)};var stop=function(opts,cb){if(geolocService){geolocService.stop(opts,cb)}else if(typeof cb==="function"){cb(_MobiGeoLocation.ERRORS.INITIALIZATION_FAILURE)}isStarted=false;isUserOnSite=false};var isInRangePosition=function(position){return mgZoneManager.isInsideSite(position.xy_m)===true};var onMobigeoMapUiReady=function(){if(mgFeatures.isLocationEnabled()&&(mgNativeInterface.isNative===true||window.MOBIGEODEV===true)){mgLocationUi.initialize()}};PubSub.subscribe("mobigeo-mapUiReady",onMobigeoMapUiReady);var isLocationTypeNao=function(){return Config.location.type.indexOf("nao")!==-1};var isLocationTypeIntus=function(){return Config.location.type.indexOf("intus")!==-1};var notSupported=function(reason){mgLogger.error(module,reason?reason:"Location not supported!");_MobiGeoLocation.broadcastLocationNotSupported();isSupported=false;refreshStatus()};var setUpdateServer=function(value){if(typeof value!=="string"){mgLogger.error(module,"Wrong 'update server' argument type, string expected, got: "+value+" ("+typeof value+")");return}var urlToLocationFiles=mgUpdateMain.getServerPath("/location-files");if(isLocationTypeNao()){mgNaoService.setUpdateServer(urlToLocationFiles)}else{mgLogger.info(module,"Cannot set update server from location type "+Config.location.type)}};var mToWgs=function(x,y){if(!geolocService){mgLogger.error(module,"Geoloc service not initialized");return}var coordMapping=geolocService.getCoordinatesMapping();if(!coordMapping){console.error("Missing coordinates mapping data");return}if(mgJt.isEmpty(coordMapping[0].scale_svg_to_georeferenced_map)===true){}else{x=x*coordMapping[0].scale_svg_to_georeferenced_map;y=y*coordMapping[0].scale_svg_to_georeferenced_map;return{lon:coordMapping[0].OffsetLon+coordMapping[0].XLon*x+coordMapping[0].YLon*y,lat:coordMapping[0].OffsetLat+coordMapping[0].XLat*x+coordMapping[0].YLat*y}}};var getCurrentMapPdbName=function(){var currentDatasetName=mgData.getName();return Object.keys(Config.location.mapping).find(function(_pdbName){return Config.location.mapping[_pdbName]===currentDatasetName})};var reset=function(){mgLogger.debug(module,"[reset] Location");if(mgJt.isEmpty(geolocService)===false){geolocService.reset()}isPositionOutOfRange=false;isStarted=false;isReallyStarted=false;currentPosition=null;haveAlreadyBeenLocalized=false;status=null;buttonStatus=mgLocationStatus.STOPPED};reset();return{start:start,stop:stop,reset:reset,setStatus:setStatus,refreshStatus:refreshStatus,handleBleOff:handleBleOff,notSupported:notSupported,mToWgs:mToWgs,isInRangePosition:isInRangePosition,isLocationTypeNao:isLocationTypeNao,isLocationTypeIntus:isLocationTypeIntus,onMapPositionButtonClick:onMapPositionButtonClick,getCurrentMapPdbName:getCurrentMapPdbName,get isSupported(){return isSupported},set isSupported(value){isSupported=value},get isReallyStarted(){return isReallyStarted},set isReallyStarted(value){isReallyStarted=value},setUpdateServer:setUpdateServer,get isUserOnSite(){return isUserOnSite},set isUserOnSite(value){isUserOnSite=value},setIsStarted:function(value){if(value!==isStarted&&value){MobiGeo.Location.publish("started")}isStarted=value},get isStarted(){return isStarted},get COORDINATES_MAPPING_PATH(){return COORDINATES_MAPPING_PATH},setCoordinatesMappingProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"coordinates-mapping provider is not a function",provider);return}coordinatesMappingProvider=provider},getCoordinatesMappingProvider:function(){return coordinatesMappingProvider},getIsPositionOutOfRange:function(){return isPositionOutOfRange},setIsPositionOutOfRange:function(value){isPositionOutOfRange=value},getCurrentPosition:function(){return currentPosition},setCurrentPosition:function(value){currentPosition=value;setHasPosition(true)},hasPosition:function(){return hasPosition===true},setButtonStatus:function(value){buttonStatus=value},getStatus:function(){return status}}}();var mgAssetsFactory=function(){"use strict";var LOG_PREF="[assets] ",module=mgLogger.modules.Update;var list=null,version=1,listVersion={};var getAssetsListPath=function(){return mgData.getPath()+"assets_list.json"};var save=function(){mgLogger.debug(module,LOG_PREF+"save");window.localStorage.setItem(mgUpdater.getLocalStoragePrefix()+"Assets.version",version);window.localStorage.setItem(mgUpdater.getLocalStoragePrefix()+"Assets.listVersion",JSON.stringify(listVersion))};var saveList=function(){mgLogger.debug(module,LOG_PREF+"Saving assets list into the APP LOCAL Storage: assets_list.json");var setFileContentWin=function(){mgLogger.debug(module,LOG_PREF+"setFileContentWin")};var setFileContentFail=function(){mgLogger.debug(module,"setFileContentFail");mgLogger.error(module,LOG_PREF+"setFileContentFail error: Could not write APP LOCAL file: assets_list.json")};mgFileSystem.setFileContent(getAssetsListPath(),JSON.stringify(list),setFileContentWin,setFileContentFail)};var loadFile=function(callback){mgLogger.debug(module,LOG_PREF+"load local assets_global.json for current data set");mgFetchHelper.execute({cache:false,dataType:"json",timeout:mgUpdateMain.DOWNLOAD_FILE_TIMEOUT,type:"get",url:mgData.getPath()+"assets_global.json",success:function(datas){list=datas;version=1;mgUpdateMain.updateProjectVersion(list.projectVersion);listVersion={initial:list.version};save();callback()},error:function(){mgLogger.error(module,LOG_PREF+"Error while fetching assets list json file, "+"which should have been included in app build!",arguments);mgUpdateMain.publishUpdateDone(mgUpdateMain.status.CANCELLED)}})};var init=function(callback){mgLogger.debug(module,LOG_PREF+"init");version=parseInt(window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"Assets.version"),10);mgLogger.debug(module,LOG_PREF+"localStorage assets version: ",version);if(isNaN(version)===true||version===1){mgLogger.debug(module,LOG_PREF+"first time launch!");loadFile(callback)}else if(version>1){mgLogger.debug(module,LOG_PREF+"not first time launch! Now read the APP LOCAL assets definition");var getFileContentWin=function(data){mgLogger.debug(module,LOG_PREF+"getFileContentWin");mgLogger.debug(module,LOG_PREF+"Load APP LOCAL assets.");if(typeof data==="string"){data=JSON.parse(data)}list=data;listVersion=JSON.parse(window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"Assets.listVersion"));if(version>1){mgFileSystem.getDirectory(mgData.getPath()+"V"+(version-1),function(){mgLogger.debug(module,LOG_PREF+"OK: LOCAL APP assets directory exist... Continue!");callback()},function(){mgLogger.error(module,LOG_PREF+"Should not come here.... Means the APP LOCAL folder does not exist anymore...","V"+(version-1));loadFile(callback)})}else{mgLogger.debug(module,LOG_PREF+"OK: LOCAL APP assets directory V1 exist... Continue!");callback()}};var getFileContentFail=function(){mgLogger.debug(module,LOG_PREF+"getFileContentFail");mgLogger.error(module,LOG_PREF+"Should not come here.... Means the APP LOCAL assets_list.json could not get read OR write.");loadFile(callback)};mgFileSystem.getFileContent(getAssetsListPath(),getFileContentWin,getFileContentFail)}};var debug=function(){mgLogger.debug(module,"**********   ASSETS  ************");mgLogger.debug(module,"----------- VARIABLES -----------");mgLogger.debug(module,"version: ",version);mgLogger.debug(module,"listVersion: ",listVersion);mgLogger.debug(module,"list: ",list);mgLogger.debug(module,"");mgLogger.debug(module,"----------- LOCALSTORAGE -----------");mgLogger.debug(module,"version:",window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"Assets.version"));mgLogger.debug(module,"listVersion:",window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"Assets.listVersion"));mgLogger.debug(module,"*********************************")};if(window.MOBIGEODEV){window.assetsDebug=debug}var updateAssets=function(buffer){mgLogger.debug(module,LOG_PREF+"updateAssets");for(var file in buffer.list){if(buffer.list.hasOwnProperty(file)===false){continue}var lang="all";if(buffer.list[file].lang){lang=buffer.list[file].lang}if(list[lang][file]&&list[lang][file].version){mgFileSystem.deleteFile("V"+list[lang][file].version+file)}list[lang][file]=buffer.list[file];list[lang][file].version=version}version++;save();saveList()};var getItems=function(){mgLogger.debug(module,LOG_PREF+"getItems");var allItems={},file,lang=MobiGeo.lang;for(file in list.all){if(list.all.hasOwnProperty(file)===false){continue}allItems[file]=list.all[file]}for(file in list[lang]){if(list[lang].hasOwnProperty(file)===false){continue}allItems[file]=list[lang][file]}return allItems};var getItem=function(file){var item,lang=MobiGeo.lang;if(lang&&list[lang]){item=list[lang][file];if(item){return item}}item=list.all[file];if(item){return item}return null};var updateVersion=function(version){mgLogger.debug(module,LOG_PREF+"updateVersion");listVersion[MobiGeo.lang]=version;save()};var getListVersion=function(){mgLogger.debug(module,LOG_PREF+"getListVersion");var lang=MobiGeo.lang;return listVersion[lang]?listVersion[lang]:listVersion.initial};return{get version(){return version},get listVersion(){return listVersion},init:init,getItem:getItem,getItems:getItems,debug:debug,getListVersion:getListVersion,updateVersion:updateVersion,updateAssets:updateAssets}};var mgBufferFactory=function(){"use strict";var LOG_PREF="[buffer] ",module=mgLogger.modules.Update;var list=null,currentDownload=null;var getBufferPath=function(){return mgData.getPath()+"buffer"};var init=function(){mgLogger.debug(module,LOG_PREF+"init");list={};mgFileSystem.deleteFolder(getBufferPath())};var downloadRemoteFile=function(file,file_datas,win,fail){mgLogger.debug(module,LOG_PREF+"downloadRemoteFile: "+file);currentDownload=mgFileSystem.downloadFile(file,getBufferPath()+file,function(entry){list[file]=file_datas;currentDownload=null;win()},function(error,status){mgLogger.error(module,LOG_PREF+"Download failed for "+file,error);currentDownload=null;fail(error,status)})};var commitBuffer=function(version,callback){mgLogger.debug(module,LOG_PREF+"commitBuffer");mgFileSystem.deleteFolder(mgData.getPath()+"V"+version,function(){mgFileSystem.renameFolder(getBufferPath(),"V"+version,callback)})};var clearList=function(){list={}};var abort=function(){mgLogger.debug(module,LOG_PREF+"abort");if(currentDownload){currentDownload.abort()}};return{get list(){return list},get currentDownload(){return currentDownload},init:init,downloadRemoteFile:downloadRemoteFile,commitBuffer:commitBuffer,abort:abort,clearList:clearList}};var mgData=function(){"use strict";var module=mgLogger.modules.Data,ignoredEntries=["version","schema"],TABLES={USERS:"users",PLACES:"places",POIS:"pois",POI_CATEGORIES:"poi_categories",ICONS:"icons",PATHS:"paths",GTW_PATHS:"gtw_paths",POLYGONS:"polygons",FAVORITE_POSITIONS:"favoritepositions"},COLLECTIONS_WITH_PLACES_ATTRIBUTE=[TABLES.POIS],POI_TYPES={poi:"Poi",favorite:"Favoriteposition",temp_spot:"TempSpot",userposition:"UserPosition"},OTHER_TYPES={icon:"Icon"},ORIGINAL_ID_SUPPORTED_TYPES=["string","number"],_data,dataName,dataPath,Attr,dataIsReady,mapsAreReady,zoneIdFloorIdRegEx,mapProvider,thumbnailProvider,dataProvider,routingGraphUrlProvider,ROUTING_GRAPH_PATH="files/maps/routing_graph/graph.json",iconToFetch=0,iconFetched=0,iconsProvider;var reset=function(){mgLogger.debug(module,"[reset]");dataName="";dataPath="";_data={};_data[TABLES.PATHS]={data:{},model:"Path",order:["id","tag","type","zone","floor","x","y","v1Id","v1cost","v2Id","v2cost","v3Id","v3cost","v4Id","v4cost"]};_data[TABLES.GTW_PATHS]={order:["id","tag","type","zone","floor","area","x","y","v1Id","v1cost","v2Id","v2cost","v3Id","v3cost","v4Id","v4cost","v5Id","v5cost","v6Id","v6cost","v7Id","v7cost","v8Id","v8cost","v9Id","v9cost","v10Id","v10cost"]};_data[TABLES.POLYGONS]={data:{},model:"Polygon",order:["tag","type","xMin","xMax","yMin","yMax","nbVertices","xSeries","ySeries","zone","floor"]};dataIsReady=false;mapsAreReady=false;Attr={}};reset();var setDataName=function(){dataName=Config.paths[_MobiGeo.key]||"default";if(mgJt.isEmpty(dataName)===true){mgLogger.error(module,"Invalid data key",_MobiGeo.key);return}dataPath=mgSupport.env.mobigeoPath+"data/"+dataName+"/"};PubSub.subscribe("mobigeo-domReady",setDataName);var updateDoneEventHandler=function(){mgLogger.info(module,"Data path is ",dataPath);mgMapConfig.load()};PubSub.subscribe("mobigeo-updateDone",updateDoneEventHandler);var initialize=function(){zoneIdFloorIdRegEx=new RegExp(mgMapConfig.get().Ui.zoneIdFloorIdFromTag);var getRoutingGraph=function(){if(mgFeatures.isRouteEnabled()!==true){mgLogger.info(module,"Skip routing graph request as routing feature is not enabled");afterLoad();return}var url;if(typeof routingGraphUrlProvider==="function"){url=routingGraphUrlProvider()}else{if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(ROUTING_GRAPH_PATH)}else{url=dataPath+ROUTING_GRAPH_PATH}}mgFetchHelper.execute({type:"get",dataType:"json",url:url,cache:false,success:function(db){mgLogger.info(module,"Routing graph loaded");_data=Object.assign(db,_data);afterLoad()},error:function(error){mgLogger.error(module,"Could not load routing graph",error);MobiGeo.Map.publish("error",_MobiGeoMap.ERRORS.LOADING_FAILED);afterLoad()}})};(function getData(){var isCryptoOn=mgNativeInterface.isNative===true&&Config.crypto===true;var next=function(db,next){mgLogger.info(module,"Data is loaded");if(isCryptoOn===true&&mgNativeInterface.isNative===true){try{db=mgCrypto.uncrypt(db)}catch(error){mgLogger.error(module,"Error while uncrypting data",error);MobiGeo.Map.publish("error",_MobiGeoMap.ERRORS.LOADING_FAILED);return}}_data=db;if(typeof next==="function"){next()}};if(typeof dataProvider==="function"){next(JSON.parse(JSON.stringify(dataProvider())),getRoutingGraph)}else{var url="files/maps/data/db.json";if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(url)}else{url=dataPath+url}mgFetchHelper.execute({type:"get",dataType:"json",url:url,cache:false,success:function(db){next(db,getRoutingGraph)},error:function(error){mgLogger.error(module,"Could not load data",error);MobiGeo.Map.publish("error",_MobiGeoMap.ERRORS.LOADING_FAILED)}})}})()};var afterLoad=function(){PubSub.publish("mobigeo-dataLoaded",dataName);buildIndexes(performWhenDataAndMapsAreReady)};var INDEX_TAG_TO_MEMBERS=function(){var _index;return{reset:function(){_index={}},get:function(tag){return _index[tag]},getAll:function(){return _index},removeTag:function(tag){delete _index[tag]},addMember:function(tag,memberId,memberType){if(typeof _index[tag]==="undefined"){_index[tag]=[]}_index[tag].push({id:memberId,type:memberType})},removeMember:function(tag,memberId,memberType){var members=this.get(tag);var memberIndex;for(var i=0;i<members.length&&typeof memberIndex!=="number";i++){if(members[i].id===memberId&&members[i].type===memberType){memberIndex=i}}if(typeof memberIndex!=="number"){mgLogger.error(module,"Could not locate member id "+memberId+" of type "+memberType+" in INDEX_TAG_TO_MEMBERS for tag "+tag,_index[tag])}else{members.splice(memberIndex,1);_index[tag]=members;mgLogger.debug(module,"Updated INDEX_TAG_TO_MEMBERS for tag "+tag+" ⇾ new value:",this.get(tag))}}}}();var buildIndexes=function(next){var logTimeKey="Building indexes";mgLogger.time(module,logTimeKey);for(var dataType in _data){if(_data.hasOwnProperty(dataType)!==true||ignoredEntries.indexOf(dataType)!==-1){continue}Attr[dataType]={};for(var i=0;i<_data[dataType].order.length;i++){var fieldName=_data[dataType].order[i];Attr[dataType][fieldName]=i}}if(mgData.isCollectionEmpty(mgData.TABLES.PLACES)){Attr.places={id:0,zone_id:1,floor:2,tag:3,x:4,y:5,label:6,lump:7};mgCreatorService.createPlacesFromMembers()}INDEX_TAG_TO_MEMBERS.reset();COLLECTIONS_WITH_PLACES_ATTRIBUTE.forEach(function(tableName){query(tableName).forEach(function(member){if(memberHasPlaces(member)===true){member.places.forEach(function(placeData){if(mgJt.notNullNorUndefined(placeData.place_id)){var place=getPlace(placeData.place_id);if(!place){mgLogger.error(module,"Failed to find place with id:"+placeData.place_id+" declared for member:",member);return}if(isSynopticTag(place.tag)){return}INDEX_TAG_TO_MEMBERS.addMember(place.tag,member.id,member.type)}})}})});mgLogger.timeEnd(module,logTimeKey);dataIsReady=true;mgLogger.info(module,"Data is ready");if(typeof next==="function"){next()}};var getPlaceFromTag=function(tag){var placesData=_data[TABLES.PLACES].data,placeIds=Object.keys(placesData),tagIndex=Attr[TABLES.PLACES].tag;for(var i=0;i<placeIds.length;i++){if(placesData[placeIds[i]][tagIndex]===tag){return getPlace(placeIds[i])}}};var getMemberFromIdAndType=function(poiId,type){if(mgJt.isEmpty(type)===true){mgLogger.error(module,"Missing 'type' argument");return null}if(isTypeValid(type)!==true){mgLogger.error(module,"Wrong 'type' argument: "+type);return null}if(type===POI_TYPES.favorite){return mgFavoritePositions.get(poiId)}var tableName=getTableNameFromType(type),collection=getCollection(tableName),poiIdIndex=Attr[tableName].id,ids=Object.keys(collection.data),itemId;for(var i=0;i<ids.length&&typeof itemId==="undefined";i++){if(collection.data[ids[i]][poiIdIndex]===poiId){itemId=ids[i]}}if(typeof itemId==="undefined"){mgLogger.error(module,"Could not find "+type+" matching id "+poiId)}else{return getById(tableName,itemId)}};function getMemberTitle(member){if(mgJt.isEmpty(member.company)===false){return member.company}else{return member.title}}var sort=function(members,fieldNames){if(Array.isArray(members)!==true){mgLogger.error(module,"members are not an array, got: ",members);return[]}if(Array.isArray(fieldNames)!==true){mgLogger.error(module,"fieldNames is not an array, got: ",fieldNames);return[]}var _members=members.filter(function(m){return m});return _members.sort(_sort_by.apply(null,fieldNames))};var sortMembers=function(members){return mgData.sort(members,[{name:"lump.top_brand",primer:function(value){if(!value){return}return value},reverse:false},{name:"title"}])};var _sort_by=function(){var default_cmp=function(a,b){if(typeof a==="string"&&typeof b==="string"){return[a,b].sort(naturalSort).indexOf(a)===0?-1:1}if(a===b){return 0}if(a===true){return-1}if(b===true){return 1}return a<b?-1:1};var getCmpFunc=function(primer,reverse){var dfc=default_cmp,cmp=default_cmp;if(primer){cmp=function(a,b){return dfc(primer(a),primer(b))}}if(reverse){return function(a,b){return-1*cmp(a,b)}}return cmp};var sort_by=function(){var fields=[],n_fields=arguments.length,field,name,reverse,cmp;for(var i=0;i<n_fields;i++){field=arguments[i];if(typeof field==="string"){name=field;cmp=default_cmp}else{name=field.name;cmp=getCmpFunc(field.primer,field.reverse)}fields.push({name:name,cmp:cmp})}return function(A,B){var a,b,name,result;for(var i=0;i<n_fields;i++){result=0;field=fields[i];name=field.name;result=field.cmp(mgJt.getValueFromStringAttribute(A,name),mgJt.getValueFromStringAttribute(B,name));if(result!==0){break}}return result}};return sort_by}();var performWhenDataAndMapsAreReady=function(){if(_MobiGeo.hasValidKey()===true&&dataIsReady===true&&mapsAreReady===true){if(mgSupport.isDegradeMode===false){mgPositionManager.showMembersOnMap()}else{_MobiGeoMap.handleSdkInitialized()}}};PubSub.subscribe("mobigeo-mapsDisplayed",function(){mapsAreReady=true;performWhenDataAndMapsAreReady()});var getById=function(table,id){if(mgJt.isEmpty(table)===true||mgJt.isEmpty(_data[table])===true){mgLogger.error(module,"Invalid table",table);return null}var item=_data[table].data[id];if(mgJt.isEmpty(item)===true){return null}return factory(item,table)};var getPlace=function(placeId){return getById(TABLES.PLACES,placeId)};var getChildren=function(catTableName,criteria){var matchedCats=query(catTableName,criteria),category=Array.isArray(matchedCats)&&matchedCats.length>0?matchedCats[0]:null;if(category){var childTableName=getChildrenTableName(catTableName);if(category.lump&&Array.isArray(category.lump[childTableName])){return category.lump[childTableName].map(function(childId){return getById(childTableName,childId)})}}return null};var getChildrenTableName=function(catTableName){return catTableName.slice(0,catTableName.length-11)+"s"};var getCategoryTableName=function(childTableName){return childTableName.slice(0,childTableName.length-1)+"_categories"};var query=function(table,criteria){if(mgJt.isEmpty(table)===true||typeof _data[table]==="undefined"){mgLogger.debug(module,"Invalid table",table);return[]}var hasCriteria=typeof criteria==="object"&&criteria!==null;var dataToFilter;if(hasCriteria&&mgJt.isEmpty(criteria.id)===false){dataToFilter={};dataToFilter[criteria.id]=_data[table].data[criteria.id]}else{dataToFilter=_data[table].data}var ck=hasCriteria?Object.keys(criteria):[];var results=[];for(var id in dataToFilter){if(_data[table].data.hasOwnProperty(id)===false){continue}var item=factory(dataToFilter[id],table);switch(table){case TABLES.PATHS:case TABLES.GTW_PATHS:if(mgJt.isEmpty(criteria)===false){if(mgJt.isEmpty(criteria.type)===false){var q=new RegExp(criteria.type);if(item.type.match(q)===null){continue}}if(mgJt.isEmpty(criteria.excludeId)===false&&criteria.excludeId===item.id){continue}if(mgJt.isEmpty(criteria.zone)===false&&criteria.zone!==item.zone){continue}if(mgJt.isEmpty(criteria.floor)===false&&criteria.floor!==item.floor){continue}if(mgJt.isEmpty(criteria.area)===false&&criteria.area!==item.area){continue}if(mgJt.isEmpty(criteria.xMin)===false&&item.x<criteria.xMin){continue}if(mgJt.isEmpty(criteria.xMax)===false&&item.x>criteria.xMax){continue}if(mgJt.isEmpty(criteria.yMin)===false&&item.y<criteria.yMin){continue}if(mgJt.isEmpty(criteria.yMax)===false&&item.y>criteria.yMax){continue}if(mgJt.isEmpty(criteria.tag)===false&&criteria.tag!==item.tag){continue}}results.push(item);break;default:var match=true;for(var i=0;i<ck.length&&match;i++){var prop=ck[i];match=match&&item[prop]===criteria[prop]}if(match){results.push(item)}}}mgLogger.debug(module,"=> query table",table," - criteria:"+(criteria?JSON.stringify(criteria):"none")," - results",results.length>10?"count:"+results.length:results);return results};var filterOne=function(tableName,criteria){if(isTableNameValid(tableName)!==true){mgLogger.error(module,"(filterOne) invalid table name: "+tableName);return}var data=_data[tableName].data,ids=Object.keys(data);for(var i=0;i<ids.length;i++){var member=factory(data[ids],tableName);if(mgJt.matchCriterias(member,criteria)){return member}}};var getMembersFromTag=function(tag){if(!tag){return null}var members=INDEX_TAG_TO_MEMBERS.get(tag);if(Array.isArray(members)){return members.map(function(memberData){return getById(getTableNameFromType(memberData.type),memberData.id)})}};var add=function(tableName,id,item){mgLogger.debug(module,"=> add to table",tableName,"id:"+id,item);if(isTableNameValid(tableName)!==true){mgLogger.error(module,"Invalid table",tableName);return false}if(!_data[tableName]){_data[tableName]={}}if(!_data[tableName].data){_data[tableName].data={}}_data[tableName].data[id]=_objectToArray(tableName,item)};var checkPoiAlreadyExists=function(poiId){if(_data[TABLES.POIS]&&_data[TABLES.POIS].data[poiId]){return _data[TABLES.POIS].data[poiId]}return false};var checkIconAlreadyExists=function(iconId){if(_data[TABLES.ICONS]&&_data[TABLES.ICONS].data[iconId]){return _data[TABLES.ICONS].data[iconId]}return false};var _objectToArray=function(table,object){if(!object){return}if(Array.isArray(object)){return object}var fields=Object.keys(Attr[table]);var array=new Array(fields.length);Object.keys(object).forEach(function(field){array[fields.indexOf(field)]=object[field]});return array};var update=function(table,id,data){mgLogger.debug(module,"=> update",table,id,data);if(mgJt.isEmpty(table)===true||mgJt.isEmpty(_data[table])===true){mgLogger.error(module,"Invalid table",table);return false}if(mgJt.isEmpty(_data[table].data[id])===true){mgLogger.error(module,"Could not set/update because there is no data to update");return false}for(var attr in data){if(data.hasOwnProperty(attr)===false){continue}var fieldIndex=_data[table].order.indexOf(attr);if(fieldIndex<0){mgLogger.error(module,"Could not update this field",attr,"into this table",table);continue}_data[table].data[id][fieldIndex]=data[attr]}return true};function removeItemOnce(arr,value){var index=arr.indexOf(value);if(index>-1){arr.splice(index,1)}return arr}var updateCategory=function(table,data,id,action){mgLogger.debug(module,"=> update",table,id,data);if(mgJt.isEmpty(table)===true||mgJt.isEmpty(_data[table])===true){mgLogger.error(module,"Invalid table",table);return false}if(mgJt.isEmpty(_data[table].data[data.id])===true){add(mgData.TABLES.POI_CATEGORIES,data.id,data);return true}var fieldIndex=_data[table].order.indexOf("lump");if(fieldIndex<0){mgLogger.error(module,"Could not update category pois into this table",table)}if(action==="remove"){removeItemOnce(_data[table].data[data.id][fieldIndex].pois,id)}else{_data[table].data[data.id][fieldIndex].pois.push(id)}return true};var updateMemberPlaces=function(memberId,memberType,oldPlaceData,newPlaceData){var tableName=getTableNameFromType(memberType),member=getById(tableName,memberId),newPlace,memberPlaces=member.places,wasLocalized=mgJt.notNullNorUndefined(oldPlaceData.id),toUnlocalized=mgEditMode.hasOnlyZoneFloorData(newPlaceData),placeFound=false,doesMatch;if(toUnlocalized===false){newPlace=getPlace(newPlaceData.id)}if(wasLocalized===false){if(toUnlocalized===true){doesMatch=function(placeData){return placeData.zone===oldPlaceData.zone&&String(placeData.floor)===String(oldPlaceData.floor)}}else{doesMatch=function(placeData){return placeData.zone===newPlace.zone&&String(placeData.floor)===String(newPlace.floor)}}}else{doesMatch=function(placeData){return placeData.place_id===oldPlaceData.id}}for(var i=0;i<memberPlaces.length&&!placeFound;i++){if(doesMatch(memberPlaces[i])){if(toUnlocalized){delete memberPlaces[i].place_id;memberPlaces[i].zone=newPlaceData.zone;memberPlaces[i].floor=newPlaceData.floor}else{memberPlaces[i].place_id=newPlaceData.id}placeFound=true;if(toUnlocalized===false){INDEX_TAG_TO_MEMBERS.addMember(newPlace.tag,memberId,memberType)}if(wasLocalized){removeFromTagToMembersIndex(memberId,memberType,getPlace(oldPlaceData.id))}}}if(!placeFound){mgLogger.error(module,"Could not update place_id (old:"+JSON.stringify(oldPlaceData)+" ➔ new:"+JSON.stringify(newPlaceData)+")"+" for member id "+memberId+" of type "+memberType);return}update(tableName,memberId,{places:memberPlaces})};var removeFromTagToMembersIndex=function(memberId,memberType,place){var members=INDEX_TAG_TO_MEMBERS.get(place.tag);if(members.length===1){INDEX_TAG_TO_MEMBERS.removeTag(place.tag);deleteFromTable(mgData.TABLES.PLACES,place.id);mgLogger.debug(module,"Removed place id: "+place.id)}else{INDEX_TAG_TO_MEMBERS.removeMember(place.tag,memberId,memberType)}};var deleteFromTable=function(tableName,id){if(checkTableExists(tableName)!==true){mgLogger.error(module,"Invalid table name: "+tableName);return}delete _data[tableName].data[id]};var emptyTable=function(tableName,id){if(checkTableExists(tableName)!==true){mgLogger.error(module,"Invalid table name: "+tableName);return}_data[tableName].data=[]};var checkTableExists=function(tableName){var found=false;Object.keys(TABLES).forEach(function(key){if(TABLES[key]===tableName){found=true}});return found};var higherCaseType=function(type){return type.substr(0,1).toUpperCase()+type.substr(1)};var getTableNameFromType=function(type){if(typeof type!=="string"){mgLogger.error(module,"getTableNameFromType: Invalid type",type);return""}return type.toLowerCase()+"s"};var getMemberTypeFromTableName=function(table){if(typeof table!=="string"){mgLogger.error(module,"getMemberTypeFromTableName: Invalid table",table);return""}return table.slice(0,table.length-1)};var getPoiTypeFromTableName=function(table){if(typeof table!=="string"){mgLogger.error(module,"getMemberTypeFromTableName: Invalid table",table);return""}return table.substr(0,1).toUpperCase()+table.slice(1,table.length-1)};var isTableNameValid=function(tableName){var valid=false,keys=Object.keys(mgData.TABLES);for(var i=0;i<keys.length;i++){if(mgData.TABLES[keys[i]]===tableName){return true}}return false};var formatOutputMembers=function(members){var output=[];for(var i=0;i<members.length;i++){var obj={_id:members[i].id,id:members[i].id,collection:members[i].collection,places:members[i].places};obj.type="Poi";obj.title=members[i].title;obj.description=members[i].description;if(members[i].icon_id){var icon=mgData.getById(mgData.TABLES.ICONS,members[i].icon_id);obj.icon=icon&&icon.icon||{}}if(members[i].lump&&members[i].lump.cats&&members[i].lump.cats.length){obj.categories=getCategoriesOriginalId(members[i].lump.cats||[],"Poi")}output.push(obj)}return output};var performAfterAllIconsFetched=function(){if(iconToFetch===iconFetched){PubSub.publish("allIcons-loaded");mgPinManager.updatePins(false,true);iconToFetch=0;iconFetched=0}};var getIconUrl=function(object,iconEl){var iconGrey,match=mgDt.extensionParser(object.icon||{});if(match&&match.length>2){iconGrey=match[1]+"_grey"+match[2]}else{iconGrey=object.icon}if(typeof iconsProvider==="function"){object.icon.path=iconsProvider(object.icon.path,dataName);object.iconGrey.path=iconsProvider(iconGrey.path,dataName)}else if(mgUpdateMain.isUpdateFeatureEnabled()){object.icon.path=mgUpdateMain.getUrl(object.icon.path);object.iconGrey.path=mgUpdateMain.getUrl(iconGrey.path)}else if(object.icon&&object.icon.isSecure){iconToFetch++;if(object.icon.isSvg){mgFetchHelper.execute({type:"get",url:object.icon.path,responseType:"text",headers:object.icon.headers,cache:false,success:function(result){if(iconEl){mgDt.applyStyle(iconEl,{backgroundImage:"url(data:image/svg+xml,"+encodeURI(result)+")"})}object.icon.icon=result;iconFetched++;performAfterAllIconsFetched()},error:function(error){iconFetched++;performAfterAllIconsFetched();object.icon.icon="";console.log("error",error)}})}else if(!object.icon.isSvg){mgFetchHelper.execute({type:"get",responseType:"arraybuffer",url:object.icon.path,headers:object.icon.headers,cache:false,success:function(result){var blob=new Blob([result]);var url=URL.createObjectURL(blob);if(iconEl){mgDt.applyStyle(iconEl,{backgroundImage:"url("+url+")"})}object.icon.icon=url;iconFetched++;performAfterAllIconsFetched()},error:function(error){object.icon.icon="";iconFetched++;performAfterAllIconsFetched();console.log("error",error)}})}}else if(object.icon){object.icon.icon=object.icon.path.indexOf("://")===-1?dataPath+object.icon.path:object.icon.path;object.icon.title=object.icon.legend;object.icon.type="icon"}return object.icon};var getCategoriesOriginalId=function(cats,type){var originalIds=[],catTableName=getCategoriesTableNameFromType(type);cats.forEach(function(catId){var category=getById(catTableName,catId);if(category){originalIds.push(category.original_id)}});return originalIds};var applyFactoryToCollection=function(tableName){var collection=getCollection(tableName);if(!collection||!collection.data){mgLogger.error(module,"There is no data for table "+tableName);return{}}return applyFactoryToIds(Object.keys(collection.data),tableName)};var applyFactoryToIds=function(ids,tableName){var collection=getCollection(tableName);if(!collection||!collection.data){mgLogger.error(module,"There is no data for table "+tableName);return{}}var pois={};(ids||[]).forEach(function(poiId){pois[poiId]=factory(collection.data[poiId],tableName)});return pois};var factory=function(item,table){var object={};if(Attr[table]){Object.keys(Attr[table]).forEach(function(prop){object[prop]=item[Attr[table][prop]]})}if(table===TABLES.PLACES){var matches=zoneIdFloorIdRegEx.exec(object.tag);if(!matches){matches=mgSynopticView.applyRegExp(object.tag)}if(matches){object.zone=parseInt(matches[1],10);object.floor=matches[2]}else{mgLogger.error(module,"Tag unmatched: "+object.tag);object.zone=object.zone_id}}if(typeof object.type==="string"){object.type=object.type.toLowerCase()}else if(typeof object.type==="undefined"){var tab=table;if(Array.isArray(table)){tab=table[0]}object.type=getMemberTypeFromTableName(tab)}return object};var getCollection=function(dbName){if(mgJt.isEmpty(_data[dbName])===true){return null}return _data[dbName]};var getMapPath=function(map_id){if(typeof mapProvider==="function"){return mapProvider(map_id+".svg")}else{var url="files/maps/svg/"+map_id+".svg";if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(url)}else{url=dataPath+url}return url}};var getSynoPath=function(map_id){if(typeof mapProvider==="function"){return mapProvider(map_id+".svg")}else{var url="assets/syno/"+map_id+".svg";if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(url)}else{url=dataPath+url}return url}};var getThumbnailPath=function(){if(typeof thumbnailProvider==="function"){return thumbnailProvider(mgSupport.env.os!=="iOS"&&mgSupport.env.os!=="Android"?3:mgSupport.env.device_pixel_ratio)}else{var pixelRatio=mgSupport.env.os!=="iOS"&&mgSupport.env.os!=="Android"?3:mgSupport.env.device_pixel_ratio;var url="files/maps/misc/x"+pixelRatio+"/thumbnail_0_0.jpg";if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(url)}else{url=dataPath+url}return url}};var isTypeValid=function(type){if(typeof type!=="string"){return false}var isValid=false;Object.keys(POI_TYPES).forEach(function(exposedType){if(POI_TYPES[exposedType]===type){isValid=true}});return isValid};var isMemberTypeIcon=function(type){return type===getMemberTypeFromTableName(TABLES.ICONS)};var isSynopticTag=function(tag){return typeof tag==="string"&&tag.length>4&&tag.substr(0,4)==="Syno"};var getCategoriesTableNameFromType=function(type){if(isTypeValid(type)!==true){mgLogger.error(module,"Invalid type: ",type);return}return type.toLowerCase()+"_categories"};var isCollectionEmpty=function(tableName){if(isTableNameValid(tableName)!==true){mgLogger.error(module,"(isCollectionEmpty) invalid table name: "+tableName);return}var collection=mgData.getCollection(tableName);return!collection||!collection.data||Object.keys(collection.data).length===0};var memberHasPlaces=function(member){return member&&Array.isArray(member.places)&&member.places.length>0};var filterOutSilentPOIMembers=function(array){if(Array.isArray(array)!==true||array.length===0){return[]}if(typeof mgMapConfig.get().silentPOIs!=="undefined"&&Array.isArray(mgMapConfig.get().silentPOIs)===true&&mgMapConfig.get().silentPOIs.length>0){return array.filter(function(member){if(member){if(mgMapConfig.get().silentPOIs.indexOf(getTableNameFromType(member.type))===-1){return true}}return false})}return array};PubSub.subscribe("mobigeo-mapUiReady",initialize);return{get TABLES(){return TABLES},get COLLECTIONS_WITH_PLACES_ATTRIBUTE(){return COLLECTIONS_WITH_PLACES_ATTRIBUTE},get POI_TYPES(){return POI_TYPES},get OTHER_TYPES(){return OTHER_TYPES},get ORIGINAL_ID_SUPPORTED_TYPES(){return ORIGINAL_ID_SUPPORTED_TYPES},get Attr(){return Attr},getName:function(){return dataName},getPath:function(){return dataPath},getMapPath:getMapPath,getSynoPath:getSynoPath,setMapProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"Map provider argument is not a function",provider);return}mapProvider=provider},getThumbnailPath:getThumbnailPath,setThumbnailProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"Thumbnail provider argument is not a function",provider);return}thumbnailProvider=provider},setDataProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"Data provider argument is not a function",provider);return}dataProvider=provider},setRoutingGraphUrlProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"Routing graph url provider argument is not a function",provider);return}routingGraphUrlProvider=provider},setIconsProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"icons provider is not a function",provider);return}iconsProvider=provider},buildIndexes:buildIndexes,isTypeValid:isTypeValid,isMemberTypeIcon:isMemberTypeIcon,reset:reset,sort:sort,sortMembers:sortMembers,query:query,getById:getById,getPlace:getPlace,add:add,checkPoiAlreadyExists:checkPoiAlreadyExists,update:update,checkIconAlreadyExists:checkIconAlreadyExists,updateCategory:updateCategory,updateMemberPlaces:updateMemberPlaces,deleteFromTable:deleteFromTable,emptyTable:emptyTable,getCollection:getCollection,getChildren:getChildren,getIconUrl:getIconUrl,isTableNameValid:isTableNameValid,isSynopticTag:isSynopticTag,isCollectionEmpty:isCollectionEmpty,getTableNameFromType:getTableNameFromType,getMemberTypeFromTableName:getMemberTypeFromTableName,getPoiTypeFromTableName:getPoiTypeFromTableName,getCategoriesTableNameFromType:getCategoriesTableNameFromType,formatOutputMembers:formatOutputMembers,applyFactoryToCollection:applyFactoryToCollection,applyFactoryToIds:applyFactoryToIds,higherCaseType:higherCaseType,getMemberFromIdAndType:getMemberFromIdAndType,getPlaceFromTag:getPlaceFromTag,getMembersFromTag:getMembersFromTag,getMemberTitle:getMemberTitle,memberHasPlaces:memberHasPlaces,filterOutSilentPOIMembers:filterOutSilentPOIMembers}}();var mgCreatorService=function(){"use strict";var module=mgLogger.modules.Data;var getTag=function(zone,floor,x,y){return"Z_"+zone+"_"+floor+"_I:"+x+":"+y};var createPlace=function(placeData,persist,rebuildIndexes){var tag=getTag(placeData.zone,placeData.floor,placeData.x,placeData.y),place={id:placeData.id||tag,tag:tag,x:placeData.x,y:placeData.y,zone_id:placeData.zone,floor:placeData.floor};if(persist){mgData.add(mgData.TABLES.PLACES,place.id,place)}if(rebuildIndexes){mgData.buildIndexes()}return place};var createPlacesFromMembers=function(){var stepName="Creating places from data...";mgLogger.time(module,stepName);var placeIdsPerTag={};mgData.COLLECTIONS_WITH_PLACES_ATTRIBUTE.forEach(function(tableName){mgData.query(tableName).forEach(function(item){if(mgData.memberHasPlaces(item)!==true){return}var updatedPlaces;item.places.forEach(function(placeData){if(typeof placeData.place_id!=="undefined"){mgLogger.error(module,"Member has already a place_id information, this is unexpected.",item)}if(typeof placeData.zone==="undefined"||placeData.zone===null||typeof placeData.floor==="undefined"||placeData.floor===null||typeof placeData.x==="undefined"||placeData.x===null||typeof placeData.y==="undefined"||placeData.y===null){return}var tag=getTag(placeData.zone,placeData.floor,placeData.x,placeData.y);if(!placeIdsPerTag[tag]){var place=createPlace({zone:placeData.zone,floor:placeData.floor,x:placeData.x,y:placeData.y},true);placeIdsPerTag[tag]=place.id}if(!updatedPlaces){updatedPlaces=[]}updatedPlaces.push({place_id:placeIdsPerTag[tag]})});if(Array.isArray(updatedPlaces)){mgData.update(tableName,item.id,{places:updatedPlaces})}})});mgLogger.timeEnd(module,stepName)};return{getTag:getTag,createPlace:createPlace,createPlacesFromMembers:createPlacesFromMembers}}();var mgUpdateMain=function(){"use strict";var module=mgLogger.modules.Update,updateProcessIsRunning=false,updateTimeKey="update",status={NOTHING_TO_UPDATE:"nothing_to_update",DENIED:"denied",CANCELLED:"cancelled",ERROR:"error",TIMEOUT:"timeout",SUCCESS:"success"},urlCache={},URL_CACHE_VALIDITY=5e3;var DOWNLOAD_FILE_TIMEOUT=5e3;var reset=function(){updateProcessIsRunning=false;urlCache={};if(mgUpdater.inProgress){mgUpdater.cancel()}handleProcessEnd()};var getStatusLabel=function(_status){var label="";switch(_status){case status.ERROR:label=mgI18N.t("error","update");break;case status.TIMEOUT:label=mgI18N.t("timeout","update");break;case status.DENIED:case status.CANCELLED:label=mgI18N.t("skipped","update");break;case status.SUCCESS:label=mgI18N.t("applied","update");break}return label};var getServerPath=function(relativePath,qsParameters){var url,queryString,qsIndex=MobiGeo.updateServer.indexOf("?");if(qsIndex!==-1){url=MobiGeo.updateServer.slice(0,qsIndex);queryString=MobiGeo.updateServer.slice(qsIndex)}else{url=MobiGeo.updateServer;queryString=""}if(url.slice(url.length-1)!=="/"){url+="/"}url+=mgData.getName();if(typeof relativePath==="string"&&relativePath.length>0){if(relativePath.charAt(0)!=="/"){url+="/"}url+=relativePath}if(typeof qsParameters==="object"){Object.keys(qsParameters).forEach(function(qsKey,index){var qsSeparator=queryString===""&&index===0?"?":"&";queryString+=qsSeparator+qsKey+"="+qsParameters[qsKey]})}return url+queryString};var getLocalRootPath=function(){return window.cordova.file.dataDirectory};var addToUrlCache=function(url,value){urlCache[url]=value;_purgeCache()};var _purgeCache=_.debounce(function(){urlCache={};mgLogger.debug(module,"Purged url cache",urlCache)},URL_CACHE_VALIDITY);var isUpdateFeatureEnabled=function(){return mgJt.isCordovaDefined()&&mgFeatures.isAssetsUpdateEnabled()===true&&typeof MobiGeo.updateServer==="string"&&MobiGeo.updateServer.trim().length>0};var checkForUpdate=function(){if(isUpdateFeatureEnabled()){updateProcessIsRunning=true;var next=function(){console.time(updateTimeKey);mgFileSystem.initialize(mgUpdater.startUpdate)};if(mgAndroidPermissions.areNeeded!==true||mgAndroidPermissions.areGranted===true){next()}else{mgAndroidPermissions.addGrantCallback(next);mgAndroidPermissions.addDenyCallback(function(){publishUpdateDone(status.DENIED)});mgNativeInterface.checkPermissions()}}else{publishUpdateDone(status.NOTHING_TO_UPDATE)}};var handleProcessEnd=function(){if(updateProcessIsRunning===true){updateProcessIsRunning=false;console.timeEnd(updateTimeKey)}};var publishUpdateDone=function(status){handleProcessEnd();PubSub.publish("mobigeo-updateDone",{status:status})};var getUrl=function(url,useHttp,absolute){if(!url){return""}if(useHttp===true){if(url[0]!=="/"){url="/"+url}return getServerPath()+url}else{if(urlCache[url]){return urlCache[url]}var value=url[0]==="/"?url.substr(1):url;if(mgJt.isCordovaDefined()){value=mgUpdater.getUrl(value)}if(absolute===true&&value[0]!=="/"&&value.indexOf("://")===-1){var loc=document.location.pathname;value=loc.substr(0,loc.lastIndexOf("/")+1)+value}value=mgJt.convertFileSrc(value);mgLogger.debug(module,"getUrl: "+url+" => "+value);addToUrlCache(url,value);return value}};var updateProjectVersion=function(projectVersion){if(projectVersion){window.localStorage.setItem(mgUpdater.getLocalStoragePrefix()+"projectVersion",projectVersion)}else{mgLogger.error(module,"Missing project version value")}};PubSub.subscribe("mobigeo-domReady",checkForUpdate);return{get status(){return status},get DOWNLOAD_FILE_TIMEOUT(){return DOWNLOAD_FILE_TIMEOUT},get projectVersion(){return mgData.getName()?window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"projectVersion"):null},reset:reset,getUrl:getUrl,isUpdateFeatureEnabled:isUpdateFeatureEnabled,getLocalRootPath:getLocalRootPath,getServerPath:getServerPath,publishUpdateDone:publishUpdateDone,getStatusLabel:getStatusLabel,updateProjectVersion:updateProjectVersion}}();var mgFileSystem=function(){"use strict";var LOG_PREF="[fs] ",module=mgLogger.modules.Update;var fs=null,update=true;var getErrorMessage=function(e){if(!e){return""}if(typeof e.code==="undefined"){return e}var errorLabel;Object.keys(FileError).forEach(function(feKey){if(feKey.indexOf("_ERR")!==-1&&FileError[feKey]===e.code){errorLabel=feKey}});return errorLabel?errorLabel:"Unknown Error, code:"+e.code};var initialize=function(initAppFunction){mgLogger.debug(module,LOG_PREF+"initialize");if(typeof Config.dataVersion==="undefined"){mgLogger.error(module,LOG_PREF+"Config.dataVersion is not defined!")}else{mgLogger.debug(module,LOG_PREF+"Config.dataVersion: "+Config.dataVersion)}var createDirectory=function(path,success,fail){mgLogger.debug(module,LOG_PREF+"createDirectory: "+path);var dirs=path.split("/").reverse(),root=fs.root;var createDir=function(dir){mgLogger.debug(module,LOG_PREF+"createDir: "+dir);var successCB=function(entry){mgLogger.debug(module,LOG_PREF+"Successfully created directory",entry);root=entry;if(dirs.length>0){createDir(dirs.pop())}else{mgLogger.debug(module,LOG_PREF+"Successfully created all directories!");if(typeof success==="function"){success()}}};var failCB=function(error){mgLogger.error(module,LOG_PREF+"Failed to create dir :",dir,error);if(typeof fail==="function"){fail(error)}};root.getDirectory(dir,{create:true,exclusive:false},successCB,failCB)};createDir(dirs.pop())};var getFileSystem=function(win,fail){mgLogger.debug(module,LOG_PREF+"getFileSystem");if(typeof window.resolveLocalFileSystemURL!=="function"){mgLogger.error(module,LOG_PREF+"The project is missing `resolveLocalFileSystemURL` normally provided by `cordova-plugin-file`");fail();return}var localPath=mgUpdateMain.getLocalRootPath();window.resolveLocalFileSystemURL(localPath,win,fail)};getFileSystem(function fileSystemWin(fileSystem){mgLogger.debug(module,LOG_PREF+"fileSystemWin");fs=fileSystem;mgUpdater.init(initAppFunction)},function fileSystemFail(error){mgLogger.error(module,LOG_PREF+"requestFileSystem failure",getErrorMessage(error),error);update=false;initAppFunction()})};var getPath=function(item){if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"Filesystem is not ready. (getPath)");return""}mgLogger.debug(module,LOG_PREF+"getPath");var path;if(typeof fs.toURL==="function"){path=fs.toURL()}else{mgLogger.error(module,LOG_PREF+"getPath: could not get root path");path=""}var returnedValue=path+(path.slice(path.length-1)==="/"?"":"/")+item;mgLogger.debug(module,"getPath for "+item+" => "+returnedValue);return returnedValue};var downloadFile=function(file,rename,win,fail){mgLogger.debug(module,LOG_PREF+"downloadFile: "+file);if(!rename){rename=file}var fileTransfer=new window.FileTransfer,time=(new Date).getTime(),uri=encodeURI(mgUpdateMain.getServerPath(file,{t:time})),filePath=getPath(rename);var timeoutId=window.setTimeout(function(){mgLogger.info(module,"download timeout reached");fileTransfer.abort()},mgUpdateMain.DOWNLOAD_FILE_TIMEOUT);fileTransfer.download(uri,filePath,function(entry){mgLogger.debug(module,LOG_PREF+"fileTransfer.download success",entry);window.clearTimeout(timeoutId);if(typeof win==="function"){win(entry)}},function(error){mgLogger.debug(module,LOG_PREF+"fileTransfer.download error",error);window.clearTimeout(timeoutId);if(typeof fail!=="function"){return}if(error.code===window.FileTransferError.FILE_NOT_FOUND_ERR||error.code===window.FileTransferError.INVALID_URL_ERR){fail("serverError",error.http_status)}else if(error.code===window.FileTransferError.CONNECTION_ERR){fail("connectionError",error.http_status)}else if(error.code===window.FileTransferError.ABORT_ERR){fail("timeout")}else{fail("unknownError",error.http_status)}});return fileTransfer};var deleteFile=function(file){mgLogger.debug(module,LOG_PREF+"deleteFile");if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"(deleteFile) Filesystem object is not ready");return}var getFileWin=function(fileEntry){mgLogger.debug(module,LOG_PREF+"getFileWin",fileEntry);var removeWin=function(){mgLogger.debug(module,LOG_PREF+"removeWin file:",fileEntry)};var removeFail=function(error){mgLogger.error(module,LOG_PREF+"removeFail",getErrorMessage(error),error)};fileEntry.remove(removeWin,removeFail)};var getFileFail=function(error){if(error.code===FileError.NOT_FOUND_ERR){return}mgLogger.error(module,LOG_PREF+"getFileFail",getErrorMessage(error),error)};fs.getFile(file,{create:false},getFileWin,getFileFail)};var deleteFolder=function(folder,callback){mgLogger.debug(module,LOG_PREF+"deleteFolder");if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"(deleteFolder) Filesystem object is not ready");return}var getDirectoryWin=function(directoryEntry){mgLogger.debug(module,LOG_PREF+"getDirectoryWin");var deletedWin=function(){mgLogger.debug(module,LOG_PREF+"deletedWin directory:",directoryEntry);if(typeof callback==="function"){callback(true)}};var deletedFail=function(error){mgLogger.error(module,LOG_PREF+"deletedFail",getErrorMessage(error),error);if(typeof callback==="function"){callback(false)}};directoryEntry.removeRecursively(deletedWin,deletedFail)};var getDirectoryFail=function(error){mgLogger.debug(module,LOG_PREF+"getDirectoryFail");if(error.code===FileError.NOT_FOUND_ERR){if(typeof callback==="function"){callback(true)}return}mgLogger.error(module,LOG_PREF+"getDirectory failure",getErrorMessage(error),error);if(typeof callback==="function"){callback(false)}};fs.getDirectory(folder,{create:false},getDirectoryWin,getDirectoryFail)};var renameFolder=function(folder,newName,callback){mgLogger.debug(module,LOG_PREF+"renameFolder");if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"Filesystem is not ready. (renameFolder)");return}var getDirectoryWin=function(directoryEntry){mgLogger.debug(module,LOG_PREF+"getDirectoryWin");var getParentWin=function(parentEntry){mgLogger.debug(module,LOG_PREF+"getParentWin",parentEntry);var moveToWin=function(){mgLogger.debug(module,LOG_PREF+"moveToWin",parentEntry);if(typeof callback==="function"){callback(true)}};var moveToFail=function(error){mgLogger.error(module,LOG_PREF+"moveToFail",getErrorMessage(error),error);if(typeof callback==="function"){callback(false)}};directoryEntry.moveTo(parentEntry,newName,moveToWin,moveToFail)};var getParentFail=function(error){mgLogger.error(module,LOG_PREF+"getParentFail",getErrorMessage(error),error);if(typeof callback==="function"){callback(false)}};directoryEntry.getParent(getParentWin,getParentFail)};var getDirectoryFail=function(error){mgLogger.error(module,LOG_PREF+"getDirectoryFail",getErrorMessage(error),error);if(typeof callback==="function"){callback(false)}};fs.getDirectory(folder,{create:false},getDirectoryWin,getDirectoryFail)};var getDirectory=function(directory,okCb,koCb){mgLogger.debug(module,LOG_PREF+"getDirectory");if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"Filesystem is not ready. (getDirectory)");return}fs.getDirectory(directory,null,okCb,koCb)};var getFileContent=function(file,win,fail){mgLogger.debug(module,LOG_PREF+"getFileContent");fs.getFile(file,{create:false},function(fileEntry){mgLogger.debug(module,LOG_PREF+"getFile success",fileEntry);fileEntry.file(function(file){mgLogger.debug(module,LOG_PREF+"file success");var reader=new FileReader;reader.onloadend=function(event){if(typeof win==="function"){win(event.target.result)}};reader.readAsText(file)},function(error){mgLogger.debug(module,LOG_PREF+"file failure",error);if(typeof fail==="function"){fail()}})},function(error){mgLogger.debug(module,LOG_PREF+"getFile failure",error);if(typeof fail==="function"){fail()}})};var setFileContent=function(file,content,win,fail){mgLogger.debug(module,LOG_PREF+"setFileContent");if(typeof fs==="undefined"){mgLogger.error(module,LOG_PREF+"Filesystem is not ready. (setFileContent)");return}var _getfileWin=function(fileEntry){mgLogger.debug(module,LOG_PREF+"_getfileWin",fileEntry);fileEntry.createWriter(function(writer){mgLogger.debug(module,LOG_PREF+"createWriter success");writer.onwriteend=function(evt){mgLogger.debug(module,LOG_PREF+"writer.truncate.onwriteend");writer.onwriteend=function(){mgLogger.debug(module,LOG_PREF+file+" file created successfully.");if(typeof win==="function"){win()}};writer.onerror=function(error){mgLogger.error(module,LOG_PREF+"writer.write.onerror",getErrorMessage(error),error);if(typeof fail==="function"){fail()}};writer.write(content)};writer.onerror=function(error){mgLogger.error(module,LOG_PREF+"writer.truncate.onerror",getErrorMessage(error),error);if(typeof fail==="function"){fail()}};writer.truncate(0)},function(error){mgLogger.error(module,LOG_PREF+"createWriter failure",getErrorMessage(error),error);if(typeof fail==="function"){fail()}})};var _getfileFail=function(error){mgLogger.error(module,LOG_PREF+"getFile failure",getErrorMessage(error),error);if(typeof fail==="function"){fail()}};fs.getFile(file,{create:true,exclusive:false},_getfileWin,_getfileFail)};var _reloadTimeout=null,_timeout=1;var clearAutomaticReload=function(){mgLogger.debug(module,LOG_PREF+"clearAutomaticReload");window.localStorage.removeItem(mgUpdater.getLocalStoragePrefix()+"_force_reload");if(_reloadTimeout!==null){window.clearTimeout(_reloadTimeout)}};var _setAutomaticReload=function(){mgLogger.debug(module,LOG_PREF+"_setAutomaticReload");var forceReload;try{forceReload=window.localStorage.getItem(mgUpdater.getLocalStoragePrefix()+"_force_reload");forceReload=forceReload===null?0:parseInt(forceReload,10)}catch(e){mgLogger.error(module,LOG_PREF+"Unable to set automatic reload");return}if(forceReload<3){_reloadTimeout=window.setTimeout(function(){mgLogger.debug(module,LOG_PREF+"_reloadTimeout");forceReload++;window.localStorage.setItem(mgUpdater.getLocalStoragePrefix()+"_force_reload",forceReload);window.location.reload()},_timeout*1e3)}else{clearAutomaticReload();var message="An error occured, please restart the application.";window.alert(message);if(typeof navigator.app==="object"&&typeof navigator.app.exitApp==="function"){navigator.app.exitApp()}else{mgLogger.debug(module,LOG_PREF+"No method for exiting app...")}}};return{initialize:initialize,deleteFile:deleteFile,deleteFolder:deleteFolder,downloadFile:downloadFile,getDirectory:getDirectory,getFileContent:getFileContent,getPath:getPath,renameFolder:renameFolder,setFileContent:setFileContent}}();var mgUpdater=function(){var LOG_PREF="[Updater] ",module=mgLogger.modules.Update;var assets=null,buffer=null,inProgress=false,_isInitialized=false,_forcedCanceled=false,_filesToDownload,_filesRemoteDatas,readyToCommit=false,_noSurprisesTimer=null,NEW_FILES_URL="manifest/phonegap?pixel_ratio=1",TIMEOUT=20*1e3,NO_SURPRISES_TIMEOUT=1e3*10*60;var modalDisplayed={},progressModal;var getUrl=function(url){var returnedValue;var _url=url[0]==="/"?url:"/"+url;var indexParams=_url.lastIndexOf("?");if(indexParams!==-1){_url=_url.substr(0,indexParams)}if(!assets||_isInitialized===false){returnedValue=null}else{var asset=assets.getItem(_url);if(!asset||!asset.version){returnedValue=null}else{return mgFileSystem.getPath(mgData.getPath()+"V"+asset.version+_url)}}if(!returnedValue){returnedValue=url}var mobigeoDataPath=mgData.getPath();returnedValue=mobigeoDataPath+(mobigeoDataPath.slice(mobigeoDataPath.length-1)==="/"?"":"/")+returnedValue;return returnedValue};var init=function(callback){mgLogger.debug(module,LOG_PREF+"init");if(mgJt.isCordovaDefined()===false){mgLogger.error(module,LOG_PREF+"A Cordova context is needed in order to use mgUpdater")}inProgress=false;_isInitialized=false;modalDisplayed={};progressModal=null;buffer=mgBufferFactory();assets=mgAssetsFactory();buffer.init();assets.init(function(){mgLogger.debug(module,LOG_PREF+"initialized");_isInitialized=true;if(callback){callback()}})};var cancel=function(){_forcedCanceled=true;downloadRemoteEnd()};var userInteraction=function(when,what){mgLogger.debug(module,LOG_PREF+"userInteraction "+when);var okButton,cancelButton,closeButton;if(modalDisplayed[when]){return}if(when==="remoteCheckUpdate"){}else if(when==="showCancelUpdate"){if(modalDisplayed.showCancelUpdate){return}modalDisplayed.showCancelUpdate=true;cancelButton=mgModalButton.cancel;cancelButton.cb=function(){mgLogger.info(module,LOG_PREF,"Data update canceled by user");mgModal.hide({next:function(){modalDisplayed.showCancelUpdate=false;cancel();mgUpdateMain.publishUpdateDone(mgUpdateMain.status.CANCELLED)}})};progressModal=mgModal.showMessage({hideCrossClose:true,title:mgI18N.t("modalTitle","update"),content:mgI18N.t("update_running","update"),buttons:[cancelButton]})}else if(when==="updateProgress"){if(progressModal&&isNaN(what)===false){mgModal.updateContent(progressModal,mgI18N.t("update_running","update")+" "+what+"%")}}else if(when==="clearProgress"){if(progressModal){mgModal.hide({el:progressModal})}}else if(when==="askForUpdate"){if(modalDisplayed.askForUpdate){return}var size_txt;if(what.size<1024){size_txt=what.size+mgI18N.t("bytes","size")}else if(what.size<1024*1024){size_txt=Math.ceil(what.size/1024*100)/100+mgI18N.t("kilobytes","size")}else{size_txt=Math.ceil(what.size/1024/1024*100)/100+mgI18N.t("megabytes","size")}modalDisplayed.askForUpdate=true;okButton=mgModalButton.ok;okButton.cb=function(){mgLogger.debug(module,LOG_PREF,"Data update granted by user");mgModal.hide({next:function(){modalDisplayed.askForUpdate=false;downloadRemoteInit(what);userInteraction("showCancelUpdate");downloadRemoteFiles()}})};cancelButton=mgModalButton.cancel;cancelButton.cb=function(){mgLogger.info(module,LOG_PREF,"Update denied by user");mgModal.hide({next:function(){modalDisplayed.askForUpdate=false;inProgress=false;mgUpdateMain.publishUpdateDone(mgUpdateMain.status.DENIED)}})};mgModal.showMessage({hideCrossClose:true,title:mgI18N.t("modalTitle","update"),content:mgI18N.t("update_detected","update")+" ("+size_txt+")",buttons:[okButton,cancelButton]})}else if(when==="updateComplete"){}else if(when==="timeout"){if(modalDisplayed.timeout){return}modalDisplayed.timeout=true;closeButton=mgModalButton.close;closeButton.cb=function(){mgModal.hide();modalDisplayed.timeout=false};mgModal.showMessage({title:mgI18N.t("modalTitle","update"),content:mgI18N.t("timeout","update"),buttons:[closeButton]})}};var beginUpdate=function(datas){mgLogger.debug(module,LOG_PREF+"beginUpdate");userInteraction("askForUpdate",datas)};var buildRessourcesInfos=function(){mgLogger.debug(module,LOG_PREF+"buildRessourcesInfos");var allAssets=assets.getItems();for(var file in buffer.list){if(buffer.list.hasOwnProperty(file)===false){continue}allAssets[file]=buffer.list[file]}return allAssets};var startUpdate=function(){mgLogger.debug(module,LOG_PREF+"startUpdate");if(_isInitialized===false){mgLogger.debug(module,LOG_PREF+"startUpdate: please initialize mgUpdater first.");return}if(inProgress===true){mgLogger.debug(module,LOG_PREF+"startUpdate: already in progress.");return}inProgress=true;window.clearTimeout(_noSurprisesTimer);_noSurprisesTimer=window.setTimeout(function(){inProgress=false},NO_SURPRISES_TIMEOUT);var ressources=buildRessourcesInfos();remoteCheckUpdate(ressources,beginUpdate)};function remoteCheckUpdate(localRessources,callback){mgLogger.debug(module,LOG_PREF+"remoteCheckUpdate");var getRemoteAssetsList=function(){mgFetchHelper.execute({cache:false,dataType:"json",timeout:mgUpdateMain.DOWNLOAD_FILE_TIMEOUT,type:"get",url:mgUpdateMain.getServerPath("/assets_global.json"),success:function(remoteAssets){mgLogger.info(module,"Got remote assets_global.json");compareAssets(remoteAssets)},error:function(error){mgLogger.error(module,"Could not load remote assets_global.json",error);MobiGeo.publish("error",_MobiGeo.ERRORS.UPDATE_CHECK_FAILED);mgUpdateMain.publishUpdateDone(mgUpdateMain.status[error&&error.statusText==="timeout"?"TIMEOUT":"ERROR"])}})};var compareAssets=function(newAssets){var assetsToDownload=[];Object.keys(newAssets).forEach(function(key){if(key==="version"||key==="projectVersion"){return}Object.keys(newAssets[key]).forEach(function(assetPath){var localAsset=assets.getItem(assetPath),remoteAsset=newAssets[key][assetPath];if(!localAsset||localAsset.md5!==remoteAsset.md5){remoteAsset.path=assetPath;assetsToDownload.push(remoteAsset)}})});if(assetsToDownload.length>0){mgLogger.debug(module,"Update available for these assets: ",assetsToDownload);handleDiff(assetsToDownload,newAssets.projectVersion)}else{mgLogger.info(module,"No update available");mgUpdateMain.publishUpdateDone(mgUpdateMain.status.NOTHING_TO_UPDATE);if(newAssets.projectVersion!==mgUpdateMain.projectVersion){mgUpdateMain.updateProjectVersion(newAssets.projectVersion)}}};var handleDiff=function(assets,newProjectVersion){var diffResult={data:false,size:assets.reduce(function(amount,asset){return amount+asset.size},0),nb_files:assets.length,files:{},projectVersion:newProjectVersion};assets.forEach(function(asset){diffResult.files[asset.path]={size:asset.size,md5:asset.md5}});beginUpdate(diffResult)};getRemoteAssetsList()}function downloadRemoteInit(datas){mgLogger.debug(module,LOG_PREF+"downloadRemoteInit");readyToCommit=false;_forcedCanceled=false;_filesToDownload=[];_filesRemoteDatas=datas;if(datas.nb_files!==0){for(var file in datas.files){if(datas.files.hasOwnProperty(file)===false){continue}_filesToDownload.push(file)}}}function downloadRemoteEnd(){mgLogger.debug(module,LOG_PREF+"downloadRemoteEnd");userInteraction("clearProgress");_filesToDownload=[];_filesRemoteDatas={};inProgress=false}function downloadRemoteFiles(){mgLogger.debug(module,LOG_PREF+"downloadRemoteFiles");if(inProgress===false){mgLogger.debug(module,LOG_PREF+"User canceled already, so just quit.");return}if(_filesToDownload.length===0){mgLogger.debug(module,LOG_PREF+"All files have been downloaded !!");userInteraction("clearProgress");readyToCommit=true;commitNewVersion();return}var fileName=_filesToDownload[0];var fileDatas=_filesRemoteDatas.files[fileName];var win=function(){_filesToDownload.shift();var percent=Math.floor((_filesRemoteDatas.nb_files-_filesToDownload.length)/_filesRemoteDatas.nb_files*100);userInteraction("updateProgress",percent);downloadRemoteFiles()};var fail=function(errorType,errorCode){mgLogger.debug(module,LOG_PREF+"Error while downloading file: "+errorType+" => "+errorCode);downloadRemoteEnd();mgUpdateMain.publishUpdateDone(mgUpdateMain.status[errorType==="timeout"?"TIMEOUT":"ERROR"])};buffer.downloadRemoteFile(fileName,fileDatas,win,fail)}function commitNewVersion(){mgLogger.debug(module,LOG_PREF+"commitNewVersion");if(readyToCommit!==true){mgLogger.debug(module,LOG_PREF+"Bad context");downloadRemoteEnd();return}var hasDataToUpdate=false;var hasFilesToUpdate=false;var checkIsAllUpdated=function(){mgLogger.debug(module,LOG_PREF+"checkIsAllUpdated");hasDataToUpdate=_filesRemoteDatas.data!==false;hasFilesToUpdate=_filesRemoteDatas.nb_files>0;var isFinished=!hasDataToUpdate&&!hasFilesToUpdate;mgLogger.debug(module,LOG_PREF+"hasDataToUpdate: "+hasDataToUpdate+" / hasFilesToUpdate: "+hasFilesToUpdate);if(isFinished===true){inProgress=false;mgLogger.debug(module,LOG_PREF+"Update is applied!");userInteraction("updateComplete");mgUpdateMain.updateProjectVersion(_filesRemoteDatas.projectVersion);mgUpdateMain.publishUpdateDone(mgUpdateMain.status.SUCCESS)}};checkIsAllUpdated();if(hasFilesToUpdate===true){mgLogger.debug(module,LOG_PREF+"updating files!");buffer.commitBuffer(assets.version,function(success){mgLogger.debug(module,LOG_PREF+"commitBuffer done!",success);if(!success){downloadRemoteEnd()}else{assets.updateAssets(buffer);_filesRemoteDatas.nb_files=0;checkIsAllUpdated()}buffer.clearList()})}assets.updateVersion(_filesRemoteDatas.version)}var getLocalStoragePrefix=function(){return mgData.getName()+"-"};var publicInterface={getUrl:getUrl,init:init,cancel:cancel,get inProgress(){return inProgress},startUpdate:startUpdate,getLocalStoragePrefix:getLocalStoragePrefix};if(window.MOBIGEODEV===true){publicInterface.userInteraction=userInteraction}return publicInterface}();var mgFeatures=function(){"use strict";var features={LOCATION:"location",GEOGROUP:"location.geogroup",GEOPUSH:"location.geopush",ROUTE:"map.route",UPDATE:"assets.update",BACKEND:"backend",REALTIME:"realtime",AROUNDME:"poi.aroundme",POI_STATES:"poi.states",FAVORITE:"favorites"};var isEnabled=function(feature){return Config.features.indexOf(feature)>=0};var isLocationEnabled=function(){return isEnabled(features.LOCATION)};var isGeoGroupEnabled=function(){return isEnabled(features.GEOGROUP)};var isGeoPushEnabled=function(){return isEnabled(features.GEOPUSH)};var isRouteEnabled=function(){return isEnabled(features.ROUTE)};var isAssetsUpdateEnabled=function(){return isEnabled(features.UPDATE)};var isAroundMeEnabled=function(){return isEnabled(features.AROUNDME)};var isBackendEnabled=function(){return isEnabled(features.BACKEND)};var isRealTimeEnabled=function(){return isEnabled(features.REALTIME)};var isPoiStatesEnabled=function(){return isEnabled(features.POI_STATES)};var isFavoritesEnabled=function(){return isEnabled(features.FAVORITE)};return{isEnabled:isEnabled,isLocationEnabled:isLocationEnabled,isGeoGroupEnabled:isGeoGroupEnabled,isGeoPushEnabled:isGeoPushEnabled,isRouteEnabled:isRouteEnabled,isAssetsUpdateEnabled:isAssetsUpdateEnabled,isAroundMeEnabled:isAroundMeEnabled,isBackendEnabled:isBackendEnabled,isRealTimeEnabled:isRealTimeEnabled,isPoiStatesEnabled:isPoiStatesEnabled,isFavoritesEnabled:isFavoritesEnabled}}();var mgSupport=function(){"use strict";var module=mgLogger.modules.Support,isPointerSupported,isMsPointerSupported,touch,svg,interaction,isDegradeMode,useCss3d,_env;var initialize=function(){useCss3d=true;var ua=navigator.userAgent;_env={iPhone:/iPhone|iPod/i.test(ua)===true,iPad:/iPad/i.test(ua)===true,isAndroid:/Android/i.test(ua)===true,isCrossWalk:ua.match(/crosswalk/i)!==null,isIE:ua.indexOf("MSIE ")!==-1||ua.indexOf("Trident/")!==-1,isEdge:/Edge\/(\d{2})/.test(ua),mobigeoPath:getMobiGeoPath()};_env.os=_env.isAndroid===true?"Android":_env.iPhone===true||_env.iPad===true?"iOS":"";_env.version=getOsVersion();_env=Object.assign(_env,getChromeConfig());_env.isSafari=_env.isChrome===false&&/Safari/i.test(ua)===true;isPointerSupported=Modernizr.pointerevents;isMsPointerSupported=typeof window.navigator.msPointerEnabled!=="undefined";touch=Modernizr.touchevents||isMsPointerSupported===true||isPointerSupported===true;if(isPointerSupported===true){interaction={start:"pointerdown",move:"pointermove",end:"pointerup"}}else if(isMsPointerSupported===true){interaction={start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}}else{interaction={start:"touchstart",move:"touchmove",end:"touchend"}}interaction.click=isPointerSupported===true?"pointerdown":Modernizr.touchevents?"touchstart":"click";svg=true;var ratio=window.devicePixelRatio;ratio=Math.round(ratio);ratio=Math.min(ratio,3);ratio=Math.max(ratio,1);_env.device_pixel_ratio=ratio;isDegradeMode=false};var getMobiGeoPath=function(){var defaultPath="mobigeo/";if(mgJt.isCordovaDefined()){return defaultPath}var scriptName=mgJt.isCordovaDefined()?"mobigeo-cordova":"mobigeo-web";var scriptEl=document.querySelector("script[src*="+scriptName+"]");if(mgJt.isEmpty(scriptEl)===false){var srcValue=scriptEl.getAttribute("src"),strIndex=srcValue.indexOf(defaultPath);if(strIndex!==-1){return srcValue.substr(0,strIndex+defaultPath.length)}}return defaultPath};var getChromeConfig=function(){var matched=/chrome\/(\d*)/i.exec(window.navigator.userAgent);if(mgJt.isEmpty(matched)===false&&matched.length>0){return{isChrome:true,chromeVersion:parseInt(matched[1],10)}}return{isChrome:false}};var getOsVersion=function(){var match="matchVersion";switch(_env.os.toLowerCase()){case"android":match=window.navigator.userAgent.match("ndroid ([^;]*)");break;case"ios":match=window.navigator.userAgent.replace(/_/g,".").match(" OS ([^ ]*)");break;default:return}if(match===null||typeof match.length==="undefined"){return}if(match.length!==2){return}var versionSplit=match[1].split(".");return parseFloat(versionSplit[0]+(versionSplit.length>1?"."+versionSplit[1]:""))};PubSub.subscribe("mobigeo-domReady",function(){var getLabel=function(enabled,version){return enabled+(enabled&&version?", version: "+version:"")};mgLogger.info(module,"[ isAndroid: "+getLabel(_env.isAndroid,_env.version)+" ]"+"[ isChrome: "+getLabel(_env.isChrome,_env.chromeVersion)+" ]"+"[ isCrosswalk: "+_env.isCrossWalk+" ]"+"[ iPhone: "+getLabel(_env.iPhone,_env.version)+" ]"+"[ degrade mode: "+isDegradeMode+" ]")});initialize();return{useCss3d:useCss3d,svg:svg,touch:touch,interaction:interaction,isPointerSupported:isPointerSupported,get isDegradeMode(){return isDegradeMode},get env(){return _env}}}();var mgI18N=function(){"use strict";var defaultLang="en";var module=mgLogger.modules.I18n,i18n={data:{fr:{brands:"Marques",services:"Services",restaurants:"Restaurants",monuments:"Monuments",exhibitors:"Exposants",aircrafts:"Aéronefs",events:"Programme",newproducts:"Produits",animations:"Animations",happenings:"Animations",gateways:"Points d'accès"},en:{brands:"Brands",services:"Services",restaurants:"Restaurants",monuments:"Monuments",exhibitors:"Exhibitors",aircrafts:"Aircrafts",events:"Events",newproducts:"Products",animations:"Experiences",happenings:"Animations",gateways:"Gateways"},zh:{brands:"品牌",services:"服务",restaurants:"餐厅",monuments:"纪念碑",exhibitors:"Exhibitors",aircrafts:"Aircrafts",events:"Events",newproducts:"Products",animations:"Experiences",happenings:"动画制作",gateways:"Gateways"}},itinerary:{fr:{_name_:"Itinéraire",meters:"m.",goThere:"Y aller",goToThisFloor:"Y aller",unlocalizedPoi:"£1<br>est situé au<br>£2",nextStep:"Etape suivante",previousStep:"Etape précédente",routingSteps:"Etapes de l'itinéraire",clear:"Effacer l'itinéraire",reload:"Mettre à jour l'itinéraire",defineAsPosition:"Définir comme position",compute:"Calculer un itinéraire",beingComputed:"Calcul en cours...",noItinerary:"Aucun itinéraire trouvé",chooseStartingPoint:"Choisissez le point de départ",chooseDestination:"Choisissez votre destination",chooseCurrentPosition:"Choisissez votre position actuelle",startingPoint:"Point de départ",destination:"Destination",yourPosition:"Votre position",noStaringPointChoosen:"Point de départ non défini",noDestinationChoosen:"Destination non définie",drawItinerary:"Itinéraire",startPointChoosen:"Point de départ choisi",destinationChoosen:"Destination choisie",start:"Départ",arrival:"Arrivée",errorStart:"le point de départ est invalide.",errorDest:"le point d'arrivée est invalide.",alreadyAtDestination:"Vous êtes déjà à destination",alreadyOnDestinationFloor:"Votre destination est à cet étage",recordedPosition:"Position enregistrée",laststep:"Suivez l'itinéraire jusqu'à votre destination",laststepfloortarget:"Votre destination est à cet étage",elevatorstep:"Allez à l'ascenseur et prenez-le jusqu'au niveau £1",stairsstep:"Allez à l'escalier et prenez-le jusqu'au niveau £1",escalatorstep:"Allez à l'escalator et prenez-le jusqu'au niveau £1",dooroutstep:"Sortez du £1",doorinstep:"Entrez dans le £1",doortostep:"Allez jusqu'à la porte d'accès.",entranceoutstep:"Sortez du £1",entranceinstep:"Entrez dans le £1",zoneentranceoutstep:"Quittez le £1",zoneentranceinstep:"Allez au £1",flagstarlabel:"Vous êtes ici"},en:{_name_:"Itinerary",meters:"meters",goThere:"Go there",goToThisFloor:"Go to there",unlocalizedPoi:"£1<br>is located on<br>£2",nextStep:"Next step",previousStep:"Previous step",routingSteps:"Itinerary steps",clear:"Clear itinerary",reload:"Reload itinerary",defineAsPosition:"Define as position",compute:"Compute an itinerary",beingComputed:"Computing...",noItinerary:"No itinerary found",chooseStartingPoint:"Choose starting point",chooseDestination:"Choose your destination",chooseCurrentPosition:"Choose your current position",startingPoint:"Starting point",destination:"Destination",yourPosition:"Your position",noStaringPointChoosen:"Starting point not yet chosen",noDestinationChoosen:"Destination not yet chosen",drawItinerary:"Itinerary",startPointChoosen:"Starting point chosen",destinationChoosen:"Destination chosen",start:"Start",arrival:"Destination",errorStart:"invalid starting point.",errorDest:"invalid destination point",alreadyAtDestination:"You are at destination",alreadyOnDestinationFloor:"Your destination is on this floor",recordedPosition:"Recorded position",laststep:"Follow the path until destination",laststepfloortarget:"Your destination is on this floor",elevatorstep:"Go to the elevator and go to level £1",stairsstep:"Go to the stairs and go to level £1",escalatorstep:"Go to the escalator and go to level £1",dooroutstep:"Go out of £1",doorinstep:"Enter £1",doortostep:"Go to the access door.",entranceoutstep:"Go out of £1",entranceinstep:"Enter £1",zoneentranceoutstep:"Go out of £1",zoneentranceinstep:"Go to £1",flagstarlabel:"You are here"},zh:{_name_:"Itinerary",meters:"meters",goThere:"Go there",goToThisFloor:"Go there",unlocalizedPoi:"£1<br>is located on<br>£2",nextStep:"Next step",previousStep:"Previous step",clear:"Clear itinerary",reload:"Reload itinerary",defineAsPosition:"Define as position",compute:"Compute an itinerary",beingComputed:"Computing...",noItinerary:"No itinerary found",chooseStartingPoint:"Choose starting point",chooseDestination:"Choose your destination",chooseCurrentPosition:"Choose your current position",startingPoint:"Starting point",destination:"Destination",yourPosition:"Your position",noStaringPointChoosen:"Starting point not yet chosen",noDestinationChoosen:"Destination not yet chosen",drawItinerary:"Itinerary",startPointChoosen:"Starting point chosen",destinationChoosen:"Destination chosen",start:"Start",arrival:"Destination",errorStart:"invalid starting point.",errorDest:"invalid destination point",alreadyAtDestination:"You are at destination",alreadyOnDestinationFloor:"Your destination is on this floor",recordedPosition:"Recorded position",laststep:"Follow the path until destination",laststepfloortarget:"Your destination is on this floor",elevatorstep:"Go to the elevator and go to level £1",stairsstep:"Go to the stairs and go to level £1",escalatorstep:"Go to the escalator and go to level £1",dooroutstep:"Go out of £1",doortostep:"Go to the access door.",entranceoutstep:"Go out of £1",entranceinstep:"Enter £1",zoneentranceoutstep:"Go out of £1",zoneentranceinstep:"Go to £1",flagstarlabel:"你在这里"}},map:{fr:{_name_:"Plan",Plan:"Plan",Floor:"Étage",Stand:"Stand",Hall:"Hall",Booth:"Stand",zoomLess:"Zoom moins",zoomMore:"Zoom plus",locatedOnThisFloor:" est localisé à cet étage",Position:"Position",confirmZoom2Zone:"Zoomer vers le £1 ?",displayFloor:"Afficher l'étage"},en:{_name_:"Map",Plan:"Map",Floor:"Level",Stand:"Stand",Hall:"Hall",Booth:"Booth",zoomLess:"Zoom out",zoomMore:"Zoom in",locatedOnThisFloor:" is located on this floor",Position:"Position",confirmZoom2Zone:"Zoom to the £1?",displayFloor:"Display floor"},zh:{_name_:"地图",Plan:"地图",Floor:"楼层",Stand:"摊子",Hall:"大厅",Booth:"摊子",zoomLess:"Zoom out",zoomMore:"Zoom in",locatedOnThisFloor:" 定位至此楼层",Position:"位置",confirmZoom2Zone:"放大至 £1?",displayFloor:"Display floor"},de:{confirmZoom2Zone:"auf das £1-Gebäude zoomen?"}},legend:{fr:{_name_:"Légende",poiStyles:"Etats des salles de réunion"},en:{_name_:"Legend",poiStyles:"Meeting room states"},zh:{_name_:"传说"},de:{_name_:"Legende"}},edit:{fr:{panelTitle:"POI de cet étage non localisés",dragCancel:"Déposez ici pour annuler l'action en cours"},en:{panelTitle:"POI on this floor without a location",dragCancel:"Drop here to cancel current drag operation"},zh:{panelTitle:"POI on this floor without a location",dragCancel:"Drop here to cancel current drag operation"}},permissions:{fr:{zoneRestricted:"Vous ne pouvez éditer le bâtiment £1.",floorRestricted:"Vous ne pouvez éditer l'£1."},en:{zoneRestricted:"You cannot edit building £1.",floorRestricted:"You cannot edit £1."}},size:{fr:{bytes:" octets",kilobytes:" ko",megabytes:" mo"},en:{bytes:" bytes",kilobytes:" KB",megabytes:" MB"},zh:{bytes:" 字节",kilobytes:" 千字节",megabytes:" 兆字节"}},update:{fr:{modalTitle:"Mise à jour",update_detected:"Mettre à jour les données ?",update_running:"Mise à jour en cours...",cancel_update:"Annuler la mise à jour",update_done:"Mise à jour terminée",new_version_detected:"Nouvelle version détectée",error:"Mise à jour annulée",timeout:"Mise à jour annulée : réseau insuffisant",skipped:"Mise à jour ignorée",applied:"Mise à jour effectuée"},en:{modalTitle:"Update",update_detected:"Proceed to data update?",update_running:"Updating...",cancel_update:"Cancel update",update_done:"Update completed",new_version_detected:"New version detected",error:"Update cancelled",timeout:"Update cancelled: network is too slow",skipped:"Update sequence skipped",applied:"Update applied"},zh:{modalTitle:"更新",update_detected:"更新数据？",update_running:"数据更新正在进行中...",cancel_update:"取消更新",update_done:"数据更新完成",new_version_detected:"检测到新版本",error:"数据更新被取消",timeout:"数据更新取消：数据连接太慢",skipped:"数据更新被跳过",applied:"数据更新已应用"}},misc:{fr:{loadingLookingForUpdate:"Recherche de mises à jour...",loadingText:"Chargement du plan...",loadingData:"Chargement des données...",clear:"Effacer",clearAndResetZoom:"Réinitialiser",resetZoom:"Dézoomer",open:"Ouvrir",close:"Fermer",ok:"Ok",confirm:"Confirmer",start:"Démarrer",cancel:"Annuler",":":" : ",noData:"pas d'information",network_error_desc:"Erreur réseau",retry_now:"Essayez à nouveau",in:" à ",at:" à ",all:"Tous",andXMore:"et £1 de plus",search:"Recherche de POI",emptyList:"La liste est vide",missingValue:"Valeur manquante",tip:"Astuce"},en:{loadingLookingForUpdate:"Looking for updates...",loadingText:"Loading map...",loadingData:"Loading data...",clear:"Clear",clearAndResetZoom:"Reset",resetZoom:"Zoom-out",open:"Open",close:"Close",ok:"Ok",confirm:"Confirm",start:"Start",cancel:"Cancel",":":": ",noData:"no data",network_error_desc:"Connection error",retry_now:"Retry now",in:" in ",at:" at ",all:"All",andXMore:"and £1 more",search:"POI search",emptyList:"The list is empty",missingValue:"Value is missing",tip:"Tip"},zh:{loadingLookingForUpdate:"搜索更新……",loadingText:"正在载入地图...",loadingData:"正在载入资料...",clear:"Clear",clearAndResetZoom:"重置",resetZoom:"Zoom-out",open:"Open",close:"关闭",ok:"确认",confirm:"确认",start:"启动",cancel:"取消",":":": ",noData:"没有数据",network_error_desc:"网络错误",retry_now:"重新尝试",in:" 至 ",at:" 至 ",all:"所有",andXMore:"还有£1个",search:"搜索",emptyList:"The list is empty",missingValue:"Value is missing",tip:"Tip"},de:{clear:"Löschen",search:"Suche",loadingData:"Daten laden..."}},mapPosition:{fr:{_name_:"Position",not_compatible:"Votre mobile n'est pas compatible avec la géolocalisation.",not_on_site:"Vous n'êtes pas localisé sur le site.",no_bluetooth:"Pour vous localiser, veuillez activer le Bluetooth.",no_wifi:"Pour vous localiser, veuillez vous connecter au réseau Wi-Fi {0}",no_gps:"Pas de GPS disponible",gps_available:"GPS disponible",unknown_error:"Erreur inconnue",calibration:"Interférences. Veuillez calibrer votre boussole en effectuant des 8 avec votre mobile",waiting:"En attente de localisation...",l12n_forbidden:"Pour vous localiser, vous devez autoriser les services de localisation dans les paramètres de votre mobile",user_action:"OK",activate:"Désirez-vous que cette application vous géolocalise ?",activate_ios:"Désirez-vous que cette application vous géolocalise ? Si oui, le Bluetooth doit être activé.",on_wifi_off:"L’application va allumer le WiFi pour vous localiser",out_of_range:"Out of range",positionIsStopped:"La géolocalisation est arrêtée",positionInProgress:"Géolocalisation en cours...",positionNotLocated:"Vous n'êtes pas localisé",positionOutOfService:"La géolocalisation n'est pas en service",positionOutside:"Vous n'êtes pas localisé sur le site",positionErrorNetwork:"Connexion réseau insuffisante pour mettre à jour les données de géolocalisation.",positionErrorWifi:"Vous devez activer le Wi-Fi pour pouvoir vous localiser",positionErrorBLE:"Vous devez activer le Bluetooth pour pouvoir vous localiser",positionErrorCoreLocation:"Pour pouvoir vous localiser, vous devez autoriser l'application à le faire dans les paramètres de votre smartphone",myCurrentPosition:"Ma position actuelle",you:"Vous",compassCalibration:"Pour recalibrer la boussole, veuillez décrire des 8 avec votre téléphone.",trackingModeEnabled:"Mode suivi activé.",trackingModeDisabled:"Mode suivi désactivé.",trackingModeUncentered:"Appuyez sur ce bouton si vous souhaitez recentrer la carte",clearPosition:"Supprimer cette position"},en:{_name_:"Position",not_compatible:"Your mobile does not support indoor geolocation.",not_on_site:"You are not located on the site.",no_bluetooth:"You must activate Bluetooth to locate yourself.",no_wifi:"You must connect to Wi-Fi network {0} to locate yourself indoor",no_gps:"No GPS available",gps_available:"GPS is available",unknown_error:"Unknown error",calibration:"Compass Interference. Move away from sources of interference or re-calibrate by moving your phone in a figure of 8 movement",waiting:"Calculating your current location...",l12n_forbidden:"To locate yourself, you must authorize location services in your mobile's settings",user_action:"OK",activate:"Do you authorize this app to locate you inside the store?",activate_ios:"Do you authorize this app to locate you inside the store? If so, Bluetooth must be activated.",on_wifi_off:"The application will switch on Wi-Fi to locate you.",out_of_range:"Out of range",positionIsStopped:"Localisation is stopped",positionInProgress:"Your location is being determined...",positionNotLocated:"You are not located",positionOutOfService:"Geolocation is out of service",positionOutside:"You are not located on the site",positionErrorNetwork:"Data connexion is too weak to update geolocation service data.",positionErrorWifi:"You must activate Wi-Fi to enable geolocation on your device",positionErrorBLE:"You must activate Bluetooth to enable geolocation on your device",positionErrorCoreLocation:"To locate yourself, you must authorize the app to use your location in the settings  of your device",myCurrentPosition:"My current position",you:"You",compassCalibration:"In order to calibrate the compass, please rotate the device in a figure 8 motion.",trackingModeEnabled:"Tracking mode on.",trackingModeDisabled:"Tracking mode off.",trackingModeUncentered:"Push this button if you wish to center the map",clearPosition:"Remove this position"},zh:{_name_:"位置",not_compatible:"您的手机不支持卫星定位。",not_on_site:"您无法在此位置上定位。",no_bluetooth:"要确定您的位置，请激活蓝牙。",no_wifi:"You must connect to Wi-Fi network {0} to locate yourself indoor",no_gps:"无可用GPS",gps_available:"GPS可用",unknown_error:"未知错误",calibration:"请以手机绕8字，重新校正电子罗盘。",waiting:"正在进行定位……",l12n_forbidden:"要确定您的位置，必须在您的手机设置中允许使用定位服务",user_action:"确认",activate:"您希望此应用程序确定您的位置？",activate_ios:"您希望此应用程序确定您的位置？如果是，请激活蓝牙。",on_wifi_off:"The application will switch on Wi-Fi to locate you.",out_of_range:"无法接通",positionIsStopped:"卫星定位已停止",positionInProgress:"正在进行定位……",positionNotLocated:"无法确定您的位置",positionOutOfService:"卫星定位无法使用",positionOutside:"您无法在此位置上定位。",positionErrorNetwork:"网络连接不给力，无法更新卫星定位数据。",positionErrorWifi:"You must activate Wi-Fi to enable geolocation on your device",positionErrorBLE:"要确定您的位置，请激活蓝牙。",positionErrorCoreLocation:"要确定您的位置，必须在您的手机设置中允许使用定位服务",myCurrentPosition:"我的当前位置",you:"您",compassCalibration:"请以手机绕8字，重新校正电子罗盘。",trackingModeEnabled:"追踪模式已激活。",trackingModeDisabled:"追踪模式已取消。",trackingModeUncentered:"如果您希望重新回到地图中央，请按下此按钮",clearPosition:"Remove this position"}},aroundMe:{fr:{_name_:"Autour de moi",nbResults:"Résultats (max) : ",type:"Type : ",category:"Catégorie : ",allCategories:"☆ Toutes categories",state:"Etat : "},en:{_name_:"Around me",nbResults:"Max results: ",type:"Type: ",category:"Category: ",allCategories:"☆ All categories",state:"State:"},zh:{_name_:"我的附近",nbResults:"Max results: ",type:"Type: ",category:"Category: ",allCategories:"☆ All categories",state:"State:"}},favorites:{fr:{defaultTitle:"Favori",onboardMobile:"Par un appui long sur le plan vous pouvez partager ou enregistrer des positions.",onboardDesktop:"Par un clic droit sur le plan vous pouvez partager ou enregistrer des positions.",setLabel:"Définir le nom du favori",setLabelOfSharedFavorite:"Avant de la partager, donnez un nom à cette position. <br/> Vous la retrouverez dans vos favoris",invalidData:"Les données du favori sont incomplètes ou invalides.",alreadyExist:"Un favori est déjà présent à cet emplacement",share:"Partager cette position",setFavorite:"Ajouter cette position aux favoris"},en:{defaultTitle:"Favorite",onboardMobile:"With a long press you can share/record positions.",onboardDesktop:"With a right-click you can share/record positions.",setLabel:"Set the name of the favorite",setLabelOfSharedFavorite:"Type in a name for this shared location. <br/> It will be stored in your favorites",invalidData:"Favorite data is incomplete or invalid.",alreadyExist:"A favorite already exists at this place",share:"Share this position",setFavorite:"Add this position to favorites"},zh:{defaultTitle:"Favorite",onboardMobile:"With a long press you can share/record positions.",onboardDesktop:"With a right-click you can share/record positions.",setLabel:"Set the name of the favorite",setLabelOfSharedFavorite:"Type in a name for this shared location. <br/> It will be stored in your favorites",invalidData:"Favorite data is incomplete or invalid.",alreadyExist:"A favorite already exists at this place",share:"Share this position",setFavorite:"Add this position to favorites"}},geoGroup:{fr:{_name_:"Groupe",myGroup:"Mon groupe",setUsernameTitle:"Saisissez votre nom ou pseudo",setUsernameLegend:"Renseignez votre nom ou pseudo <br>(entre £1 et £2 caractères).",setUsernamePlaceholder:"nom ou pseudo",invalid_pseudo:"Pseudo invalide",username_unavailable:"Pseudo déjà utilisé",internalError:"Veuillez réessayer ultérieurement.",createJoinGroup:"Créez ou Rejoignez un groupe",createGroup:"Créer un groupe",creatingGroup:"Création du groupe...",joinGroup:"Rejoindre un groupe existant",leaveGroup:"Quitter ce groupe",inviteGroup:"Inviter",sharedPositions:"Positions partagées",sharedPositionsFor:'Groupe <span class="geogroup-group-container">£1</span>',waiting_group_leave:"Sortie en cours...",new_group_desc:'<div>Un nouveau groupe a été créé avec le code</div><div class="geogroup-group-code-value">£1</div><div>Donnez ce code à vos amis pour qu\'ils rejoignent ce groupe.</div>',joinGroupLegend:"Entrez le code du groupe",invalid_code:"Code invalide",floor_nb:"étage {floor}",not_localized:"Non localisé ",localized:"Localisé",last_localized:"Localisé ",localized_at:"Localisé à",ago:"il y a {min} min.",group:"Groupe",chat_group:'Messagerie groupe <span class="geogroup-group-container">{code}</span>',chat_one2one:"Messagerie avec {name}",intro:"<p>Cette fonctionnalité vous permet de partager votre position en temps réel sur le salon avec d’autres personnes que vous voulez retrouver.<br><br>Une fois que vous avez choisi votre pseudo, vous pouvez soit créer un groupe et inviter d’autres personnes, soit rejoindre un groupe existant.<br><br>Pour changer de pseudo, vous devez d'abord quitter le groupe dans lequel vous êtes.<br><br>Vous pouvez quitter un groupe à tout moment.</p>",inviteTitle:"Invitation groupe",inviteContent:"Je vous invite à partager nos positions pour nous retrouver facilement via l’application mobile du salon. Allez sur plan , appuyez sur le bouton Groupe puis « Rejoindre un groupe » et rentrez le code suivant : £1. Vous pourrez quitter le groupe quand vous voulez.",no_chat_yet:"Pas encore de message...",outdoor:"Extérieur",newMessage:"Nouveau message",networkErrorOnList:"Pas de connexion internet, les positions ne peuvent être rafraîchies",changePseudo:"Changer de pseudo",logoutConfirm:"Voulez vous changer de pseudo ?",disconnection:"Votre groupe n'existe plus",checkInAt:'<span class="trackee-checkin-label">Check-in</span> à £1',checkOutAt:'<span class="trackee-checkout-label">Check-out</span> à £1',group_full:"Le groupe est complet.",memberLeftGroup:"£1 a quitté la tribu."},en:{_name_:"Group",myGroup:"My group",setUsernameTitle:"Enter your name or nickname",setUsernameLegend:"Please enter your name or nickname <br>(£1-£2 characters)",setUsernamePlaceholder:"name or nickname",invalid_pseudo:"Invalid nickname",username_unavailable:"Nickname already in use",internalError:"Please try later.",createJoinGroup:"Create or Join a group",createGroup:"Create group",creatingGroup:"Creating group...",joinGroup:"Join an existing group",leaveGroup:"Leave this group",inviteGroup:"Invite",sharedPositions:"Shared positions",sharedPositionsFor:'Group <span class="geogroup-group-container">£1</span>',waiting_group_leave:"Exit in progress...",new_group_desc:'<div>A new group has been created with code</div><div class="geogroup-group-code-value">£1</div><div>Give this code to your friends so that they can join the group.</div>',joinGroupLegend:"Please enter the group code",invalid_code:"Invalid code",floor_nb:"floor {floor}",not_localized:"Not located",localized:"Located",last_localized:"Located ",ago:"{min} min. ago",group:"Group",chat_group:'Chat group <span class="geogroup-group-container">{code}</span>',chat_one2one:"Chat with {name}",intro:"<p>This feature allows you to share in real time your position to meet more easily with other persons you know. <br><br>Once you have chosen a pseudo, you may either create a new group and invite others, or join an existing group.<br><br>To change your pseudonym you must first leave the group you are in.<br><br> You can leave the group at any moment.</p>",inviteTitle:"Group invitation",inviteContent:"I invite you to share our positions to meet easily. Just launch the app, go to Map, press the Group button, « Join group » and then enter the following code: £1. You can later leave the group whenever you want.",no_chat_yet:"No chat yet...",outdoor:"Outdoor",newMessage:"New message",networkErrorOnList:"No Internet connection, positions cannot be refreshed",changePseudo:"Change pseudo",logoutConfirm:"Do you want to change your pseudo?",disconnection:"Your group no longer exists",checkInAt:'<span class="trackee-checkin-label">Check-in</span> at £1',checkOutAt:'<span class="trackee-checkout-label">Check-out</span> at £1',group_full:"The group is full.",memberLeftGroup:"£1 left the group."},zh:{_name_:"Group",myGroup:"My group",setUsernameTitle:"Enter your name or nickname",setUsernameLegend:"Please enter your name or nickname <br>(£1-£2 characters)",setUsernamePlaceholder:"name or nickname",invalid_pseudo:"Invalid nickname",username_unavailable:"Nickname already in use",internalError:"Please try later.",createJoinGroup:"Create or Join a group",createGroup:"Create group",creatingGroup:"Creating group...",joinGroup:"Join an existing group",leaveGroup:"Leave this group",inviteGroup:"Invite",sharedPositions:"Shared positions",sharedPositionsFor:'Group <span class="geogroup-group-container">£1</span>',waiting_group_leave:"Exit in progress...",new_group_desc:'<div>A new group has been created with code</div><div class="geogroup-group-code-value">£1</div><div>Give this code to your friends so that they can join the group.</div>',joinGroupLegend:"Please enter the group code",invalid_code:"Invalid code",floor_nb:"floor {floor}",not_localized:"Not located",localized:"Located",last_localized:"Located ",ago:"{min} min. ago",group:"Group",chat_group:'Chat group <span class="geogroup-group-container">{code}</span>',chat_one2one:"Chat with {name}",intro:"<p>This feature allows you to share in real time your position to meet more easily with other persons you know. <br><br>Once you have chosen a pseudo, you may either create a new group and invite others, or join an existing group.<br><br>To change your pseudonym you must first leave the group you are in.<br><br> You can leave the group at any moment.</p>",inviteTitle:"Group invitation",inviteContent:"I invite you to share our positions to meet easily. Just launch the app, go to Map, press the Group button, « Join group » and then enter the following code: £1. You can later leave the group whenever you want.",no_chat_yet:"No chat yet...",outdoor:"Outdoor",newMessage:"New message",networkErrorOnList:"No Internet connection, positions cannot be refreshed",changePseudo:"Change pseudo",logoutConfirm:"Do you want to change your pseudo?",disconnection:"Your group no longer exists",checkInAt:'<span class="trackee-checkin-label">Check-in</span> at £1',checkOutAt:'<span class="trackee-checkout-label">Check-out</span> at £1',group_full:"The group is full.",memberLeftGroup:"£1 left the group."}},geopush:{fr:{modalTitle:"Notifications",noNotification:"Aucune notification"},en:{modalTitle:"Notifications",noNotification:"No notification"},zh:{modalTitle:"通知",noNotification:"无任何通知"}}};var translate=function(name,plugin,vars){var lang=MobiGeo.lang;if(typeof i18n[plugin]==="undefined"||typeof i18n[plugin][lang]==="undefined"||typeof i18n[plugin][lang][name]==="undefined"){mgLogger.error(module,"Missing translation for: "+plugin+"/"+name);return i18n[plugin][defaultLang][name]}var text=i18n[plugin][lang][name];if(mgJt.isEmpty(vars)===false&&mgJt.isEmpty(vars.length)===false){for(var i=0;i<vars.length;i++){text=text.replace("£"+(i+1),vars[i])}}return text};var customize=function(properties){if(typeof properties!=="object"){mgLogger.error(module,"Wrong argument for labels customization, object expected, received: "+typeof properties)}for(var key in properties){if(properties.hasOwnProperty(key)===false){continue}_customize([key],properties[key])}};var _customize=function(path,value){if(typeof value==="object"){for(var iKey in value){if(value.hasOwnProperty(iKey)===false){continue}var paramPath=path.slice();paramPath.push(iKey);_customize(paramPath,value[iKey])}}else if(typeof value==="string"){var key=path.pop(),field;if(path.length<1){field=i18n}else{field=i18n[path.shift()];var step;while(mgJt.isEmpty(step=path.shift())===false){field=field[step]}}field[key]=value}else{mgLogger.error(module,"Unexpected value for label "+path+" customization: "+value+" (type "+typeof properties+")")}};var handleCustomizeEvent=function(event,value){customize(value)};PubSub.subscribe("mobigeo-private-i18n-override",handleCustomizeEvent);var formatDateTime=function(d){if(mgJt.isEmpty(d)){d=Date.now()}if(typeof d==="number"){d=new Date(d)}var formated;switch(MobiGeo.lang){case"fr":formated=getTwoDigit(d.getDate())+"/"+getTwoDigit(d.getMonth())+"/"+d.getFullYear()+" "+getTwoDigit(d.getHours())+"h"+getTwoDigit(d.getMinutes());break;default:formated=d.getFullYear()+"/"+getTwoDigit(d.getMonth())+"/"+getTwoDigit(d.getDate())+" "+getTwoDigit(d.getHours())+":"+getTwoDigit(d.getMinutes())}return formated};var getTwoDigit=function(n){return(n>=0&&n<10?"0":"")+n};return{t:translate,customize:customize,formatDateTime:formatDateTime}}();var mgCrypto=function(){"use strict";var module=mgLogger.modules.Core,TIME_LABEL="sjcl decrypt";var uncrypt=function(data){mgLogger.time(module,"Total uncrypt");var returnObj=false;if(typeof data!=="string"){returnObj=true;data=JSON.stringify(data)}var uncryptedData=_aesDecrypt(data,_MobiGeo.key);if(returnObj===true){uncryptedData=JSON.parse(uncryptedData)}mgLogger.timeEnd(module,"Total uncrypt");return uncryptedData};function _aesDecrypt(encryptedData,passphrase){mgLogger.time(module,TIME_LABEL);var decryptedData=sjcl.decrypt(passphrase,encryptedData,{},{});mgLogger.timeEnd(module,TIME_LABEL);return decryptedData}return{uncrypt:uncrypt}}();var mgAndroidPermissions=function(){"use strict";var module=mgLogger.modules.Core,arePermissionsGranted=false;var grantCallbacks=[],denyCallbacks=[];var areAndroidPermissionsNeeded=function(){return mgSupport.env.isAndroid&&mgSupport.env.version<6===false&&arePermissionsGranted!==true};PubSub.subscribe("mobigeo.permissionsResult",function(evtName,result){result=JSON.parse(result);var fails=Object.keys(result).filter(function(permId){return result[permId]===false});if(fails.length===0){arePermissionsGranted=true;while(grantCallbacks.length){grantCallbacks.shift()()}denyCallbacks=[]}else{arePermissionsGranted=false;while(denyCallbacks.length){denyCallbacks.shift()()}grantCallbacks=[]}});return{get areGranted(){return arePermissionsGranted===true},get areNeeded(){return areAndroidPermissionsNeeded()},addGrantCallback:function(func){if(typeof func!=="function"){mgLogger.error(module,"Cannot add grant callback as argument is not a function",func);return}grantCallbacks.push(func)},addDenyCallback:function(func){if(typeof func!=="function"){mgLogger.error(module,"Cannot add deny callback as argument is not a function",func);return}denyCallbacks.push(func)}}}();var mgMapConfig=function(){"use strict";var module=mgLogger.modules.Map,FILE_PATH="files/maps/config/mapConfig.json",mapConfig,_iconScaleOptions,mapConfigProvider;var reset=function(){mapConfig=null;_iconScaleOptions=null};var getUrl=function(){var url;if(typeof mapConfigProvider==="function"){url=mapConfigProvider()}else if(mgUpdateMain.isUpdateFeatureEnabled()){url=mgUpdateMain.getUrl(FILE_PATH)}else{url=mgData.getPath()+FILE_PATH}return url};var load=function(){mgFetchHelper.execute({type:"get",dataType:"json",url:getUrl(),cache:false,success:function(conf){mapConfig=conf;PubSub.publish("mobigeo-mapConfigLoaded")},error:function(error){mgLogger.error(module,"Error while getting mapConfig.json",error)}})};var getZoneById=function(zoneId){if(mgJt.isEmpty(mapConfig)){mgLogger.error(module,"mapConfig.json has not been loaded yet.");return null}else{return mgJt.filterOne(mapConfig.zones,{id:zoneId})}};var getIconScaleOptions=function(){if(!_iconScaleOptions){if(!mgSupport.env.isAndroid&&mgSupport.env.isChrome){_iconScaleOptions=mapConfig.Ui.iconScale.desktop}else{_iconScaleOptions=mgSupport.touch===true?mapConfig.Ui.iconScale.mobile:mapConfig.Ui.iconScale.desktop}}return _iconScaleOptions};return{reset:reset,load:load,get:function(){if(mgJt.isEmpty(mapConfig)){mgLogger.error(module,"mapConfig.json has not been loaded yet.")}else{return mapConfig}},getZoneById:getZoneById,setProvider:function(provider){if(typeof provider!=="function"){mgLogger.error(module,"mapConfig provider argument is not a function",provider);return}mapConfigProvider=provider},getIconScaleOptions:getIconScaleOptions,isLoaded:function(){if(mgJt.isEmpty(mapConfig)){return false}return true}}}();var mgMapUiStyle=function(){"use strict";var module=mgLogger.modules.Map;var BUTTON_BARS={BOTTOM:1,ELEVATOR:2};var cssSheet;var reset=function(){cssSheet=null};var initCssSheet=function(){if(mgJt.isEmpty(cssSheet)===true){cssSheet=mgDt.createStyleSheet(mgMapUi.getMapContainerEl(),{id:"map-custom-style"})}else{mgDt.clearCssRules(cssSheet)}};var setCssRules=function(options,mapTitleEl){if(options.showMapTitle&&mgVignette.isEnabled){mgVignette.updateThumbnailPosition(mapTitleEl?mapTitleEl.offsetHeight:0);if(options.titleBackgroundColor){addRule(" .map-title",{"background-color":options.titleBackgroundColor})}if(options.titleColor){addRule(" .map-title > div",{color:options.titleColor||"#fff"})}}addRule(" #map-display",{"background-color":options.backgroundColor});setButtonsRules(BUTTON_BARS.BOTTOM,options);setButtonsRules(BUTTON_BARS.ELEVATOR,options);var itiTextColor=options.itineraryInfosColor||options.titleBackgroundColor,itiBgColor=options.itineraryInfosBackgroundColor||options.titleColor||"#fff",itiBorderColor=options.itineraryInfosBorderColor||null,itiFlagLabelBackgroundColor=options.titleBackgroundColor,itiFlagLabelColor=options.titleColor,itiBtnSeparatorColor;var itineraryInfosLeftPos=options.itineraryInfosLeftPos;var itineraryInfosTopPos=options.itineraryInfosTopPos;if(!itiBorderColor&&itiBgColor){itiBorderColor=shadeBlendConvert(-.15,itiBgColor)}if(itiTextColor){itiBtnSeparatorColor=shadeBlendConvert(.65,itiTextColor)}if(itiTextColor){addRule(" .iti-infos-container",{color:itiTextColor})}if(itineraryInfosLeftPos){addRule(" .iti-infos-container",{left:itineraryInfosLeftPos})}if(itineraryInfosTopPos){addRule(" .iti-infos-container",{top:itineraryInfosTopPos})}var itineraryInfoStyle={};if(itiBgColor){itineraryInfoStyle["background-color"]=itiBgColor}if(itiBorderColor){itineraryInfoStyle["border-color"]=itiBorderColor}if(Object.keys(itineraryInfoStyle).length>0){addRule(" .iti-infos",itineraryInfoStyle);addRule(" #iti-buttons",itineraryInfoStyle)}if(itiTextColor){addRule(" #iti-buttons *:after",{"border-color":itiTextColor});addRule(" #iti-buttons > *",{"border-color":itiBtnSeparatorColor})}if(itiTextColor&&itiBgColor){addRule(" #iti-buttons *.hover:after",{"background-color":itiTextColor,color:itiBgColor})}var itiFlagStyle={"background-color":itiFlagLabelBackgroundColor,color:itiFlagLabelColor};addRule(" .icon-flag-start .label",itiFlagStyle);addRule(" .icon-flag-arrival .label",itiFlagStyle);addRule(" #thumbnail",{width:mgMapConfig.get().Ui.thumbnailMobileWidth+"px"});addRule(" #thumbnail",{height:mgMapConfig.get().Ui.thumbnailMobileHeight+"px"});addRule(".tablet #thumbnail",{width:mgMapConfig.get().Ui.thumbnailTabletWidth+"px"});addRule(".tablet #thumbnail",{height:mgMapConfig.get().Ui.thumbnailTabletHeight+"px"});if(mgMapConfig.get().Ui.thumbnailDesktopWidth&&mgMapConfig.get().Ui.thumbnailDesktopHeight){addRule(".desktop #thumbnail",{width:mgMapConfig.get().Ui.thumbnailDesktopWidth+"px"});addRule(".desktop #thumbnail",{height:mgMapConfig.get().Ui.thumbnailDesktopHeight+"px"})}else{addRule(".desktop #thumbnail",{width:mgMapConfig.get().Ui.thumbnailTabletWidth+"px"});addRule(".desktop #thumbnail",{height:mgMapConfig.get().Ui.thumbnailTabletHeight+"px"})}addRule(" .modal-btn-ok",{"background-color":options.modalOkBackgroundColor+" !important","border-color":shadeBlendConvert(-.5,options.modalOkBackgroundColor)+" !important"});if(options.tooltipBackgroundColor){addRule(" .popper",{background:options.tooltipBackgroundColor});addRule(" .tooltip",{background:options.tooltipBackgroundColor});addRule(" .tooltip .tooltip-arrow",{"border-color":options.tooltipBackgroundColor});addRule(" .popper .popper__arrow",{"border-color":options.tooltipBackgroundColor})}if(mgSupport.env.iPad===true){mgMapUi.getMapContainerEl().classList.add("tablet")}if(mgSupport.env.os!=="iOS"&&mgSupport.env.os!=="Android"){mgMapUi.getMapContainerEl().classList.add("desktop")}var poiIconLabelBackgroundColor=options.poiIconLabelBackgroundColor||options.titleBackgroundColor,poiIconLabelColor=options.poiIconLabelColor||options.titleColor,favoriteIconLabelBackgroundColor=options.favoriteIconLabelBackgroundColor||options.titleBackgroundColor,favoriteIconLabelColor=options.favoriteIconLabelColor||options.titleColor;addRule(" .icon-flag-poi .label",{"background-color":poiIconLabelBackgroundColor,color:poiIconLabelColor});addRule(" .icon-favorite .label",{"background-color":favoriteIconLabelBackgroundColor,color:favoriteIconLabelColor});if(mgFeatures.isPoiStatesEnabled()){var poiStyles=mgMapConfig.get().Ui.poiStyles;if(poiStyles){Object.keys(poiStyles).forEach(function(cssSelector){var stringifiedStyle=mgDt.stringifyStyle(poiStyles[cssSelector].style);mgDt.addCssRule(cssSheet,"."+mgMapUi.containerClass+" "+cssSelector,stringifiedStyle)})}}};var addRule=function(selector,values){mgDt.addCssRule(cssSheet,"."+mgMapUi.containerClass+selector,values)};var setButtonsRules=function(buttonBarType,options){var containerClass,prefix;if(buttonBarType===BUTTON_BARS.BOTTOM){containerClass=".mg-buttons-horizontal";prefix="bottomButtons"}else if(buttonBarType===BUTTON_BARS.ELEVATOR){containerClass=".mg-buttons-vertical";prefix="elevatorButtons"}else{mgLogger.error(module,"Invalid button bar type: ",buttonBarType);return}var barBackgroundColor=options[prefix+"BarBackgroundColor"],barBorderRadius=options[prefix+"BarBorderRadius"],backgroundColor=options[prefix+"BackgroundColor"],position=options[prefix+"Position"],color=options[prefix+"Color"],margin=options[prefix+"Margin"],width=options[prefix+"Width"],height=options[prefix+"Height"],borderRadius=options[prefix+"BorderRadius"],useSeparator=options[prefix+"UseSeparator"];if(position!==null&&typeof position==="object"){var posStyle={};Object.keys(position).forEach(function(posProp){posStyle[posProp]=position[posProp]+"px"});addRule(" "+containerClass,posStyle)}var barStyle={};var hasBarBackgroundColor=barBackgroundColor&&barBackgroundColor!=="none";if(hasBarBackgroundColor){var bgCol1=shadeBlendConvert(options.gradientStrength,barBackgroundColor),bgCol2=shadeBlendConvert(-1*options.gradientStrength,barBackgroundColor);barStyle.background="bgCol1; "+"background: -moz-linear-gradient(-45deg, "+bgCol1+" 0%, "+bgCol2+" 100%); "+"background: -webkit-linear-gradient(-45deg, "+bgCol1+" 0%,"+bgCol2+" 100%); "+"background: linear-gradient(135deg, "+bgCol1+" 0%,"+bgCol2+" 100%); ";barStyle.filter="progid:DXImageTransform.Microsoft.gradient( startColorstr='"+bgCol1+"', endColorstr='"+bgCol2+"',GradientType=1 )"}else{barStyle.background="none"}if(width){barStyle.width=String(width)+"px"}if(height){barStyle.height=String(height)+"px"}addRule(" "+containerClass+" nav",barStyle);var buttonStyle={"background-color":backgroundColor};if(typeof margin==="number"){buttonStyle["margin-"+(buttonBarType===BUTTON_BARS.BOTTOM?"left":"top")]=margin+"px"}if(typeof borderRadius!=="undefined"){buttonStyle["border-radius"]=borderRadius+"px"}if(useSeparator===1){buttonStyle["border-"+(buttonBarType===BUTTON_BARS.BOTTOM?"right":"bottom")]="1px solid "+shadeBlendConvert(-.2,barBackgroundColor||backgroundColor);addRule(" "+containerClass+" a:last-of-type",{border:0})}var size=width||height;if(size){buttonStyle.height=String(size)+"px";buttonStyle.width=String(size)+"px";buttonStyle["font-size"]=String(size/4)+"px"}addRule(" "+containerClass+" a",buttonStyle);if(barBorderRadius){if(hasBarBackgroundColor){addRule(" "+containerClass+" nav",{"border-radius":barBorderRadius+"px"})}if(buttonBarType===BUTTON_BARS.ELEVATOR){addRule(" "+containerClass+" a:first-child",{"border-top-left-radius":barBorderRadius+"px","border-top-right-radius":barBorderRadius+"px"});addRule(" "+containerClass+" a:last-child",{"border-bottom-left-radius":barBorderRadius+"px","border-bottom-right-radius":barBorderRadius+"px"})}else if(buttonBarType===BUTTON_BARS.BOTTOM){addRule(" "+containerClass+" a:first-child",{"border-top-left-radius":barBorderRadius+"px","border-bottom-left-radius":barBorderRadius+"px"});addRule(" "+containerClass+" a:last-child",{"border-top-right-radius":barBorderRadius+"px","border-bottom-right-radius":barBorderRadius+"px"})}}if(size){addRule(" "+containerClass+" a span",{"line-height":String(size)+"px"})}addRule(" "+containerClass+" span:after",{color:color});if(buttonBarType===BUTTON_BARS.ELEVATOR){addRule(" .elevator span",{color:color});addRule(" .elevator ."+mgZoneManager.elevatorStyles[mgPositionManager.TYPES.USER_POS],{"background-color":options.elevatorWithPositionBackgroundColor});addRule(" .elevator .select",{"background-color":options.elevatorCurrentBackgroundColor});addRule(" .elevator .with-favorite",{"background-color":options.elevatorWithFavoriteBackgroundColor});addRule(" .elevator .with-poi",{"background-color":options.elevatorWithPOIBackgroundColor});var arrowWidth=options.elevatorArrowWidth,arrowHeight=options.elevatorArrowHeight,arrowsDimensionSet=typeof arrowWidth==="number"&&typeof arrowHeight==="number",marginLeft;if(arrowsDimensionSet){marginLeft=(size-arrowWidth)/2}if((bgCol1||backgroundColor)&&arrowsDimensionSet){addRule(" .elevator-up-arrow div",{"margin-left":marginLeft+"px","border-width":"0 "+arrowWidth/2+"px "+arrowHeight+"px "+arrowWidth/2+"px","border-color":"transparent transparent "+(bgCol1||backgroundColor)+" transparent"})}if((bgCol2||backgroundColor)&&arrowsDimensionSet){addRule(" .elevator-down-arrow div",{"margin-left":marginLeft+"px","border-width":arrowHeight+"px "+arrowWidth/2+"px 0 "+arrowWidth/2+"px","border-color":(bgCol2||backgroundColor)+" transparent transparent transparent"})}}};return{reset:reset,initCssSheet:initCssSheet,setCssRules:setCssRules}}();var mgScrollHandler=function(){"use strict";var Interval=function(){var _value;var get=function(){if(!_value){_value=mgMapConfig.get().Ui.scrollInterval;if(typeof _value!=="number"){_value=150}}return _value};var reset=function(){_value=null};return{get:get,reset:reset}}();var listenerEnabled=true;var enableListener=function(){listenerEnabled=true};var handler=function(e){e.preventDefault();if(listenerEnabled!==true){return}listenerEnabled=false;if(e.deltaY<0){mgMapUi.zoomin()}else if(e.deltaY>0){mgMapUi.zoomout()}window.setTimeout(enableListener,Interval.get())};return{handler:handler,reset:Interval.reset}}();var mgMapTransform=function(){"use strict";var s,e,f,r,cos_r,sin_r;var reset=function(){s=1;e=0;f=0;r=0;cos_r=1;sin_r=0};reset();var set=function(vector_v,scale,rotation){s=scale;e=vector_v.dx;f=vector_v.dy;r=rotation;updateAngle()};var update=function(){s=mgMap.getH_v()/mgMap.getMapBox_m()[1];e=mgMap.getMapOrigin_v().x;f=mgMap.getMapOrigin_v().y;r=mgMap.getCurrentRotation();updateAngle()};var updateAngle=function(){var angle=Math.PI*r/180;cos_r=Math.cos(angle);sin_r=Math.sin(angle)};var m2v=function(xy_m){return{x:e+s*(cos_r*xy_m.x-sin_r*xy_m.y),y:f+s*(sin_r*xy_m.x+cos_r*xy_m.y)}};var v2m=function(xy_v){if(!s){return null}return{x:(cos_r*(xy_v.x-e)+sin_r*(xy_v.y-f))/s,y:(-sin_r*(xy_v.x-e)+cos_r*(xy_v.y-f))/s}};var v2r=function(xy_v){if(!s){return null}return m2r(v2m(xy_v))};var r2v=function(xy_r){return m2v(r2m(xy_r))};var m2r=function(xy_m){return{x:xy_m.x*mgMap.getMap2ref(),y:xy_m.y*mgMap.getMap2ref()}};var r2m=function(xy_r){return{x:xy_r.x/mgMap.getMap2ref(),y:xy_r.y/mgMap.getMap2ref()}};return{reset:reset,update:update,m2v:m2v,m2r:m2r,v2m:v2m,v2r:v2r,r2v:r2v,r2m:r2m,getE:function(){return e},getF:function(){return f},getR:function(){return r},getS:function(){return s},setS:function(value){s=value}}}();var mgViewport=function(){"use strict";var margin={top:0,right:0,bottom:0,left:0},h_v=0,w_v=0,h_m={},w_m={},ctr_v={},ctr_r={},ctr_m={},min_m={},max_m={},min_r={},max_r={};var init=function(){w_v=mgMapUi.mapContainerOffsets.width;h_v=mgMapUi.mapContainerOffsets.height;ctr_v.x=Math.floor(w_v/2);ctr_v.y=Math.floor(h_v/2)};var update=function(){w_v=mgMapUi.mapContainerOffsets.width;h_v=mgMapUi.mapContainerOffsets.height;margin={top:Math.round(h_v*mgMapConfig.get().Ui.viewportMargin),right:Math.round(w_v*(1-mgMapConfig.get().Ui.viewportMargin)),bottom:Math.round(h_v*(1-mgMapConfig.get().Ui.viewportMargin)),left:Math.round(w_v*mgMapConfig.get().Ui.viewportMargin)};min_m=mgMapTransform.v2m({x:0,y:0});max_m=mgMapTransform.v2m({x:w_v,y:h_v});var tmph_m=mgMapTransform.v2m({x:0,y:h_v});var tmpw_m=mgMapTransform.v2m({x:w_v,y:0});h_m=mgUtils.dist(tmph_m,min_m);w_m=mgUtils.dist(tmpw_m,min_m);min_r=mgMapTransform.v2r({x:0,y:0});max_r=mgMapTransform.v2r({x:w_v,y:h_v});ctr_r=mgMapTransform.v2r(ctr_v);ctr_m=mgMapTransform.v2m(ctr_v);mgVignette.update()};var isInside=function(posXy_r){var min_v=mgMapTransform.r2v(min_r),max_v=mgMapTransform.r2v(max_r);var pos_v=mgMapTransform.r2v(posXy_r);return Math.min(min_v.x,max_v.x)<pos_v.x&&pos_v.x<Math.max(min_v.x,max_v.x)&&Math.min(min_v.y,max_v.y)<pos_v.y&&pos_v.y<Math.max(min_v.y,max_v.y)};return{init:init,update:update,isInside:isInside,get margin(){return margin},get ctr_v(){return ctr_v},get ctr_r(){return ctr_r},get min_m(){return min_m},get h_m(){return h_m},get w_m(){return w_m},get h_v(){return h_v},get w_v(){return w_v},get min_r(){return min_r},get max_r(){return max_r}}}();var mgVignette=function(){"use strict";var module=mgLogger.modules.Map,thumbnailEl,rectEl,w_v0,w_v,h_v0,h_v,pos_v,scale,ratio2m,rectPos_v,rect_w_v,rect_h_v,rotation,rectBorder_v,seized,seizePos_v,isEnabled;var reset=function(){thumbnailEl=null;rectEl=null;w_v=0;h_v=0;ratio2m=0;rectPos_v={};rect_w_v=0;rect_h_v=0;rotation=0;rectBorder_v=3;seized=false;seizePos_v={};isEnabled=true};reset();var initDimensions=function(){if(isEnabled){w_v=parseInt(thumbnailEl.offsetWidth);h_v=parseInt(thumbnailEl.offsetHeight);w_v0=w_v;h_v0=h_v;pos_v={x:parseInt(thumbnailEl.offsetLeft),y:parseInt(thumbnailEl.offsetTop)};ratio2m=w_v/mgMap.getInitialMapBox_m()[0]}};var init=function(showThumbnail){isEnabled=showThumbnail!==false;if(isEnabled){thumbnailEl=mgMapUi.getMapContainerEl().querySelector("#thumbnail");rectEl=mgMapUi.getMapContainerEl().querySelector("#smallwindow")}};var update=function(){if(isEnabled){if(seized===true){return}rectPos_v.x=mgViewport.min_m.x*ratio2m;rectPos_v.y=mgViewport.min_m.y*ratio2m;rect_h_v=mgViewport.h_m*ratio2m;rect_w_v=mgViewport.w_m*ratio2m;scale=w_v0!==0?mgViewport.h_m*ratio2m/w_v0:0;rotation=-mgMap.getCurrentRotation();render()}};var render=function(){if(isEnabled){var smallwindowCss={left:Math.round(rectPos_v.x-rectBorder_v)+"px",top:Math.round(rectPos_v.y-rectBorder_v)+"px",width:Math.round(rect_w_v)+"px",height:Math.round(rect_h_v)+"px"};smallwindowCss[mgDt.getPrefixedCssProperty("transformOrigin")]=-rectPos_v.x/rect_w_v+"% "+-rectPos_v.y/rect_h_v+"%";smallwindowCss[mgDt.getPrefixedCssProperty("transform")]="rotate3d(0,0,1,"+rotation+"deg)";mgDt.applyStyle(rectEl,smallwindowCss)}};var enableWillChangeProperty=function(){if(isEnabled&&mgMapConfig.get().Ui.useWillChange===true){mgDt.applyStyle(rectEl,{willChange:"transform"})}};var disableWillChangeProperty=function(){if(isEnabled&&mgMapConfig.get().Ui.useWillChange===true){mgDt.applyStyle(rectEl,{willChange:"auto"})}};var initLinks=function(){if(thumbnailEl){thumbnailEl.addEventListener(mgSupport.interaction.click,mgMap.focusOnRootZone)}};var setThumbnailImage=function(){if(thumbnailEl){mgDt.applyStyle(thumbnailEl,{backgroundImage:"url("+mgData.getThumbnailPath()+")"})}};PubSub.subscribe("mobigeo-mapsLoaded",setThumbnailImage);var updateThumbnailPosition=function(titleHeight){if(thumbnailEl){mgDt.applyStyle(thumbnailEl,{top:thumbnailEl.offsetTop+titleHeight+"px"})}};var showThumbnail=function(){if(thumbnailEl){mgDt.showElement(thumbnailEl)}};var hideThumbnail=function(){if(thumbnailEl){mgDt.hideElement(thumbnailEl)}};var setThumbnailTransparency=function(){if(thumbnailEl){mgDt.applyStyle(thumbnailEl,{opacity:.2})}};var removeThumbnailTransparency=function(){if(thumbnailEl){mgDt.applyStyle(thumbnailEl,{opacity:1})}};return{init:init,initDimensions:initDimensions,initLinks:initLinks,update:update,reset:reset,showThumbnail:showThumbnail,hideThumbnail:hideThumbnail,updateThumbnailPosition:updateThumbnailPosition,enableWillChangeProperty:enableWillChangeProperty,disableWillChangeProperty:disableWillChangeProperty,setThumbnailTransparency:setThumbnailTransparency,removeThumbnailTransparency:removeThumbnailTransparency,getRatio2m:function(){return ratio2m},setRatio2m:function(value){ratio2m=value},getW_v:function(){return w_v},setSeized:function(value){seized=value},isEnabled:function(){return isEnabled===true}}}();var mgMap=function(){"use strict";var module=mgLogger.modules.Map,map2ref,p0_m,mapMinZoom,mapMaxZoom,currentZoomLevel,zoomThresholds=[],currentZoom,currentRotation,mapOrigin_v,mapBoundingBox_v,context,w_v,h_v,h0_v,w0_v,seizePos_v,seized,isPinched,isDoubleTapped,svgNames,initialMapBox_m=[],mapBox_m=[],last_refresh_zoom_level,touchStarted,initialZoom,labelsLayers={},hasHardRefreshedOnce;var resetVars=function(){map2ref=null;p0_m={};mapMinZoom=1;mapMaxZoom=1;currentZoomLevel=0;mgJt.emptyArray(zoomThresholds);currentZoom=1;currentRotation=0;mapOrigin_v={};mapBoundingBox_v={};context={};w_v=0;h_v=0;h0_v=0;w0_v=0;seizePos_v={};seized=false;isPinched=false;isDoubleTapped=false;svgNames=false;mgJt.emptyArray(initialMapBox_m);mgJt.emptyArray(mapBox_m);last_refresh_zoom_level=0;hasHardRefreshedOnce=false};resetVars();var init=function(){mgLogger.debug(module,"init");if(initialMapBox_m.length===0){mgLogger.error(module,"No map loaded yet.");return}if(mgSupport.isDegradeMode===true){mgMapConfig.get().Ui.maxRefreshZoomLevel=3}mapMinZoom=Math.min(mgMapUi.mapContainerOffsets.width/initialMapBox_m[0],mgMapUi.mapContainerOffsets.height/initialMapBox_m[1]);for(var i=0;i<mgMapConfig.get().Ui.nbZoomLevels;i++){zoomThresholds[i]=mapMinZoom*Math.pow(mgMapUi.getStaticZoomStep(),i)}mapMaxZoom=zoomThresholds[i-1];if(mgMapConfig.get().Ui.options.enableReverseLabels===true){(function(){var zones=mgMapConfig.get().zones;for(var z=0;z<zones.length;z++){var zId=zones[z].id;labelsLayers[zId]=[];for(var f=0;f<zones[z].floors.length;f++){var fId=zones[z].floors[f].id;var tmpL=document.getElementById("Z_"+zId+"_"+fId+"_L");var tmpLr=document.getElementById("Z_"+zId+"_"+fId+"_Lr");labelsLayers[zId].push({normal:tmpL,reverse:tmpLr})}}})()}};var reset=function(p0_m,zoomLevel,rotation,center_v){var _p0_m=JSON.parse(JSON.stringify(p0_m));if(mgJt.isEmpty(_p0_m)===true||mgJt.isEmpty(_p0_m.x)===true||mgJt.isEmpty(_p0_m.y)===true){_p0_m={x:mgMapConfig.get().Ui.refMapWidth/2,y:mgMapConfig.get().Ui.refMapHeight/2}}if(mgJt.isEmpty(zoomLevel)===true||typeof zoomLevel!=="number"){zoomLevel=currentZoomLevel}if(mgJt.isEmpty(rotation)===true||typeof rotation!=="number"){rotation=0}refresh({reset:true});mgMapTransform.reset();currentZoom=1;currentRotation=0;mapOrigin_v.x=0;mapOrigin_v.y=0;w_v=w0_v=initialMapBox_m[0];h_v=h0_v=initialMapBox_m[1];mgDt.applyStyle(mgMapUi.getMapstackEl(),{width:w0_v+"px",height:h0_v+"px"});mgViewport.update();update_map_BBox();var vector_v={dx:-_p0_m.x/map2ref+mgViewport.ctr_v.x,dy:-_p0_m.y/map2ref+mgViewport.ctr_v.y};if(mgSupport.useCss3d===true){setWebkitOrigin(0)}move(vector_v.dx,vector_v.dy,true);zoom(zoomLevel,rotation,center_v?center_v:mgViewport.ctr_v,mgMapUi.GESTURE_TYPES.NONE)};var storeInitialZoom=function(){initialZoom=currentZoom};var zoom2zoomLevel=function(zoom){var zoomLevel,_nbZoomLevels=mgMapConfig.get().Ui.nbZoomLevels;if(zoomThresholds.length===0){return false}for(var i=0;i<_nbZoomLevels;i++){if(zoom<=zoomThresholds[i]){zoomLevel=i;break}}if(zoom>zoomThresholds[_nbZoomLevels-1]){zoomLevel=_nbZoomLevels-1}return zoomLevel};var zoomLevel2zoom=function(zoomLevel){if(zoomThresholds.length===0||zoomLevel>mgMapConfig.get().Ui.nbZoomLevels-1){return false}return zoomThresholds[zoomLevel]};var save=function(){context.mapOrigin_v={x:mapOrigin_v.x,y:mapOrigin_v.y};context.w_v=w_v;context.h_v=h_v;context.currentZoom=currentZoom;context.rotation=currentRotation;context.seizePos_v={x:seizePos_v.x,y:seizePos_v.y}};var restore=function(){if(typeof context==="undefined"||typeof context.mapOrigin_v==="undefined"||typeof context.mapOrigin_v.x==="undefined"){mgLogger.error(module,"restore error: context.mapOrigin_v is not defined",context,context.mapOrigin_v);return}if(typeof mapOrigin_v==="undefined"||typeof mapOrigin_v.x==="undefined"){mgLogger.error(module,"restore error: map.getMapOrigin_v() is not defined",mapOrigin_v);return}mapOrigin_v.x=context.mapOrigin_v.x;mapOrigin_v.y=context.mapOrigin_v.y;w_v=context.w_v;h_v=context.h_v;currentZoom=context.currentZoom;currentRotation=context.rotation;seizePos_v={x:context.seizePos_v.x,y:context.seizePos_v.y};mgMapTransform.update();mgViewport.update()};var setWebkitOrigin=function(mode){var css={};if(mode===1){var origin_x=Math.max(0,100*(-mapOrigin_v.x+mgViewport.ctr_v.x)/w0_v),origin_y=Math.max(0,100*(-mapOrigin_v.y+mgViewport.ctr_v.y)/h0_v);css[mgDt.getPrefixedCssProperty("transformOrigin")]=origin_x+"% "+origin_y+"%"}else{css[mgDt.getPrefixedCssProperty("transformOrigin")]="0% 0%"}mgDt.applyStyle(mgMapUi.getMapstackEl(),css)};var translate=function(vector_v){if(mapBoundingBox_v.xmin_v+vector_v.dx>=mgViewport.margin.right){vector_v.dx=mgViewport.margin.right-mapBoundingBox_v.xmin_v}else if(mapBoundingBox_v.xmax_v+vector_v.dx<=mgViewport.margin.left){vector_v.dx=mgViewport.margin.left-mapBoundingBox_v.xmax_v}if(mapBoundingBox_v.ymin_v+vector_v.dy>=mgViewport.margin.bottom){vector_v.dy=mgViewport.margin.bottom-mapBoundingBox_v.ymin_v}else if(mapBoundingBox_v.ymax_v+vector_v.dy<=mgViewport.margin.top){vector_v.dy=mgViewport.margin.top-mapBoundingBox_v.ymax_v}if(vector_v.dx===0&&vector_v.dy===0){return null}mapOrigin_v.x+=vector_v.dx;mapOrigin_v.y+=vector_v.dy;mgMapTransform.update();mgViewport.update();update_map_BBox();render()};var scale=function(targetScale,rotation,center_v,gesture){if(targetScale>1&&currentZoom<mapMaxZoom){targetScale=Math.min(targetScale,mapMaxZoom/currentZoom)}else if(targetScale<1&&currentZoom>mapMinZoom){targetScale=Math.max(targetScale,mapMinZoom/currentZoom)}else{targetScale=1}currentZoom*=targetScale;currentZoomLevel=zoom2zoomLevel(currentZoom);var originToCenter_v={dx:center_v.x-mapOrigin_v.x,dy:center_v.y-mapOrigin_v.y};var angle=rotation*Math.PI/180,cos_angle=Math.cos(angle),sin_angle=Math.sin(angle);var scaleComp_v={dx:(1-targetScale)*originToCenter_v.dx,dy:(1-targetScale)*originToCenter_v.dy};mapOrigin_v.x+=scaleComp_v.dx;mapOrigin_v.y+=scaleComp_v.dy;w_v*=targetScale;h_v*=targetScale;originToCenter_v={dx:center_v.x-mapOrigin_v.x,dy:center_v.y-mapOrigin_v.y};var rotComp_v={dx:(1-cos_angle)*originToCenter_v.dx+sin_angle*originToCenter_v.dy,dy:-sin_angle*originToCenter_v.dx+(1-cos_angle)*originToCenter_v.dy};mapOrigin_v.x+=rotComp_v.dx;mapOrigin_v.y+=rotComp_v.dy;currentRotation+=rotation;mgMapTransform.update();mgViewport.update();update_map_BBox();render()};var update_map_BBox=function(){var p1=mgMapTransform.m2v({x:0,y:0});var p2=mgMapTransform.m2v({x:mapBox_m[0],y:0});var p3=mgMapTransform.m2v({x:mapBox_m[0],y:mapBox_m[1]});var p4=mgMapTransform.m2v({x:0,y:mapBox_m[1]});mapBoundingBox_v={xmin_v:Math.min(p1.x,p2.x,p3.x,p4.x),ymin_v:Math.min(p1.y,p2.y,p3.y,p4.y),xmax_v:Math.max(p1.x,p2.x,p3.x,p4.x),ymax_v:Math.max(p1.y,p2.y,p3.y,p4.y)}};var renderPostScale=1;var render=function(){setWebkitTransform([mgMapTransform.getE(),mgMapTransform.getF(),mgMapTransform.getS(),mgMapTransform.getR()],renderPostScale)};var refresh=function(opts){var skipRefresh=mgSupport.env.isChrome===true&&(mgSupport.env.chromeVersion===49||mgSupport.env.chromeVersion>52);skipRefresh=false;var scale=1;var hasOptions=mgJt.notNullNorUndefined(opts);if(skipRefresh!==true||hasHardRefreshedOnce!==true){hasHardRefreshedOnce=true;var w,h;if(hasOptions&&opts.reset===true){w=initialMapBox_m[0];h=initialMapBox_m[1];setWebkitTransform([0,0,1,0],1,w,h);last_refresh_zoom_level=0}else{var computedValues=mgDt.getItemComputedValue(mgMapUi.getMapstackEl(),["width","height"]);w=mgMapTransform.getS()*computedValues.width;h=mgMapTransform.getS()*computedValues.height;if(hasOptions&&opts.targetZoomLevelRefresh){scale=opts.targetW/w;w=opts.targetW;h=opts.targetH}setWebkitTransform([mgMapTransform.getE(),mgMapTransform.getF(),1/scale,mgMapTransform.getR()],1,w,h)}mgMapTransform.setS(1/scale);mapBox_m=[w,h];map2ref=mgMapConfig.get().Ui.refMapWidth/w;if(mgVignette.isEnabled){mgVignette.setRatio2m(mgVignette.getW_v()/w)}mgViewport.update();mgPinManager.updatePins()}PubSub.publish("mobigeo-mapRefreshed")};var setWebkitTransform=function(param,postScale,cssWidth,cssHeight){var force2D=false;if(mgSupport.env.os==="iOS"){if(mgSupport.env.model==="iPad"&&currentZoom>11.5||mgSupport.env.model==="iPhone"&&mgMapConfig.get().Ui.iPhoneZoomLevelMode[currentZoomLevel]==="2D"){force2D=true}}if(mgSupport.env.isCrossWalk===false&&mgSupport.env.os==="Android"&&mgSupport.env.version>=5&&mgSupport.env.version<5.1){if(mgMapConfig.get().Ui.androidZoomLevelMode[currentZoomLevel]==="2D"){force2D=true}}if(typeof postScale==="undefined"){postScale=1}var XX=parseFloat(param[0]);var YY=parseFloat(param[1]);if(isNaN(XX)===true||isNaN(YY)===true){mgLogger.error(module,"Invalid transform parameter",param);return}param[0]=XX.toFixed(5);param[1]=YY.toFixed(5);var newTransform="";if(mgSupport.useCss3d===true&&force2D!==true){newTransform="translate3d("+param[0]+"px,"+param[1]+"px, 0px) scale3d("+param[2]*postScale+","+param[2]*postScale+",1)";if(mgMapUi.getOptions().enableRotation===true&&mgSupport.isDegradeMode===false){newTransform+=" rotate3d(0, 0, 1, "+param[3]+"deg)"}}else{newTransform="translate("+param[0]+"px,"+param[1]+"px) scale("+param[2]*postScale+")";if(mgMapUi.getOptions().enableRotation===true&&mgSupport.isDegradeMode===false){newTransform+=" rotate("+param[3]+"deg)"}}var cssTransform={};cssTransform[mgDt.getPrefixedCssProperty("transform")]=newTransform;if(cssWidth){cssTransform.width=cssWidth+"px"}if(cssHeight){cssTransform.height=cssHeight+"px"}mgDt.applyStyle(mgMapUi.getMapstackEl(),cssTransform)};var seize=function(pointer_x,pointer_y,is_gesture){if(seized===false||is_gesture){seized=true;seizePos_v.x=pointer_x;seizePos_v.y=pointer_y}if((isPinched||isDoubleTapped)&&currentZoomLevel>=mgMapConfig.get().Ui.lowResRefreshZoomThreshold&&mgSupport.env.device_pixel_ratio>=mgMapConfig.get().Ui.lowResRefreshPixelRatioThreshold){var refreshOpts={skipSelectPins:true};targetedZoomLevelRefresh(mgMapConfig.get().Ui.targetlowResZoomLevel,refreshOpts)}};var targetedZoomLevelRefresh=function(targetedZoomLevel,refreshOpts){last_refresh_zoom_level=targetedZoomLevel;var mult=zoomLevel2zoom(targetedZoomLevel);refreshOpts.targetZoomLevelRefresh=true;refreshOpts.targetW=initialMapBox_m[0]*mult;refreshOpts.targetH=initialMapBox_m[1]*mult;refresh(refreshOpts)};var move=function(pointer_x,pointer_y,dragSimu){var delta_v={};if(typeof dragSimu==="undefined"){dragSimu=false}delta_v.dx=pointer_x-(dragSimu?0:seizePos_v.x);delta_v.dy=pointer_y-(dragSimu?0:seizePos_v.y);if(dragSimu===false){seizePos_v.x=pointer_x;seizePos_v.y=pointer_y}translate(delta_v,true)};var zoom=function(targetScale,rotation,center_v,gesture,trackModeIsEnabled){mgLogger.debug(module,"zoom:",targetScale,rotation,center_v,gesture);if(gesture!==mgMapUi.GESTURE_TYPES.CHANGE){mgPositionManager.disableUserPinCssTransition()}if(mgMapUi.getOptions().enableRotation===false||mgSupport.isDegradeMode===true){rotation=0}if(gesture!==mgMapUi.GESTURE_TYPES.END){scale(targetScale,rotation,center_v,gesture)}if(trackModeIsEnabled!==true&&(gesture===mgMapUi.GESTURE_TYPES.NONE||gesture===mgMapUi.GESTURE_TYPES.END)){var refreshOpts={gesture:gesture,skipSelectPins:true};last_refresh_zoom_level=currentZoomLevel;if(currentZoomLevel>mgMapConfig.get().Ui.maxRefreshZoomLevel){targetedZoomLevelRefresh(mgMapConfig.get().Ui.maxRefreshZoomLevel,refreshOpts)}else{refresh(refreshOpts)}}if(gesture!==mgMapUi.GESTURE_TYPES.CHANGE||trackModeIsEnabled===true){if(mgMapConfig.get().Ui.options.enableReverseLabels===true){selectLabelsOrientation()}}if(gesture!==mgMapUi.GESTURE_TYPES.CHANGE){mgPositionManager.enableUserPinCssTransition();var zoneHasChanged=selectZone();if(!zoneHasChanged){mgPinManager.selectPinsOfDefinedTypes()}}mgPinManager.updatePins(gesture!==mgMapUi.GESTURE_TYPES.END)};var jsTransition=function(){var start,startTime,duration,deltaX,deltaY;var perform=function(dest){start=mgViewport.ctr_v;var dist=mgUtils.dist(start,dest);duration=Math.max(800,dist/2);deltaX=start.x-dest.x;deltaY=start.y-dest.y;startTime=(new Date).getTime();mgPinManager.enableWillChangeProperty();mgMapUi.enableWillChangeProperty();mgVignette.enableWillChangeProperty();save();window.requestAnimationFrame(_raf)};var _raf=function(){if(!start){return}var elapsedTime=(new Date).getTime()-startTime,progressRatio=elapsedTime*100/duration/100;if(progressRatio>1){stop();return}restore();move(progressRatio*deltaX,progressRatio*deltaY);window.requestAnimationFrame(_raf)};var stop=function(){mgPinManager.disableWillChangeProperty();mgMapUi.disableWillChangeProperty();mgVignette.disableWillChangeProperty();reset();mgMap.zoom(null,null,null,mgMapUi.GESTURE_TYPES.END);mgMapTransform.update();mgViewport.update();update_map_BBox()};var reset=function(){start=null;startTime=null;duration=null;deltaX=null;deltaY=null};return{perform:perform,stop:stop}}();var focusOnUserPosition=function(){mgLogger.debug(module,"focusOnUserPosition");if(mgPositionManager.getUserPosition().displayed===false||mgJt.isEmpty(mgPositionManager.getUserPosition().xy_m)===true){mgLogger.error(module,"Cannot focus on current user position because it is not displayed or has no coordinate");return}focusOnPosition(mgPositionManager.getUserPosition());if(mgFeatures.isRouteEnabled()){mgItineraryUi.selectStepMatchingZoneAndFloor(mgPositionManager.getUserPosition().zone,mgPositionManager.getUserPosition().floor,mgPositionManager.getUserPosition().area)}};var focusOnPosition=function(_pos){if(mgJt.isEmpty(_pos)){mgLogger.error(module,"Cannot focus on position(s) ",_pos);return}var pos;if(Array.isArray(_pos)){if(_pos.length===1){pos=_pos[0]}else{focusOnMultiplePositions(_pos);return}}else{pos=_pos}var zoneId,isRootZone=false,course=null;if(pos.type===mgPositionManager.TYPES.USER_POS){course=0}else if(typeof pos.course==="number"){course=pos.course*-1}if(typeof pos.zone==="number"){zoneId=pos.zone;isRootZone=zoneId===mgZoneManager.getRootZoneId()}var minimalZoom=zoomLevel2zoom(mgMapConfig.get().Ui.zoomLevelForFocusOnPosition),zoom;if(isRootZone){zoom=mapMinZoom}else if(minimalZoom>currentZoom){zoom=minimalZoom}else{zoom=currentZoom}reset(pos.xy_m,zoom,course);selectZone(zoneId);if(typeof zoneId==="number"&&typeof pos.floor!=="undefined"){var zone=mgZoneManager.getZone(zoneId);if(!zone){mgLogger.error(module,"Cannot set current floor because cannot find zone "+zoneId)}else{zone.setCurrentFloor(pos.floor)}}};var focusOnMultiplePositions=function(pos){if(typeof pos==="object"&&pos!==null&&typeof pos.xy_m==="object"){focusOnPosition(pos);return}if(Array.isArray(pos)===false){mgLogger.error(module,"Cannot focus on positions, bad argument: ",pos)}if(pos.length===1){focusOnPosition(pos[0]);return}var zones=[],floors=[];pos.forEach(function(itemPos){if(typeof itemPos.zone!=="undefined"&&zones.indexOf(itemPos.zone)===-1){zones.push(itemPos.zone)}if(typeof itemPos.floor!=="undefined"&&floors.indexOf(itemPos.floor)===-1){floors.push(itemPos.floor)}});if(zones.length>1){focusOnRootZone();return}else{var position;if(floors.length===1){position=pos[0]}else{var userPos=mgPositionManager.getUserPosition();if(userPos&&userPos.zone===zones[0]&&floors.indexOf(userPos.floor)!==-1){position=pos.filter(function(itemPos){return itemPos.floor===userPos.floor})[0]}else{position=pos[0]}}zoomOnZone(position.zone,position.floor);return}};var focusOnRootZone=function(){zoomOnZone(mgZoneManager.getRootZoneId());if(mgFeatures.isLocationEnabled()){mgPositionTracking.disable()}};var zoomOnZone=function(zoneId,floor,doNotResetRotation){zoneId=parseInt(zoneId,10);var zone=mgZoneManager.getZone(zoneId);if(mgJt.isEmpty(zone)===true){mgLogger.error(module,"Could not zoom because this zone is invalid",zoneId);return false}if(mgJt.isEmpty(zone.getCenter())===true){mgLogger.error(module,"Could not zoom because this zone has no center",zoneId);return false}if(mgPermissions.canSeeZone(zoneId)!==true){mgPermissions.handleZoneAccessRestricted(zoneId);return}if(mgJt.isEmpty(floor)===false){if(zone.hasFloor(floor)===false){mgLogger.error(module,"Could not zoom because this zone does not have this floor",zoneId,floor);return false}if(mgPermissions.canSeeFloor(zoneId,floor)!==true){mgPermissions.handleFloorAccessRestricted(zoneId,floor);return}zone.setCurrentFloor(floor)}var tZoom=calculateZoomForZone(zone);var tCenter;if(zone.hasCustomCenter()===true){tCenter=zone.getCustomCenter()}else{tCenter={x:zone.getCenter().x_m,y:zone.getCenter().y_m}}reset(tCenter,tZoom,doNotResetRotation===true?currentRotation:0);mgZoneManager.setCurrentZone(zoneId);return true};var calculateZoomForZone=function(zone){if(mgJt.isEmpty(zone)===true){mgLogger.error(module,"invalid zone argument",zone);return}var mapConfUi=mgMapConfig.get().Ui,zoomRatio=zone.hasCustomZoomRatio()===true?zone.getCustomZoomRatio():mapConfUi.zoomRatio,tW=Math.max(zone.getWidth(),mapConfUi.refMapWidth/mapConfUi.zoomMinZoneToMapRatio),tH=Math.max(zone.getHeight(),mapConfUi.refMapHeight/mapConfUi.zoomMinZoneToMapRatio),tW0=mgZoneManager.getZone(0).getWidth(),tH0=mgZoneManager.getZone(0).getHeight(),minimalZoom=1.05*(zone.isRootZone()?mapMinZoom:zoomLevel2zoom(mapConfUi.minimumBuildingZoomLevel));if(tW0>tH0){return Math.max(zoomRatio*mapMinZoom*Math.max(mapConfUi.refMapWidth/tW,mapConfUi.refMapHeight/tH),minimalZoom)}else{return Math.max(zoomRatio*mapMinZoom*Math.min(mapConfUi.refMapWidth/tW,mapConfUi.refMapHeight/tH),minimalZoom)}};var selectZone=function(zoneId){if(seized===false){if(typeof zoneId!=="number"){if(currentZoomLevel<=mgMapConfig.get().Ui.minimumBuildingZoomLevel){zoneId=mgZoneManager.getRootZoneId()}else if(mgPositionTracking.isEnabled()===true&&mgPositionManager.getUserPosition().displayed===true){zoneId=mgPositionManager.getUserPosition().zone}else{zoneId=mgZoneManager.getZoneFromXY(mgViewport.ctr_r)}}if(mgPermissions.canSeeZone(zoneId)!==true){mgPermissions.handleZoneAccessRestricted(zoneId);return false}var previousZoneId=mgZoneManager.getCurrentZone()?mgZoneManager.getCurrentZone().getId():null;mgZoneManager.setCurrentZone(zoneId);mgZoneManager.getZone(zoneId).showHideLabels(currentZoomLevel);return previousZoneId!==zoneId}return false};var selectLabelsOrientation=function(){var reverse=false,cond=false,el=null,el_r=null;if(Math.cos(currentRotation*2*Math.PI/360)>=0){reverse=false}else{reverse=true}for(var zId in labelsLayers){if(labelsLayers.hasOwnProperty(zId)){for(var l=0;l<labelsLayers[zId].length;l++){el=labelsLayers[zId][l].normal;el_r=labelsLayers[zId][l].reverse;if(el!==null){cond=reverse&&el_r!==null;el.style.opacity=cond===true?0:1}if(el_r!==null){cond=!reverse&&el!==null;el_r.style.opacity=cond===true?0:1}}}}};return{resetVars:resetVars,init:init,save:save,restore:restore,reset:reset,move:move,translate:translate,seize:seize,zoom:zoom,zoomOnZone:zoomOnZone,focusOnUserPosition:focusOnUserPosition,focusOnPosition:focusOnPosition,focusOnRootZone:focusOnRootZone,selectZone:selectZone,storeInitialZoom:storeInitialZoom,jsTransition:jsTransition,get initialZoom(){return initialZoom},getCurrentZoom:function(){return currentZoom},getSeizePos_v:function(){return seizePos_v},getH_v:function(){return h_v},getMapOrigin_v:function(){return mapOrigin_v},getTouchStarted:function(){return touchStarted},setTouchStarted:function(value){touchStarted=value},setPinched:function(value){isPinched=value},setDoubleTapped:function(value){isDoubleTapped=value},isPinched:function(){return isPinched===true},isDoubleTapped:function(){return isDoubleTapped===true},getCurrentRotation:function(){return currentRotation},getNormalisedCurrentRotation:function(){var result=currentRotation%360;if(result>=0){return result}else{return 360+result}},isSeized:function(){return seized===true},setSeized:function(value){seized=value},getInitialMapBox_m:function(){return initialMapBox_m},setInitialMapBox_m:function(value){initialMapBox_m=value},getMapBox_m:function(){return mapBox_m},setMapBox_m:function(value){mapBox_m=value},getMap2ref:function(){return map2ref},setMap2ref:function(value){map2ref=value}}}();var mgInteractionHelper=function(){"use strict";var dist=function(events){if(events.length<2){return 0}var prefix="client";if(typeof events[0].clientX!=="number"){prefix="page"}var coord1={x:events[0][prefix+"X"],y:events[0][prefix+"Y"]},coord2={x:events[1][prefix+"X"],y:events[1][prefix+"Y"]};return mgUtils.dist(coord1,coord2)};var getCenter=function(events){var fingerNumber,totalX=0,totalY=0,centerPageX=0,centerPageY=0;for(fingerNumber=0;fingerNumber<events.length;fingerNumber++){totalX+=events[fingerNumber].pageX;totalY+=events[fingerNumber].pageY}centerPageX=totalX/fingerNumber;centerPageY=totalY/fingerNumber;return{x_v:centerPageX-mgMapUi.mapContainerOffsets.pageX,y_v:centerPageY-mgMapUi.mapContainerOffsets.pageY}};var getAngle=function(events){var angle=Math.atan((events[1].pageY-events[0].pageY)/(events[1].pageX-events[0].pageX))*180/Math.PI;if(events[0].pageX>events[1].pageX){return angle+270}else{return angle+90}};return{dist:dist,getCenter:getCenter,getAngle:getAngle}}();var mgPinchHandler=function(){var pinchParams,lastEventData,shouldInhibitRotation,rotationByUserLocked,rotationCompensation,rafHasBeenTriggered;var reset=function(){pinchParams={scale0:1};lastEventData=null;rotationByUserLocked=true;shouldInhibitRotation=false;rafHasBeenTriggered=false;RotationDeadAngle.reset()};var getNormalisedAngle=function(angle){var result=angle%360;if(result>=0){return result}else{return 360+result}};var RotationDeadAngle=function(){var _value;var get=function(){if(!_value){_value=mgMapConfig.get().Ui.rotationDeadAngle;if(typeof _value!=="number"||_value<0||_value>90){_value=30}}return _value};var reset=function(){_value=null};return{get:get,reset:reset}}();var gestureStartHandler=function(e,distance,angle,center){if(mgDraggablePins.isDraggable(e.target)){return}e.preventDefault();mgLongPressHandler.clear();pinchParams.d0=distance;pinchParams.refRotation=angle;pinchParams.rotationCompensation=null;updatePinchParamCenter(center);mgPinManager.enableWillChangeProperty();mgMapUi.enableWillChangeProperty();mgVignette.enableWillChangeProperty();mgMap.setPinched(true);mgMap.seize(pinchParams.center.x_v,pinchParams.center.y_v,true);mgMap.save();if(mgJt.isEmpty(mgPositionManager.getUserPosition().pin)===false){mgPositionManager.disableUserPinCssTransition()}shouldInhibitRotation=mgMap.getCurrentRotation()===0};var gestureChangeHandler=function(e,distance,angle,center){e.preventDefault();lastEventData={dist:distance,angle:angle,center:center};mgMap.setSeized(false);if(mgMapConfig.get().Ui.useRequestAnimationFrame===true){if(rafHasBeenTriggered!==true){window.requestAnimationFrame(updateMapDuringPinch);rafHasBeenTriggered=true}}else{updateMapDuringPinch()}};var updatePinchParams=function(){pinchParams.scaleFactor=lastEventData.dist/pinchParams.d0;pinchParams.scale=pinchParams.scale0*pinchParams.scaleFactor;pinchParams.rotation=lastEventData.angle-pinchParams.refRotation;var cwLimitRotationAngle=RotationDeadAngle.get(),ccwLimitRotationAngle=360-RotationDeadAngle.get(),currentMapRotationAngle=mgMap.getNormalisedCurrentRotation(),newMapRotationCandidateAngle=getNormalisedAngle(currentMapRotationAngle+pinchParams.rotation);if(shouldInhibitRotation){if(rotationByUserLocked===true){if(newMapRotationCandidateAngle>cwLimitRotationAngle&&newMapRotationCandidateAngle<180){rotationByUserLocked=false;pinchParams.rotationCompensation=-RotationDeadAngle.get();pinchParams.rotation+=pinchParams.rotationCompensation}else if(newMapRotationCandidateAngle<ccwLimitRotationAngle&&newMapRotationCandidateAngle>180){rotationByUserLocked=false;pinchParams.rotationCompensation=RotationDeadAngle.get();pinchParams.rotation+=pinchParams.rotationCompensation}else{pinchParams.rotation=0}}else{pinchParams.rotation+=pinchParams.rotationCompensation}}updatePinchParamCenter(lastEventData.center)};var updatePinchParamCenter=function(center){pinchParams.center=JSON.parse(JSON.stringify(center))};var updateMapDuringPinch=function(){if(mgMap.isPinched()===true){updatePinchParams();mgMap.restore();mgMap.move(pinchParams.center.x_v,pinchParams.center.y_v);mgMap.zoom(pinchParams.scale,pinchParams.rotation,{x:pinchParams.center.x_v,y:pinchParams.center.y_v},mgMapUi.GESTURE_TYPES.CHANGE);if(mgMapConfig.get().Ui.useRequestAnimationFrame===true){window.requestAnimationFrame(updateMapDuringPinch)}}};var gestureEndHandler=function(e){e.preventDefault();mgPinManager.disableWillChangeProperty();mgVignette.disableWillChangeProperty();mgMap.setSeized(false);mgMap.setPinched(false);mgMap.setDoubleTapped(false);mgMap.zoom(null,null,null,mgMapUi.GESTURE_TYPES.END);mgPositionTracking.handleMapMoved();rafHasBeenTriggered=false;rotationByUserLocked=true};reset();return{reset:reset,gestureStartHandler:gestureStartHandler,gestureChangeHandler:gestureChangeHandler,gestureEndHandler:gestureEndHandler}}();var mgPointerEventsHelper=function(){"use strict";var cache=[],enabled=false;var reset=function(){enabled=false;emptyCache()};var emptyCache=function(){cache=[]};var setEnabled=function(value){enabled=!!value;mgLogger.debug(mgLogger.modules.Map,"now "+(value?"enabled":"disabled"))};var enableAfterDelay=function(){window.setTimeout(setEnabled,400,true)};PubSub.subscribe("mobigeo-app-status-update",function(eventName,status){if(status===mgNativeInterface.STATUSES.background){setEnabled(false)}else{if(cache.length>0){mgMapUi.stopInteraction(cache[cache.length-1])}reset();enableAfterDelay()}});var add=function(ev){if(!enabled||mgDraggablePins.isDraggable(ev.target)){return}cache.push(ev);if(cache.length===1){mgMapUi.seizeHandler(ev)}else if(cache.length>1){mgPinchHandler.gestureStartHandler(ev,mgInteractionHelper.dist(cache),mgInteractionHelper.getAngle(cache),mgInteractionHelper.getCenter(cache))}};var move=function(ev){if(!enabled||!mgMap.isPinched()&&!mgMap.isSeized()){return}for(var i=0;i<cache.length;i++){if(ev.pointerId===cache[i].pointerId){cache[i]=ev;break}}if(cache.length===1){mgMapUi.moveHandler(ev)}else if(cache.length>1){mgPinchHandler.gestureChangeHandler(ev,mgInteractionHelper.dist(cache),mgInteractionHelper.getAngle(cache),mgInteractionHelper.getCenter(cache))}};var remove=function(ev){if(!enabled){return}var found=false;for(var i=0;i<cache.length&&!found;i++){if(cache[i].pointerId===ev.pointerId){cache.splice(i,1);found=true}}if(!found){return}if(cache.length<2){mgMapUi.stopInteraction(ev);emptyCache()}};return{reset:reset,setEnabled:setEnabled,enableAfterDelay:enableAfterDelay,add:add,move:move,remove:remove,get cache(){return cache}}}();var mgTouchEventsHelper=function(){"use strict";function start(e){if(!e.touches||e.touches.length===1){mgMapUi.seizeHandler(e)}else if(e.touches.length>1){mgPinchHandler.gestureStartHandler(e,mgInteractionHelper.dist(e.touches),mgInteractionHelper.getAngle(e.touches),mgInteractionHelper.getCenter(e.touches))}}function move(e){if(!e.touches||e.touches.length===1){mgMapUi.moveHandler(e)}else if(e.touches.length>1){mgPinchHandler.gestureChangeHandler(e,mgInteractionHelper.dist(e.touches),mgInteractionHelper.getAngle(e.touches),mgInteractionHelper.getCenter(e.touches))}}function end(e){if(mgMap.isPinched()===true){mgPinchHandler.gestureEndHandler(e)}else if(mgMap.isSeized()===true){mgMapUi.releaseHandler(e)}}return{start:start,move:move,end:end}}();var mgMapDoubleTap=function(){var DOUBLE_TAP_INTERVAL=250,d0=30;var lastTapTime,enabled,hasZoomed,sourceEvent;var reset=function(){enabled=false;hasZoomed=false;sourceEvent=null};reset();var zoom=function(event){if(hasZoomed!==true){hasZoomed=true;mgPinManager.enableWillChangeProperty();mgMapUi.enableWillChangeProperty();mgVignette.enableWillChangeProperty()}var prefix=typeof sourceEvent.clientY==="number"?"client":"page",dist=-(sourceEvent[prefix+"Y"]-event[prefix+"Y"]),scale=Math.pow(1.5,dist/d0);mgMap.restore();mgMap.zoom(scale,0,{x:sourceEvent[prefix+"X"]-mgMapUi.mapContainerOffsets.pageX,y:sourceEvent[prefix+"Y"]-mgMapUi.mapContainerOffsets.pageY},mgMapUi.GESTURE_TYPES.CHANGE)};var endZoom=function(){mgMap.setDoubleTapped(false);mgPinManager.disableWillChangeProperty();mgVignette.disableWillChangeProperty();mgMap.zoom(null,null,null,mgMapUi.GESTURE_TYPES.END);mgPositionTracking.handleMapMoved()};return{detect:function(event){if(typeof lastTapTime==="number"){enabled=(new Date).getTime()-DOUBLE_TAP_INTERVAL<lastTapTime;if(enabled){mgMap.setDoubleTapped(true)}sourceEvent=event}lastTapTime=(new Date).getTime()},isEnabled:function(){return enabled===true},hasZoomed:function(){return hasZoomed===true},reset:reset,zoom:zoom,endZoom:endZoom}}();var mgLongPressHandler=function(){var timeout,lastTimeStamp;var getDuration=function(){var DEFAULT_VALUE=1e3;return function(){return mgMapConfig.get().Ui.longPressDuration||DEFAULT_VALUE}}();function start(event){timeout=window.setTimeout(perform,getDuration(),event)}function perform(event){lastTimeStamp=(new Date).getTime();mgPositionManager.showTempSpot(event)}function clear(){window.clearTimeout(timeout);timeout=null}return{start:start,perform:perform,clear:clear,get lastTimeStamp(){return lastTimeStamp}}}();var mgMapUi=function(){"use strict";var module=mgLogger.modules.Map,clientContainerEl,mapContainerEl,mapDisplayEl,mapstackEl,bottomBarEl,loaderEl,mapTitleEl,legendBtnEl,ready,options,containerClass="mobigeo-container",clientContainerOffsetTop,mapContainerOffsets,staticZoomStep,isGesture,MIN_CONTAINER_SIZE=175,GESTURE_TYPES={NONE:0,CHANGE:1,END:2},isReadyForClick,readyForClickTimeout,seizeStartTimeStamp;var reset=function(){mgLogger.debug(module,"[reset] map-ui");clientContainerEl=null;mapContainerEl=null;loaderEl=null;legendBtnEl=null;mapTitleEl=null;mapDisplayEl=null;mapstackEl=null;bottomBarEl=null;ready=false;staticZoomStep=2;isGesture=false;mgPinchHandler.reset();mgPointerEventsHelper.reset();mgMapUiStyle.reset();mgScrollHandler.reset()};var isRotationEnabled=function(){return options.enableRotation};var setClientContainerEl=function(node){if(mgJt.isEmpty(node)===true||mgDt.isDOMElement(node)===false){mgLogger.error(module,"Error while setting main node",node);return}clientContainerEl=node};var initialize=function(event,data){mgLogger.debug(module,"initialize");var loaderTemplateData={containerClass:containerClass,isIE:mgSupport.env.isIE,isEdge:mgSupport.env.isEdge,isSafari:mgSupport.env.isSafari,loadingText:mgUpdateMain.isUpdateFeatureEnabled()?mgI18N.t("loadingLookingForUpdate","misc"):mgI18N.t("loadingData","misc")};clientContainerEl.innerHTML=mgTemplates.skeleton.render(loaderTemplateData);mapContainerEl=clientContainerEl.querySelector("."+containerClass);mapDisplayEl=mapContainerEl.querySelector("#map-display");loaderEl=mapContainerEl.querySelector(".mobigeo-loader");storeContainerOffsets()};var updateLoaderText=function(text){loaderEl.querySelector(".mobigeo-loader-content").innerHTML=text};var render=function(){var hasZoomButtons=mgSupport.env.os!=="iOS"&&mgSupport.env.os!=="Android";mapDisplayEl.innerHTML=mgTemplates.map.render({_labels:{itiArrowLeftTitle:mgI18N.t("previousStep","itinerary"),itiReloadTitle:mgI18N.t("reload","itinerary"),itiClearTitle:mgI18N.t("clear","itinerary"),itiArrowRightTitle:mgI18N.t("nextStep","itinerary"),itiRoutingsStepsTitle:mgI18N.t("routingSteps","itinerary"),buttonClearTitle:mgI18N.t("clear","misc"),buttonClearAndResetZoomTitle:mgI18N.t("clearAndResetZoom","misc"),buttonResetZoomTitle:mgI18N.t("resetZoom","misc"),buttonPositionTitle:mgI18N.t("_name_","mapPosition"),buttonRouteTitle:mgI18N.t("_name_","itinerary"),buttonGeoGroupTitle:mgI18N.t("_name_","geoGroup"),buttonAroundMeTitle:mgI18N.t("_name_","aroundMe"),buttonSearchTitle:mgI18N.t("search","misc"),buttonServicesTitle:mgI18N.t("services","data"),buttonLegendTitle:mgI18N.t("_name_","legend")},buttons:[],hasMapTitle:options.showMapTitle,hasThumbnail:options.showThumbnail!==false,hasButtonBack:options.showBackButton,hasButtonHome:options.showHomeButton,hasButtonClear:options.showClearButton,hasButtonClearAndResetZoom:options.showClearAndResetZoomButton,hasButtonResetZoom:options.showResetZoomButton,hasButtonLegend:options.showLegendButton,hasButtonSearch:options.showSearchButton,hasButtonServices:options.showServicesButton,hasButtonZoom:hasZoomButtons,hasButtonRoute:mgFeatures.isRouteEnabled()&&options.showRouteButton,hasButtonAroundMe:mgFeatures.isAroundMeEnabled()&&options.showAroundMeButton,hasButtonGeoGroup:mgFeatures.isGeoGroupEnabled()&&options.showGeoGroupButton,hasButtonGeoPush:mgFeatures.isGeoPushEnabled()&&options.showGeoPushButton,hasButtonPosition:mgFeatures.isLocationEnabled()&&(mgNativeInterface.isNative===true||window.MOBIGEODEV),hasButtonReloadIti:mgFeatures.isRouteEnabled()&&mgFeatures.isLocationEnabled()&&(mgNativeInterface.isNative===true||window.MOBIGEODEV)&&options.showRouteReloadButton===true,hasWatermark:options.showWatermark,mobigeoVersion:Config.version,currentYear:(new Date).getFullYear(),zones:mgZoneManager.contentData});storeContainerOffsets();mapstackEl=mapContainerEl.querySelector("#mapstack");bottomBarEl=mapContainerEl.querySelector(".bottom-bar");mapTitleEl=mapContainerEl.querySelector(".map-title");legendBtnEl=mapContainerEl.querySelector(".btn-legend");mgVignette.init(options.showThumbnail);mgSynopticView.init();mgMapUiStyle.initCssSheet();mgMapUiStyle.setCssRules(options,mapTitleEl);mgPage.preventScrollOnThis(mapDisplayEl);mgPage.preventScrollOnThis(bottomBarEl);PubSub.publish("mobigeo-mapUiReady");ready=true};var storeContainerOffsets=function(){if(mapContainerEl){var eLPos=mgDt.getElPagePosition(mapContainerEl);var mapOffsetWidth=mapContainerEl.offsetWidth,mapOffsetHeight=mapContainerEl.offsetHeight;if(!mapOffsetWidth||mapOffsetWidth<MIN_CONTAINER_SIZE||!mapOffsetHeight||mapOffsetHeight<MIN_CONTAINER_SIZE){return}mapContainerOffsets={width:mapOffsetWidth,height:mapOffsetHeight,pageX:eLPos.x,pageY:eLPos.y};mgLogger.info(module,"Refreshed map container offsets",mapContainerOffsets)}};var readyToBeActivated=function(){_initLinks()};var mapBoxReady=function(){var initialFocusZoneId=mgMapConfig.get().Ui.initialFocusZoneId;var initialFloor=null;if(initialFocusZoneId!==undefined&&mgZoneManager.getZone(initialFocusZoneId)!==undefined){initialFloor=mgZoneManager.getZone(initialFocusZoneId).getMainFloor()}else{initialFocusZoneId=mgZoneManager.getRootZoneId();initialFloor=mgZoneManager.getRootZone().getMainFloor()}mgViewport.init();mgVignette.initDimensions();mgMap.init();mgMap.zoomOnZone(initialFocusZoneId,initialFloor);mgMap.storeInitialZoom();mgViewport.update();activate();PubSub.publish("mobigeo-mapsDisplayed")};var setOptions=function(apiOptions){options=mgMapConfig.get().Ui.options;if(mgJt.isEmpty(apiOptions)!==true){for(var option in apiOptions){if(apiOptions.hasOwnProperty(option)!==true){continue}if(typeof options[option]!=="undefined"){var apiOptionType=typeof apiOptions[option],mapConfigOptionType=typeof options[option];if(apiOptionType!==mapConfigOptionType){mgLogger.error(module,"`"+mapConfigOptionType+"` is expected for option `"+option+"` but got `"+apiOptionType+"`")}}options[option]=apiOptions[option]}}PubSub.publish("mobigeo-uiOptionsParsed")};var resize=function(){if(mgJt.isEmpty(clientContainerEl)===false&&isContainerADOMElement(clientContainerEl)===true&&isContainerSizeEnough(clientContainerEl)===true&&mgJt.isEmpty(mapContainerOffsets)===false){var prevOffset=mapContainerOffsets;storeContainerOffsets();mgViewport.init();mgViewport.update();mgMap.init();mgSynopticView.update();mgMap.translate({dx:Math.floor((mapContainerOffsets.width-prevOffset.width)/2),dy:Math.floor((mapContainerOffsets.height-prevOffset.height)/2)});window.setTimeout(mgZoneManager.handleResize,30);window.setTimeout(mgModal.resize,150);mgEditPanel.resize();if(mgFeatures.isRouteEnabled()){mgItineraryUi.resize()}return true}return false};var setTitle=function(title){if(mgMapConfig.get().Ui.options.showMapTitle===false||!mapTitleEl){return}mapTitleEl.children[0].innerHTML=title};var _initLinks=function(){var onClickLink=function(event){event.preventDefault();var target=event.target;mgLogger.debug(module,"Click on link",target.classList);mgDt.toggleHoverClass(target);if(target.classList.contains("btn-floornumber")){var floor=target.dataset.floor;mgZoneManager.getCurrentZone().setCurrentFloor(floor);if(module.returnClicks!==true&&mgFeatures.isLocationEnabled()){mgPositionTracking.disable({showMessage:true})}}else if(target.classList.contains("btn-zoomout")===true){zoomout()}else if(target.classList.contains("btn-zoomin")===true){zoomin()}else if(target.classList.contains("btn-clearAndResetZoom")===true){_MobiGeoMap.clearAndResetZoom()}else if(target.classList.contains("btn-resetZoom")===true){_MobiGeoMap.resetZoom()}else if(target.classList.contains("btn-clear")===true){_MobiGeoMap.clear()}else if(target.classList.contains("btn-home")===true){MobiGeo.Map.publish("tapButtonHome")}else if(target.classList.contains("btn-back")===true){MobiGeo.Map.publish("tapButtonBack")}else if(target.classList.contains("btn-legend")===true){mgLegend.show()}else if(target.classList.contains("btn-search")===true){MobiGeo.Map.publish("tapButtonSearch")}else if(target.classList.contains("btn-services")===true){MobiGeo.Map.publish("tapButtonServices")}else if(target.classList.contains("btn-position")===true){if(mgJt.isEmpty(mgLocation)===true){mgLogger.error(module,"mgLocation should exist.")}else{mgLocation.onMapPositionButtonClick()}}else if(target.classList.contains("btn-route")===true){MobiGeo.Map.publish("tapButtonItinerary")}else if(target.classList.contains("btn-floornumber")===true){var floorBis=target.querySelector("[data-action=setCurrentFloor]").textContent;mgZoneManager.getCurrentZone().setCurrentFloor(floorBis)}else if(target.classList.contains("btn-geogroup")===true){if(mgJt.isEmpty(mgGroup)===true){mgLogger.error(module,"mgGroup should exist.")}else{mgGroup.onMapButtonClick()}}else if(target.classList.contains("btn-geopush")===true){mgNotificationPerformer.displayMobigeo()}else if(target.classList.contains("btn-aroundme")===true){MobiGeo.Map.publish("tapButtonAroundMe");if(window.MOBIGEODEV===true){mgAroundMeUi.show()}}else{mgLogger.error(module,"Could not find action for this button",target,target.classList)}};var buttonLinks=mapDisplayEl.querySelectorAll(".mg-button");for(var i=0;i<buttonLinks.length;i++){mgDt.addTapEvent(buttonLinks[i],onClickLink)}mgVignette.initLinks()};var _zoom=function(value){mgMap.zoom(value,0,mgViewport.ctr_v,GESTURE_TYPES.NONE);mgPositionTracking.handleMapMoved(true);mgMap.selectZone();mgPinManager.selectPinsOfDefinedTypes()};var zoomin=function(){_zoom(mgMapConfig.get().Ui.staticZoomStep||staticZoomStep)};var zoomout=function(){_zoom(1/(mgMapConfig.get().Ui.staticZoomStep||staticZoomStep))};var seizeHandler=function(event){if(mgDraggablePins.isDraggable(event.target)){return}seizeStartTimeStamp=(new Date).getTime();event.preventDefault();event=event.originalEvent?event.originalEvent:event;mgLongPressHandler.start(event);if(mgMapConfig.get().Ui.allowDoubleTapZoom===true){mgMapDoubleTap.detect(event)}if(mgSupport.touch===false){mapstackEl.addEventListener("mouseleave",releaseHandler)}if(typeof event.touches==="object"&&event.touches.length>1){isGesture=true}if(typeof event.touches!=="undefined"){event=event.touches[0]}mgMap.save();mgMap.seize(event.pageX,event.pageY,false);mgMap.setTouchStarted(true);if(readyForClickTimeout){window.clearTimeout(readyForClickTimeout)}};var moveHandler=function(){var hold=false,lastEvent;var handler=function(event){if(mgDraggablePins.isDraggable(event.target)){return}event.preventDefault();if(hold===true){return}hold=true;lastEvent=event.originalEvent?event.originalEvent:event;window.requestAnimationFrame(_handler)};var _handler=function(){hold=false;if(mgMapDoubleTap.isEnabled()){mgMapDoubleTap.zoom(lastEvent);return}else{mgMapDoubleTap.reset()}if(typeof lastEvent.touches!=="undefined"){lastEvent=lastEvent.touches[0]}if(typeof lastEvent.isPrimary!=="undefined"&&lastEvent.isPrimary===false){return}if(typeof mgMap.getTouchStarted()==="undefined"||mgMap.getTouchStarted()===false){return}if(mgMap.getSeizePos_v().x===lastEvent.pageX&&mgMap.getSeizePos_v().y===lastEvent.pageY){return}var deltaX=Math.abs(lastEvent.pageX-mgMap.getSeizePos_v().x),deltaY=Math.abs(lastEvent.pageY-mgMap.getSeizePos_v().y);if(mgSupport.env.os==="Android"&&isReadyForClick===true){if(deltaX<mgMapConfig.get().Ui.androidNonTranslatePixels&&deltaY<mgMapConfig.get().Ui.androidNonTranslatePixels){return}}mgLongPressHandler.clear();isReadyForClick=false;if(mgMap.isSeized()===true){if(!mgMap.isPinched()){mgMap.move(lastEvent.pageX,lastEvent.pageY)}}};return handler}();var releaseHandler=function(event){event.preventDefault();event=event.originalEvent?event.originalEvent:event;if(mgMapDoubleTap.isEnabled()){if(mgMapDoubleTap.hasZoomed()!==true){zoomin()}else{mgMapDoubleTap.endZoom()}}mgMapDoubleTap.reset();if(mgSupport.touch===false){mapstackEl.removeEventListener("mouseleave",releaseHandler)}mgMap.setSeized(false);mgVignette.setSeized(false);mgMap.setTouchStarted(false);if(typeof event.touches==="object"&&event.touches.length===0){if(isGesture===true){isGesture=false;isReadyForClick=false}}if(isReadyForClick===false){if(readyForClickTimeout){window.clearTimeout(readyForClickTimeout)}readyForClickTimeout=window.setTimeout(function(){isReadyForClick=true},400);mgMap.selectZone();if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}mgPositionTracking.handleMapMoved()}else{if(event.target.id==="mapsvg"){}else if(isGesture===true){}else if(!mgLongPressHandler.lastTimeStamp||mgLongPressHandler.lastTimeStamp<seizeStartTimeStamp){onClickOnMap(event)}}mgLongPressHandler.clear()};var stopInteraction=function(ev){if(mgMap.isPinched()===true){mgPinchHandler.gestureEndHandler(ev)}else if(mgMap.isSeized()===true){releaseHandler(ev)}};var activate=function(){window.addWheelListener(mapstackEl,mgScrollHandler.handler);mapstackEl.addEventListener("contextmenu",function(event){event.preventDefault();mgLongPressHandler.perform(event)});if(mgSupport.touch!==true){mapstackEl.addEventListener("mousedown",seizeHandler);mapstackEl.addEventListener("mousemove",moveHandler);mapstackEl.addEventListener("mouseup",releaseHandler)}else if(mgSupport.isPointerSupported){mapstackEl.addEventListener("pointerdown",mgPointerEventsHelper.add,false);mapstackEl.addEventListener("pointermove",mgPointerEventsHelper.move,false);mapstackEl.addEventListener("pointerup",mgPointerEventsHelper.remove,false);mapstackEl.addEventListener("pointerleave",mgPointerEventsHelper.remove,false)}else{mapstackEl.addEventListener(mgSupport.interaction.start,mgTouchEventsHelper.start);mapstackEl.addEventListener(mgSupport.interaction.move,mgTouchEventsHelper.move);mapstackEl.addEventListener(mgSupport.interaction.end,mgTouchEventsHelper.end)}};var deactivate=function(){if(mgSupport.touch!==true){mapstackEl.removeEventListener("mousedown",seizeHandler);mapstackEl.removeEventListener("mouseup",releaseHandler);mapstackEl.removeEventListener("mousemove",moveHandler)}else{mapstackEl.removeEventListener(mgSupport.interaction.start,seizeHandler);mapstackEl.removeEventListener(mgSupport.interaction.end,releaseHandler);mapstackEl.removeEventListener(mgSupport.interaction.move,moveHandler)}};var WillChangeSwitcher=function(){var enable=function(){if(mgMapConfig.get().Ui.useWillChange===true){mgDt.applyStyle(mapstackEl,{willChange:"transform"})}};var disable=function(){if(mgMapConfig.get().Ui.useWillChange===true){window.requestAnimationFrame(_disable)}};var _disable=function(){mgDt.applyStyle(mapstackEl,{willChange:"auto"})};return{enable:enable,disable:disable}}();function createFavorite(pinEl,next,options){var place,isTypeSpot=pinEl.dataset.icon===mgPositionManager.TYPES.SPOT,isTypeTempSpot=pinEl.dataset.icon===mgPositionManager.TYPES.TEMP_SPOT,isTypeUser=pinEl.dataset.icon===mgPositionManager.TYPES.USER_POS;if(isTypeSpot){if(pinEl.dataset.place_id){place=mgData.getPlace(pinEl.dataset.placeId)}else if(pinEl.dataset.tag){place=mgData.getPlaceFromTag(pinEl.dataset.tag)}}else{var pos;if(isTypeTempSpot){pos=mgPositionManager.tempSpot}else if(isTypeUser){pos=mgPositionManager.getUserPosition()}if(pos){place=mgCreatorService.createPlace({x:pos.x_m,y:pos.y_m,zone:pos.zone,floor:pos.floor},true,true)}}if(!place){mgLogger.error(module,"Cannot add favorite because place was not found (pin dataset: "+JSON.stringify(pinEl.dataset)+")")}var data={placeholder:pinEl.querySelector(".label").textContent,place_id:place.id};mgFavoritePositions.create(data,next,options)}function getPinElementFromPinButton(pinBtnEl){return pinBtnEl.parentNode.parentNode.parentNode}var onClickOnMap=function(event){if(module.returnClicks===true&&typeof mgDevHelpers!=="undefined"){mgDevHelpers.publishClickPosition(event);return}var classList=mgDt.getClassList(event.target),pinEl=null;if(mgJt.isEmpty(classList)===false){if(classList.indexOf("label-concept")!==-1){pinEl=event.target.parentNode.parentNode}else if(classList.indexOf("label")!==-1||classList.indexOf("pin-icon")!==-1){pinEl=event.target.parentNode}else if(classList.indexOf("pin")!==-1){pinEl=event.target}else{pinEl=getPinElementFromPinButton(event.target);var isShareAction=classList.indexOf("pin-share-btn")!==-1,posType=pinEl.dataset.icon,isTypeFavorite=posType===mgPositionManager.TYPES.FAVORITE,isTypeSpot=posType===mgPositionManager.TYPES.SPOT,isTypeTempSpot=posType===mgPositionManager.TYPES.TEMP_SPOT;if(isShareAction&&isTypeFavorite){var favorite,favoriteId=parseInt(pinEl.dataset.id,10);if(favoriteId){favorite=mgFavoritePositions.get(favoriteId)}if(!favorite){mgLogger.error(module,"Failed to share favorite position, no match was found for id "+favoriteId)}else{_MobiGeoFavorite.broadcastShareEvent(favorite)}return}else if(isShareAction||classList.indexOf("pin-setfavorite-btn")!==-1){createFavorite(pinEl,function(err,createdFavorite){if(createdFavorite){if(isShareAction){_MobiGeoFavorite.broadcastShareEvent(createdFavorite)}if(isTypeTempSpot){mgPositionManager.tempSpot.hide()}else if(isTypeSpot){mgPositionManager.removePositions({type:mgPositionManager.TYPES.SPOT,"place.id":createdFavorite.places[0].place_id})}}},{label:isShareAction?"setLabelOfSharedFavorite":"setLabel"});return}else if(classList.indexOf("pin-remove-btn")!==-1){if(isTypeFavorite){mgFavoritePositions.remove(parseInt(pinEl.dataset.id,10))}else if(isTypeTempSpot){mgPositionManager.hideTempSpot()}else{mgLogger.error(module,"Unexpected remove button for position type: "+posType)}return}else if(classList.indexOf("pin-gothere-btn")!==-1){_MobiGeoMapRoute.dispatch({id:/^\d*$/.test(pinEl.dataset.id)?parseInt(pinEl.dataset.id,10):pinEl.dataset.id,type:isTypeFavorite?"Favoriteposition":mgData.higherCaseType(pinEl.dataset.type),originalId:pinEl.dataset.originalId,placeId:/^\d*$/.test(pinEl.dataset.placeId)?parseInt(pinEl.dataset.placeId,10):pinEl.dataset.placeId,text:isTypeFavorite?pinEl.querySelector(".label").textContent:null});return}pinEl=null}}mgLogger.debug(module,"[onClickOnMap]",event.type,event.target.classList);var tagName=null;if(mgJt.isEmpty(pinEl)===false){tagName=pinEl.getAttribute("data-tag");mgLogger.debug(module,"[onClickOnMap] Click on Pin")}else{tagName=event.target.id;if(["thumbnail","smallwindow","cadre","cadre2"].indexOf(tagName)>=0){return}mgLogger.debug(module,"[onClickOnMap] Click on map ID",tagName);if(mgJt.isEmpty(mgMapConfig.get().Ui.zoneIdPattern)===false){var zoneIdMatch=tagName.match(new RegExp(mgMapConfig.get().Ui.zoneIdPattern));if(mgJt.isEmpty(zoneIdMatch)===false){var zoneId=parseInt(zoneIdMatch[1]);if(zoneId!==mgZoneManager.getRootZoneId()&&mgJt.isEmpty(mgZoneManager.getZone(zoneId))===false&&mgJt.isEmpty(mgZoneManager.getZone(zoneId).getFloors())===false){showModalZoomToZone(zoneId)}}}}mgLogger.debug(module,"[onClickOnMap] Click on tag",tagName);var members=mgData.getMembersFromTag(tagName);if(mgJt.isEmpty(members)===true){mgLogger.debug(module,"[onClickOnMap] No match for this tag",tagName);return}if(mgData.filterOutSilentPOIMembers(members).length===0){mgLogger.debug(module,"[onClickOnMap] There are only silent POI members at this place",tagName);return}var position=mgPositionManager.checkPositionAlreadyExistsFromTag(tagName,[mgPositionManager.TYPES.ICON,mgPositionManager.TYPES.LABEL_ONLY]);if(position!==false){}else{position=mgPositionFactory(mgPositionManager.TYPES.SPOT,tagName);position.setFromTag(tagName,{skipDisplay:true})}onClickOnTag(position)};var showModalZoomToZone=function(zoneId){if(mgPermissions.canSeeZone(zoneId)!==true){mgPermissions.handleZoneAccessRestricted(zoneId);return}var zone=mgZoneManager.getZone(zoneId);var okButton=mgModalButton.ok;okButton.title=mgI18N.t("confirm","misc");okButton.cb=function(){if(mgFeatures.isLocationEnabled()){mgPositionTracking.disable()}mgModal.hide();window.setTimeout(function(){MobiGeo.Map.zoomOnZone(zoneId)},200)};mgModal.showMessage({title:"Zoom",content:mgI18N.t("confirmZoom2Zone","map",[zone.getZoomToZoneLabel()||zone.getName()]),buttons:[okButton,mgModalButton.close]})};var isContainerADOMElement=function(node){if(mgJt.isEmpty(node)===true||mgDt.isDOMElement(node)===false){return false}return true};var isContainerSizeEnough=function(node){var computedValues=mgDt.getItemComputedValue(node,["width","height"],true);if(computedValues.width<MIN_CONTAINER_SIZE||computedValues.height<MIN_CONTAINER_SIZE){return false}return true};var _filterOutIconMembers=function(member){return typeof mgData.POI_TYPES[member.type]!=="undefined"};var onClickOnTag=function(position){if(mgJt.isEmpty(position)===true||mgJt.isEmpty(position.members)===true){return}if(position.members.length===0){return}var orderedMembers=mgData.sortMembers(position.members),preparedData=mgData.formatOutputMembers(orderedMembers);MobiGeo.Map.POI.publish("tap",{source:"map",_id:position.place.id,x:position.place.x,y:position.place.y,POIs:preparedData});if(_MobiGeoMapPOI.disablePopups===false){var title;if(mgMapConfig.get().Ui.hideModalPoiTitle!==true){if(position.conceptName){title=position.conceptName}else if(mgJt.isEmpty(orderedMembers[0].description)===false){title=orderedMembers[0].description}else{title="POI"}}var modal=mgModal.showMessage({title:title,content:mgTemplates.list.render({members:preparedData,placeId:position.place.id,noData:mgI18N.t("noData","misc")}),buttons:[mgModalButton.close]});var links=modal.querySelectorAll(".link");for(var i=0;i<links.length;i++){mgDt.addTapEvent(links[i],clickOnModalLink)}}};var clickOnModalLink=function(event){mgDt.toggleHoverClass(event.target);var linkId=event.target.getAttribute("data-id"),linkType=event.target.getAttribute("data-type")||"Poi";var linkPlaceId=event.target.parentNode.getAttribute("data-place-id"),linkPlace=mgData.getPlace(linkPlaceId);var linkMember=mgData.getById(mgData.getTableNameFromType(linkType),linkId);if(mgJt.isEmpty(linkMember)===true||mgJt.isEmpty(linkPlace)===true){return}MobiGeo.Map.POI.publish("tap",{source:"list",x:linkPlace.x,y:linkPlace.y,POIs:mgData.formatOutputMembers([linkMember])});mgModal.hide()};var hideLoader=function(){mgDt.applyStyle(loaderEl,{opacity:0});window.setTimeout(mgDt.hideElement,450,loaderEl)};var showLegendButton=function(){if(legendBtnEl){mgDt.applyStyle(legendBtnEl,{display:"block"})}};var getMapTitleHeight=function(){if(!mapTitleEl){return 0}return mapTitleEl.offsetHeight};var getPlaceDataFromEvent=function(event){if(event.pageX===0||event.pageY===0){return null}var placeData=mgMapTransform.v2r({x:event.pageX-mapContainerOffsets.pageX,y:event.pageY-mapContainerOffsets.pageY-getMapTitleHeight()});placeData.x=Math.round(placeData.x);placeData.y=Math.round(placeData.y);placeData.zone=mgZoneManager.getCurrentZone().getId();placeData.floor=mgZoneManager.getCurrentZone().getCurrentFloor().id;return placeData};reset();PubSub.subscribe("mobigeo-domReady",function(eventName,data){setClientContainerEl(data.node);initialize()});PubSub.subscribe("mobigeo-updateDone",function(eventName,data){var updateStatus=data&&data.status?mgUpdateMain.getStatusLabel(data.status):"";updateLoaderText(updateStatus+(updateStatus?"<br>":"")+"<b>"+mgI18N.t("loadingData","misc")+"</b>")});PubSub.subscribe("mobigeo-mapsLoaded",readyToBeActivated);PubSub.subscribe("mobigeo-mapBoxReady",mapBoxReady);return{getClientContainerEl:function(){return clientContainerEl},getMapstackEl:function(){return mapstackEl},getMapDisplayEl:function(){return mapDisplayEl},getMapContainerEl:function(){return mapContainerEl},getStaticZoomStep:function(){return staticZoomStep},getOptions:function(){return options},get containerClass(){return containerClass},get mapContainerOffsets(){return mapContainerOffsets},get clientContainerOffsetTop(){return clientContainerOffsetTop},get ready(){return ready},getBottomButton:function(selector){return bottomBarEl.querySelector(selector)},getBottomBarHeight:function(){return bottomBarEl.offsetHeight},getMapTitleHeight:getMapTitleHeight,GESTURE_TYPES:GESTURE_TYPES,resize:resize,render:render,setOptions:setOptions,setTitle:setTitle,reset:reset,zoomin:zoomin,zoomout:zoomout,hideLoader:hideLoader,seizeHandler:seizeHandler,moveHandler:moveHandler,releaseHandler:releaseHandler,stopInteraction:stopInteraction,isRotationEnabled:isRotationEnabled,isContainerADOMElement:isContainerADOMElement,isContainerSizeEnough:isContainerSizeEnough,showLegendButton:showLegendButton,enableWillChangeProperty:WillChangeSwitcher.enable,disableWillChangeProperty:WillChangeSwitcher.disable,getPlaceDataFromEvent:getPlaceDataFromEvent}}();var mgMapUiSVG=function(){"use strict";var _options={svgRenderRatio:10};var module=mgLogger.modules.MapSVG,mapsContainer;var initialize=function(){mapsContainer={}};var onMapDataReceived=function(map_id,zoneId,floorId,svg){if(mgJt.isEmpty(svg)===true||typeof svg!=="string"){mgLogger.error(module,"Could not load SVG file",map_id,svg);return}var bitmaps=svg.match(/xlink\:href=\"(files\/map.*?)\"/g);if(mgJt.isEmpty(bitmaps)===false){for(var i=0;i<bitmaps.length;i++){bitmaps[i]=bitmaps[i].replace("xlink:href=","").replace(/"/g,"");var replaceAllRegexp=new RegExp(bitmaps[i],"g");svg=svg.replace(replaceAllRegexp,mgData.getPath()+bitmaps[i])}}mapsContainer[map_id]={zoneId:zoneId,floorId:floorId,body:svg}};var loadSVGMap=function(zoneId,floorId,callback){var layer=0,tile=1,siteId=mgMapConfig.get().siteId,map_id=siteId+"_"+zoneId+"_"+floorId+"_"+layer+"_"+tile,_filename=mgData.getMapPath(map_id);var cb=function(){callback({zoneId:zoneId,floorId:floorId,map_id:map_id})};mgFetchHelper.execute({type:"get",dataType:"text",url:_filename,cache:false,success:function(svg){onMapDataReceived(map_id,zoneId,floorId,svg);cb()},error:function(error){mgLogger.error(module,"Error while loading",_filename,error);onMapDataReceived(map_id,zoneId,floorId,error.responseText);cb()}})};var createMapElement=function(mapId,content){var div=document.createElement("div");div.innerHTML=content;return div};var onZonesReady=function(){var siteId=mgMapConfig.get().siteId;var rootZoneId=mgZoneManager.getRootZoneId();var rootZoneMainFloor=mgZoneManager.getRootZone().getMainFloor();var svg_doc=document.getElementById("mapsvg_"+siteId+"_"+rootZoneId+"_"+rootZoneMainFloor+"_0_1");var baseVal=svg_doc.viewBox.baseVal;var width=baseVal.width/_options.svgRenderRatio;mgMap.setInitialMapBox_m([width,baseVal.height/_options.svgRenderRatio]);mgMap.setMapBox_m([width,baseVal.height/_options.svgRenderRatio]);mgMap.setMap2ref(mgMapConfig.get().Ui.refMapWidth/width);PubSub.publish("mobigeo-mapBoxReady")};var getFloorContainer=function(zone,floor){return mgMapUi.getMapstackEl().querySelector("#floor_"+zone+"_"+floor)};var onMapsLoaded=function(){var _cacheEl={};var container;mgLogger.time(module,"Append maps to DOM");for(var map_id in mapsContainer){if(mapsContainer.hasOwnProperty(map_id)===false){continue}var mapData=mapsContainer[map_id];var containerName="#floor_"+mapData.zoneId+"_"+mapData.floorId;if(typeof _cacheEl[containerName]==="undefined"){container=getFloorContainer(mapData.zoneId,mapData.floorId);if(mgJt.isEmpty(container)===true){mgLogger.error(module,"Could not find floor container",containerName);return}_cacheEl[containerName]=container}else{container=_cacheEl[containerName]}var mapEl=createMapElement(map_id,mapData.body);container.appendChild(mapEl);mgDt.hideElement(container)}mgLogger.timeEnd(module,"Append maps to DOM");PubSub.publish("mobigeo-mapsInserted")};var append=function(zone,floor,el){mgDt.insertAfter(el,mgMapUi.getMapstackEl().querySelector("#Z_"+zone+"_"+floor+"_B"))};var PLACE_MARKER_TAGNAME="circle";var getPlaceMarker=function(place){var config=mgMapConfig.get().Ui.editMode.placeMarker;var circleEl=document.createElementNS("http://www.w3.org/2000/svg",PLACE_MARKER_TAGNAME);circleEl.classList.add("mg-place-marker");circleEl.id=place.id;Object.keys(config.style).forEach(function(styleProp){circleEl.style[styleProp]=config.style[styleProp]});circleEl.setAttribute("cx",0);circleEl.setAttribute("cy",0);circleEl.setAttribute("r",config.radius);circleEl.setAttribute("transform","matrix(1.187 0 0 -1.187 "+place.x+" "+place.y+")");return circleEl};var findPlaceMarker=function(place){var container=mgMapUi.getMapstackEl().querySelector("#Z_"+place.zone+"_"+place.floor);var placeId=String(place.id),placeMarker;Array.prototype.forEach.call(container.childNodes,function(child){if(child.tagName&&child.tagName.toLowerCase()===PLACE_MARKER_TAGNAME&&child.id===placeId){placeMarker=child}});return placeMarker};PubSub.subscribe("mobigeo-mapUiReady",initialize);PubSub.subscribe("mobigeo-mapsLoaded",onMapsLoaded);PubSub.subscribe("mobigeo-zonesReady",onZonesReady);return{get PLACE_MARKER_TAGNAME(){return PLACE_MARKER_TAGNAME},loadSVGMap:loadSVGMap,append:append,getPlaceMarker:getPlaceMarker,findPlaceMarker:findPlaceMarker,getFloorContainer:getFloorContainer}}();var mgSynopticView=function(){"use strict";var module=mgLogger.modules.Synoptic,isEnabled=false,options,tagRegExp,containerEl,svgContainer,isReduced,scales,storedCurrentFloorStatus={},REDUCED_HEIGHT=100,TRANSITION_DURATION=350,CLICK_EFFECT_DURATION=300,currentItiSynoStep=null,synoItiEl=null,maskEl=null;function reset(){isEnabled=false;isReduced=false;options=null;tagRegExp=null;containerEl=null;svgContainer=null;mgSynopticPins.reset()}function init(){options=mgMapConfig.get().Ui.synopticViewOptions;isEnabled=typeof options==="object"&&options!==null&&options.enableSynopticView===true;if(isEnabled!==true){mgSynopticPins.disable()}else{tagRegExp=new RegExp(options.synoTagPattern);containerEl=mgMapUi.getMapContainerEl().querySelector("#synoptic-container");svgContainer=containerEl.querySelector("#synoptic-svg-container");mgDt.addTapEvent(containerEl.querySelector(".mg-cross-close-btn"),closeButtonEventHandler);mgSynopticPins.init(tagRegExp);mgDt.applyStyle(containerEl,{width:options.synoMapWidth+"px",height:options.synoMapHeight+"px"});mgDt.addTapEvent(svgContainer,onClick);var path=mgData.getMapPath("0_syno_"+MobiGeo.lang);mgFetchHelper.execute({type:"get",dataType:"text",url:path,cache:false,success:function(svg){svgContainer.innerHTML=svg},error:function(error){mgLogger.error(module,"Could not load synoptic file",path,error);isEnabled=false}})}}function closeButtonEventHandler(event){mgDt.toggleHoverClass(event.target);window.setTimeout(reduce,50)}function getTag(zone,floor){return"Syno_A_"+zone+"_"+floor}function getTextTag(zone,floor){return"Syno_L_"+zone+"_"+floor}function getTitleTag(zone,floor){return"Syno_L_"+zone+"_title"}function onClick(event){if(isReduced===true){maximize()}else{var el=event.target,targetId=el.id;if(targetId){var match=tagRegExp.exec(targetId);if(match&&match.length===3){var zone=parseInt(match[1],10),floor=match[2];var delay=0,originalFill;if(options.clickEffect){delay=CLICK_EFFECT_DURATION;originalFill=el.style.fill;el.style.fill=options.clickEffect}window.setTimeout(function(){el.style.fill=originalFill;reduce()},delay);window.setTimeout(mgMap.zoomOnZone,TRANSITION_DURATION+delay,zone,floor);return}}reduce()}}function update(){if(isEnabled){scales={full:{value:1,width:options.synoMapWidth,height:options.synoMapHeight}};var MARGIN=10;var availableWidth=mgViewport.w_v-MARGIN*2,availableHeight=mgViewport.h_v-MARGIN*2-mgMapUi.getMapTitleHeight();var maximizedScale=Math.min(availableHeight/options.synoMapHeight,availableWidth/options.synoMapWidth);scales.maximized={value:maximizedScale,width:options.synoMapWidth*maximizedScale,height:options.synoMapHeight*maximizedScale};var reducedScale=REDUCED_HEIGHT/options.synoMapHeight;scales.reduced={value:reducedScale,width:options.synoMapWidth*reducedScale,height:options.synoMapHeight*reducedScale};mgLogger.debug(module,"Scales: ",scales);reduce();mgDt.showElement(containerEl)}}PubSub.subscribe("mobigeo-mapsDisplayed",update);function show(){if(isEnabled){mgDt.showElement(containerEl)}}function hide(){if(isEnabled){mgDt.hideElement(containerEl)}}function _enableWillChange(){mgDt.applyStyle(containerEl,{willChange:"transform"})}function _resetWillChange(){mgDt.applyStyle(containerEl,{willChange:"auto"})}function maximize(){isReduced=false;containerEl.style.cursor="default";_toggle(scales.maximized.value)}function reduce(){isReduced=true;containerEl.style.cursor="pointer";_toggle(scales.reduced.value)}function _toggle(targetScale){_enableWillChange();mgDt.applyStyle(containerEl,{transform:"scale("+targetScale+")"});window.setTimeout(_resetWillChange,TRANSITION_DURATION)}function applyRegExp(str){if(str&&isEnabled&&tagRegExp){return tagRegExp.exec(str)}return null}var floorChangedHandler=function(){if(_MobiGeoMap.ready!==true||isEnabled!==true){return}var currentZone=mgZoneManager.getCurrentZone().getId(),currentFloor=mgZoneManager.getCurrentZone().getCurrentFloor().id,tag=getTag(currentZone,currentFloor),textTag=getTextTag(currentZone,currentFloor),titleTag=getTitleTag(currentZone);if(textTag!==storedCurrentFloorStatus.textTag){if(storedCurrentFloorStatus.textTag){var previousTextContainer=svgContainer.querySelector("#"+storedCurrentFloorStatus.textTag);var previousTexts=previousTextContainer.querySelectorAll("*:not([foo])");for(var i=0;i<previousTexts.length;i++){if(previousTexts[i]){previousTexts[i].style.fill=storedCurrentFloorStatus["textColor"+i]}}}var textContainer=svgContainer.querySelector("#"+textTag);if(textContainer){var texts=textContainer.querySelectorAll("*:not([foo])");for(var j=0;j<texts.length;j++){if(texts[j]&&texts[j].style&&texts[j].style.fill){storedCurrentFloorStatus["textColor"+j]=texts[j].style.fill;texts[j].style.fill=options.currentFloorTextColor}}storedCurrentFloorStatus.textTag=textTag}}if(titleTag!==storedCurrentFloorStatus.titleTag){if(storedCurrentFloorStatus.titleTag){var previousTitleEl=svgContainer.querySelector("#"+storedCurrentFloorStatus.titleTag);if(previousTitleEl){previousTitleEl.style.fill=storedCurrentFloorStatus.titleColor}}var titleEl=svgContainer.querySelector("#"+titleTag);if(titleEl){storedCurrentFloorStatus.titleColor=titleEl.style.fill;titleEl.style.fill=options.currentFloorColor}storedCurrentFloorStatus.titleTag=titleTag}if(tag!==storedCurrentFloorStatus.tag){if(storedCurrentFloorStatus.tag){var previousFloorRectEl=svgContainer.querySelector("#"+storedCurrentFloorStatus.tag);if(previousFloorRectEl){previousFloorRectEl.style.fill=storedCurrentFloorStatus.color}}var rectEl=svgContainer.querySelector("#"+tag);if(rectEl){storedCurrentFloorStatus.color=rectEl.style.fill;rectEl.style.fill=options.currentFloorColor}storedCurrentFloorStatus.tag=tag}};var drawIti=function(itiObj,options){var containerName="#mapsvg_syno";var containerEl=document.querySelector(containerName);if(mgJt.isEmpty(containerEl)===true){mgLogger.error(module,"Could not find this zone/floor SVG Syno container",containerName);return false}var svgEl=document.createElementNS("http://www.w3.org/2000/svg","g");var bgPathElStyle="opacity: 0.8;"+"pointer-events: none;"+"stroke: #fff;"+"stroke-width: "+mgMapConfig.get().Ui.synopticViewOptions.itiSynoStrokeWidth+"px;"+"stroke-linejoin: round;"+"stroke-linecap: butt;"+"fill-opacity: 0;";var pathElStyle="opacity: 1;"+"pointer-events: none;"+"stroke: "+options.strokeColor+";"+"stroke-width: "+mgMapConfig.get().Ui.synopticViewOptions.itiSynoStrokeWidth+"px;"+"stroke-linejoin: round;"+"stroke-linecap: butt;"+"fill-opacity: 0;"+"stroke-dasharray: 10;";var synoTag=null,synoPlace=null,synoItiPath=null,zone=null,floor=null,floorIndex=null,itiSynoZoneJumps=mgMapConfig.get().Ui.synopticViewOptions.itiSynoZoneJumps,key=null,jumpTag=null,jumpEl=null,a=null;for(var i=0;i<itiObj.parts.length;i++){zone=itiObj.parts[i].infos.zone;floor=itiObj.parts[i].infos.floor;floorIndex=zone+"_"+floor;if(zone!==0){synoTag=getTag(zone,floor);synoPlace=mgData.getPlaceFromTag(synoTag);if(typeof synoPlace==="undefined"){mgLogger.error(module,"Could not draw the itinerary on syno view (syno Place undefined)");return false}if(synoItiPath===null){synoItiPath="M"+synoPlace.x+","+synoPlace.y}else{if(typeof itiSynoZoneJumps!=="undefined"&&floorIndex!==currentItiSynoStep){key=currentItiSynoStep+"to"+floorIndex;if(typeof itiSynoZoneJumps[key]!=="undefined"){a=itiSynoZoneJumps[key].split("_");jumpTag=getTag(a[0],a[1]);jumpEl=document.getElementById(jumpTag);if(mgJt.isEmpty(jumpEl)===false&&maskEl===null){maskEl=jumpEl.cloneNode();maskEl.setAttribute("id","synoMask");maskEl.setAttribute("style","fill:#ffffff;opacity:0.7;pointer-events:none;");svgEl.appendChild(maskEl)}}}synoItiPath+=" L"+synoPlace.x+","+synoPlace.y}currentItiSynoStep=floorIndex}}currentItiSynoStep=null;var bgPathEl=document.createElementNS("http://www.w3.org/2000/svg","path");bgPathEl.setAttribute("d",synoItiPath);bgPathEl.setAttribute("style",bgPathElStyle);svgEl.appendChild(bgPathEl);var pathEl=document.createElementNS("http://www.w3.org/2000/svg","path");pathEl.setAttribute("d",synoItiPath);pathEl.setAttribute("style",pathElStyle);svgEl.appendChild(pathEl);containerEl.appendChild(svgEl);synoItiEl=svgEl;return true};var removeIti=function(){if(synoItiEl!==null){synoItiEl.parentNode.removeChild(synoItiEl)}synoItiEl=null;if(maskEl!==null){maskEl.parentNode.removeChild(maskEl)}maskEl=null};PubSub.subscribe("mobigeo-zoneFloor-changed",floorChangedHandler);return{reset:reset,init:init,isEnabled:function(){return isEnabled===true},show:show,hide:hide,getTag:getTag,update:update,applyRegExp:applyRegExp,drawIti:drawIti,removeIti:removeIti}}();var mgSynopticPins=function(){var MAX_PINS_DISPLAYED_PER_TYPE,DISPLAYED_TYPES,isEnabled,pinsContainer,tagRegExp,pinConfig,tipConfig;function reset(){MAX_PINS_DISPLAYED_PER_TYPE=1;DISPLAYED_TYPES=[mgPositionManager.TYPES.USER_POS,mgPositionManager.TYPES.SPOT,mgPositionManager.TYPES.FAVORITE,mgPositionManager.TYPES.ITI_START,mgPositionManager.TYPES.ITI_TARGET,mgPositionManager.TYPES.TRACKEE];pinsContainer=null;tagRegExp=null;ZoneFloorContainers.reset()}function init(_tagRegExp){reset();pinsContainer=mgMapUi.getMapContainerEl().querySelector("#synoptic-pin-containers");tagRegExp=_tagRegExp;isEnabled=true}function disable(){isEnabled=false}var ZoneFloorContainers=function(){var containerCssClass="synoptic-pin-container";var containers;function reset(){containers={}}reset();function get(place,skipCreation){var container=containers[place.tag];if(!container&&skipCreation!==true){container=document.createElement("div");container.classList.add(containerCssClass);container.dataset.tag=place.tag;var style={top:place.y+"px",left:place.x+"px"};mgDt.applyStyle(container,style);pinsContainer.appendChild(container);set(container,place)}return container}function set(containerEl,place){containers[place.tag]=containerEl}function updateTransform(containerEl){switch(containerEl.children.length){case 0:case 1:case 2:break;default:containerEl.style.transform="translateX(-38%)";break}}return{reset:reset,get:get,updateTransform:updateTransform}}();function getPlace(tag){return mgData.getPlaceFromTag(tag)}function show(type,zone,floor){var tag=mgSynopticView.getTag(zone,floor);if(type===mgPositionManager.TYPES.USER_POS){hideUserPositionPin(tag)}var count=countPins(tag,type);if(count<MAX_PINS_DISPLAYED_PER_TYPE){var place=getPlace(tag);if(place){var containerEl=ZoneFloorContainers.get(place);containerEl.appendChild(createPin(type));ZoneFloorContainers.updateTransform(containerEl)}}}function createPin(type){var el=document.createElement("div");el.classList.add("pin");el.classList.add(mgPositionManager.POSITION_CSS_CLASS[type]);el.dataset.icon=type;el.innerHTML='<div class="pin-icon"></div>';if(mgMapUi.getOptions().flagStartLabelOnly){switch(type){case mgPositionManager.TYPES.SPOT:case mgPositionManager.TYPES.FAVORITE:case mgPositionManager.TYPES.TEMP_SPOT:case mgPositionManager.TYPES.ITI_STEP:case mgPositionManager.TYPES.ITI_TARGET:case mgPositionManager.TYPES.LABEL_ONLY:case mgPositionManager.TYPES.USER_POS:case mgPositionManager.TYPES.ICON:case mgPositionManager.TYPES.TRACKEE:break;case mgPositionManager.TYPES.ITI_START:var iconContainerEl=el.querySelector(".pin-icon");iconContainerEl.innerHTML=mgI18N.t("flagstarlabel","itinerary");iconContainerEl.setAttribute("class","pin-label-flag-start");break;default:break}}else{var style={width:pinConfig.width+"px",height:pinConfig.height+"px",transform:"translateX("+tipConfig[type][0]*pinConfig.width*-1+"px) translateY("+tipConfig[type][1]*pinConfig.height*-1+"px) scale(1.5)"};mgDt.applyStyle(el,style)}return el}function countPins(tag,type){var place=getPlace(tag);if(place){var zoneFloorContainer=ZoneFloorContainers.get(place,true);if(zoneFloorContainer){var pins=zoneFloorContainer.querySelectorAll(".pin[data-icon="+type+"]");if(pins){return pins.length}}}return 0}function hide(type,zone,floor){var membersCount;if(type===mgPositionManager.TYPES.FAVORITE){membersCount=mgFavoritePositions.getByZoneAndFloor(zone,floor).length;if(membersCount>0){return}}var tag=mgSynopticView.getTag(zone,floor);var count=countPins(tag,type);if(count===1||type===mgPositionManager.TYPES.USER_POS){var place=getPlace(tag);if(place){var containerEl=ZoneFloorContainers.get(place);var el=containerEl.querySelector("[data-icon="+type+"]");if(el){containerEl.removeChild(el);ZoneFloorContainers.updateTransform(containerEl)}}}}function hideUserPositionPin(newTag){var type=mgPositionManager.TYPES.USER_POS;var currentTags=[];var pinEls=pinsContainer.querySelectorAll(".pin[data-icon="+type+"]");Array.prototype.forEach.call(pinEls,function(pinEl){currentTags.push(pinEl.parentNode.dataset.tag)});if(currentTags.length){currentTags.forEach(function(itTag){if(itTag===newTag){return}else{var matches=tagRegExp.exec(itTag);if(matches){hide(type,parseInt(matches[1],10),matches[2])}}})}}PubSub.subscribe("new-POI-status",function(eventName,data){if(isEnabled===true&&DISPLAYED_TYPES.indexOf(data.type)!==-1){switch(data.action){case"show":show(data.type,data.zone,data.floor);break;case"hide":hide(data.type,data.zone,data.floor);break;default:}}});function clearAll(){var toDelete=[];Array.prototype.forEach.call(pinsContainer.querySelectorAll(".pin"),function(pinEl){if(pinEl.dataset.icon!==mgPositionManager.TYPES.USER_POS&&pinEl.dataset.icon!==mgPositionManager.TYPES.FAVORITE){toDelete.push({type:pinEl.dataset.icon,tag:pinEl.parentNode.dataset.tag})}});toDelete.forEach(function(data){var matches=tagRegExp.exec(data.tag);if(matches){var zone=parseInt(matches[1],10),floor=matches[2];hide(data.type,zone,floor)}})}function mapConfigLoadedHandler(){if(mgMapConfig.get().Ui.synopticViewOptions){pinConfig=mgMapConfig.get().Ui.synopticViewOptions.synoPin}tipConfig=mgMapConfig.get().Ui.pinOptions.pinTips}PubSub.subscribe("mobigeo-mapConfigLoaded",mapConfigLoadedHandler);return{reset:reset,init:init,disable:disable,show:show,hide:hide,clearAll:clearAll}}();var mgPositionTracking=function(){"use strict";var isEnabled=false,isCentered,hasCenteringTooltipBeenDisplayed;var enable=function(opts){if(mgFeatures.isLocationEnabled()!==true){return}mgMap.focusOnUserPosition();if(mgLocation.isLocationTypeNao()!==true&&mgLocation.isLocationTypeIntus()!==true){return}mgLocationUi.updateButtonStyle(mgLocationStatus.HAS_POSITION.TRACK);if(isEnabled!==true){if(typeof opts==="object"&&opts.showMessage===true){mgLocationUi.showTooltip(mgI18N.t("trackingModeEnabled","mapPosition"))}mgPositionManager.disableUserPinCssTransition()}mgPositionManager.getUserPosition().startTracking();isEnabled=true;isCentered=true};var disable=function(opts){if(mgFeatures.isLocationEnabled()!==true){return}if(mgLocation.isLocationTypeNao()!==true&&mgLocation.isLocationTypeIntus()!==true){return}if(isEnabled===false){return}if(mgLocation.getStatus()===mgLocationStatus.HAS_POSITION){mgLocationUi.updateButtonStyle(mgLocationStatus.HAS_POSITION.UNTRACK)}isEnabled=false;if(typeof opts==="object"&&opts.showMessage===true&&mgPositionManager.getUserPosition().displayed===true){mgLocationUi.showTooltip(mgI18N.t("trackingModeDisabled","mapPosition"))}mgPositionManager.enableUserPinCssTransition();hasCenteringTooltipBeenDisplayed=false};var handleMapMoved=function(noCenterCheck){if(isEnabled!==true||mgPositionManager.getUserPosition().displayed!==true){return}if(mgViewport.isInside(mgPositionManager.getUserPosition().xy_m)===false){disable({showMessage:true})}else if(noCenterCheck!==true){isCentered=false;mgLocationUi.updateButtonStyle(mgLocationStatus.HAS_POSITION.TRACK_UNCENTERED);if(hasCenteringTooltipBeenDisplayed!==true){mgLocationUi.showTooltip(mgI18N.t("trackingModeUncentered","mapPosition"));hasCenteringTooltipBeenDisplayed=true}}};return{isEnabled:function(){return isEnabled===true},isCentered:function(){return isCentered===true},enable:enable,disable:disable,handleMapMoved:handleMapMoved}}();var mgPositionFactory=function(type,pId,isActive){"use strict";var module=mgLogger.modules.Position,id=type+(pId?"-"+pId:""),members,conceptName,place,zone,area,floor,gps,polestar,pin,trackeeId,displayed,xy_m,hash,hAccuracy,accuracy,course,data,previousPosition,placeMarkerDrawnOnMap;var removePin=function(){hide();if(mgJt.isEmpty(pin)===false){displayed=false;pin.remove();pin=null}};var hide=function(){if(mgJt.isEmpty(pin)===false){pin.hide();if(displayed===true){displayed=false;PubSub.publish("new-POI-status",{action:"hide",type:type,zone:zone,floor:floor});if(type===mgPositionManager.TYPES.USER_POS){zone=null;floor=null;PubSub.publish("mobiGeoPosition-hide")}}}};var reset=function(){mgLogger.debug(module,"[reset] position (id:"+id+")");removePin();hide();setMembers([]);conceptName=null;place=null;zone=null;area=null;floor="";gps=false;polestar=false;xy_m=null;pin=null;displayed=false;placeMarkerDrawnOnMap=false};var setFromSpot=function(_member,_place,options){if(mgJt.isEmpty(_member)===true){mgLogger.error(module,"setFromSpot","Missing member",_member)}else if(mgJt.isEmpty(_place)===true){mgLogger.error(module,"setFromSpot","Missing place",_place)}else{gps=false;polestar=false;setMembers([_member]);place=_place;setZone(place.zone);setFloor(place.floor);setXYm(place.x!==null&&place.y!==null?{x:place.x,y:place.y}:null);setPin(options)}};var setFromMemberPlace=function(memberAndPlace){if(mgJt.isEmpty(memberAndPlace)===true){mgLogger.error(module,"setFromMemberPlace: missing argument",memberAndPlace);return null}gps=false;polestar=false;place=memberAndPlace.place;setMembers(memberAndPlace.members||[memberAndPlace.member]);setZone(place.zone);setFloor(place.floor);setXYm(place.x!==null&&place.y!==null?{x:place.x,y:place.y}:null);setPin()};var setFromTag=function(tag,options){if(typeof tag!=="string"||!tag){mgLogger.error(module,"setFromTag: invalid tag",tag);return null}gps=false;polestar=false;place=mgData.getPlaceFromTag(tag);if(!place){mgLogger.error(module,"setFromTag: could not find place from tag",tag);return null}setZone(place.zone);setFloor(place.floor);setMembers(mgData.getMembersFromTag(tag));setXYm(place.x!==null&&place.y!==null?{x:place.x,y:place.y}:null);setPin(options)};var setFromL12n=function(position){if(mgJt.isEmpty(position)===true){removePin();return null}if(mgJt.isEmpty(position.xy_m.x)===true||mgJt.isEmpty(position.xy_m.y)===true){mgLogger.error(module,"setFromL12n: missing coordinates (x/y).");return null}if(mgJt.isEmpty(position.zone)===true||mgJt.isEmpty(position.floor)===true){mgLogger.error(module,"setFromL12n: missing coordinates (zone/floor).");return null}gps=false;place=null;setMembers([]);hAccuracy=null;course=null;setZone(position.zone);setFloor(position.floor);setXYm(position.xy_m);setPin()};var lastTurn=null;var setUserPosition=function(position){if(mgJt.isEmpty(mgLocation)===true){mgLogger.error(module,"setUserPosition: cannot set position because mgLocation does not exist.");return}if(mgLocation.isStarted===false){mgLogger.error(module,"Setting position from Polestar... but Polestar is stopped... so skipped.");return}if(mgJt.isEmpty(position)===true||typeof position.xy_m.x!=="number"||typeof position.xy_m.y!=="number"){mgLogger.error(module,"setUserPosition: invalid position",position);return}if(type!==mgPositionManager.TYPES.USER_POS){mgLogger.error(module,"Tried to set from polestar, but not for myPos",type);return}var previousPosition={xy_m:xy_m,course:course,floor:floor};gps=false;polestar=true;place=null;setMembers([]);accuracy=position.accuracy;course=position.course;data=position.data;setZone(position.zone);setFloor(position.floor);setXYm(position.xy_m);if(mgPositionTracking.isEnabled()===true&&mgMap.isSeized()!==true){var xy_v=mgMapTransform.r2v(xy_m);var prev_xy_v=mgMapTransform.r2v(previousPosition.xy_m);var dxy_v={x:prev_xy_v.x-xy_v.x,y:prev_xy_v.y-xy_v.y};mgMap.move(dxy_v.x,dxy_v.y,true);var turnAngle=0;if(lastTurn===null||Math.abs(course-lastTurn)>(mgMapConfig.get().angleTolerance||0)){turnAngle=course-lastTurn;lastTurn=course}mgMap.zoom(1,-turnAngle,prev_xy_v,mgMapUi.GESTURE_TYPES.NONE,true);if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}}setPin();if(mgZoneManager.getCurrentZone()&&previousPosition.floor!==position.floor&&position.zone===mgZoneManager.getCurrentZone().getId()&&previousPosition.floor===mgZoneManager.getCurrentZone().getCurrentFloor().id){mgZoneManager.getCurrentZone().setCurrentFloor(position.floor)}if(mgPositionTracking.isEnabled()===true){mgMap.selectZone()}};var startTracking=function(){var turnAngle=course-mgMap.getNormalisedCurrentRotation();var prev_xy_v=mgMapTransform.r2v(xy_m);mgMap.zoom(1,-turnAngle,prev_xy_v,mgMapUi.GESTURE_TYPES.NONE,true);lastTurn=turnAngle};var setPin=function(options){if(mgJt.isEmpty(pin)===true){pin=mgPinFactory(_instanceInterface,isActive);if(mgEditMode.isEnabled()&&hasEditableMember()){pin.skipSelectPins=true}mgPinManager.addPin(pin)}if(options&&options.noLabel===true){pin.labelDisplayable=false}else{pin.labelDisplayable=true}var pinStatus=pin.setPosition(_instanceInterface,{skipDisplay:options&&options.skipDisplay===true});if(pinStatus===true&&(!options||options.skipDisplay!==true)){display()}};var display=function(){if(isDisplayable()===true){displayed=true;pin.show();PubSub.publish("new-POI-status",{action:"show",type:type,zone:zone,floor:floor});displayPinLabel();if(mgEditMode.isEnabled()&&mgEditMode.canStackMembers(members)){drawPlaceMarkerOnMap()}}else{hide()}};var displayPinLabel=function(){if(pin.isTypeSpot()||pin.isTypeFavorite()){if(!hasTitleOnMapProperty()&&Array.isArray(members)&&members.length>0&&mgPositionManager.isLabelOnly(members[0].type)!==true){pin.displayLabel()}else{pin.hideLabel()}}else if(pin.isTypeTrackee()||pin.isTypeLabelOnly()||hasTitleOnMapProperty()){pin.displayLabel()}else if(pin.isTypeUser()){pin.displayUserLabel()}else{pin.hideLabel()}};var hasTitleOnMapProperty=function(){if(Array.isArray(members)&&members.length>0){for(var i=0;i<members.length;i++){if(members[i]&&members[i].title){return true}}}return false};var isDisplayable=function(){if(mgJt.isEmpty(pin)===false){if(type!==mgPositionManager.TYPES.ICON||pin.belongsToCurrentZoneAndFloor()===true){if(type===mgPositionManager.TYPES.ITI_STEP&&pId!==mgItineraryUi.currentStep){return false}return true}}return false};var setXYm=function(value){xy_m=value;updateArea()};var setMembers=function(value){members=value};var addMember=function(member){var newArray=members.slice();newArray.push(member);setMembers(newArray);regeneratePin()};var hasMember=function(member){var found=false;members.forEach(function(iMember,index){if(iMember.id===member.id){found=true}});return found};var removeMember=function(member){var memberIndex;members.forEach(function(iMember,index){if(iMember.id===member.id){memberIndex=index}});if(typeof memberIndex!=="number"){mgLogger.error(module,"Could not find position matching member ",member)}else{var newArray=members.slice();newArray.splice(memberIndex,1);setMembers(newArray);regeneratePin()}};var hasEditableMember=function(){var foundOne=false;if(Array.isArray(members)){for(var i=0;i<members.length&&foundOne!==true;i++){foundOne=mgPoiPermissionsInternal.canEdit(members[i])}}return foundOne};var updateArea=function(){if(type===mgPositionManager.TYPES.USER_POS){var newArea=mgZoneManager.getZone(zone).getRoutingArea(floor,xy_m);if(area!==newArea){area=newArea;publishPosition()}}};var setZone=function(value){if(typeof value==="string"){value=parseInt(value,10)}if(value!==zone){zone=value;if(type===mgPositionManager.TYPES.USER_POS&&mgJt.isEmpty(zone)===false){publishPosition()}}};var setFloor=function(value){if(value!==floor){floor=value;if(type===mgPositionManager.TYPES.USER_POS){publishPosition()}}};var publishPosition=function(){window.setTimeout(_publishPosition,1)};var _publishPosition=_.debounce(function(){PubSub.publish("mobiGeoPosition-zonefloor-updated",{zone:zone,floor:floor,area:area},10)});var drawPlaceMarkerOnMap=function(){if(placeMarkerDrawnOnMap!==true){var el=mgMapUiSVG.getPlaceMarker(place);mgDraggablePins.initDroppableListeners(el);mgMapUiSVG.append(place.zone,place.floor,el);placeMarkerDrawnOnMap=true}};var removePlaceMarkerFromMap=function(){var marker=mgMapUiSVG.findPlaceMarker(place);if(marker){marker.parentNode.removeChild(marker)}placeMarkerDrawnOnMap=false};var regeneratePin=function(){removePin();setPin()};reset();var _instanceInterface={get id(){return id},get type(){return type},get trackeeId(){return trackeeId},set trackeeId(value){trackeeId=value},get members(){return members},get place(){return place},set place(value){place=value},get zone(){return zone},set zone(value){zone=value},get area(){return area},set area(value){area=value},get floor(){return floor},set floor(value){floor=value},get gps(){return gps},set gps(value){gps=value},get polestar(){return polestar},set polestar(value){polestar=value},get pin(){return pin},set pin(value){pin=value},get displayed(){return displayed},set displayed(value){displayed=value},get xy_m(){return xy_m},set xy_m(value){setXYm(value)},get x_m(){return xy_m.x},get y_m(){return xy_m.y},get hAccuracy(){return hAccuracy},set hAccuracy(value){hAccuracy=value},get accuracy(){return accuracy},set accuracy(value){accuracy=value},get course(){return course},set course(value){course=value},get data(){return data},set data(value){data=value},get hash(){return hash},set hash(value){hash=value},get conceptName(){return conceptName},removePin:removePin,hide:hide,reset:reset,setFromSpot:setFromSpot,setFromTag:setFromTag,setFromMemberPlace:setFromMemberPlace,setFromL12n:setFromL12n,setUserPosition:setUserPosition,setPin:setPin,display:display,displayPinLabel:displayPinLabel,setZone:setZone,setFloor:setFloor,startTracking:startTracking,regeneratePin:regeneratePin,hasTitleOnMapProperty:hasTitleOnMapProperty,addMember:addMember,hasMember:hasMember,removeMember:removeMember,drawPlaceMarkerOnMap:drawPlaceMarkerOnMap,removePlaceMarkerFromMap:removePlaceMarkerFromMap};mgPositionManager.push(_instanceInterface);return _instanceInterface};var positionsObject={};var mgPositionManager=function(){"use strict";var module=mgLogger.modules.Position;var TYPES={USER_POS:"myPos",SPOT:"spot",ICON:"icon",FAVORITE:"favorite",TEMP_SPOT:"temp-spot",LABEL_ONLY:"label-only",ITI_START:"start",ITI_TARGET:"target",ITI_STEP:"step",TRACKEE:"trackee"};var POSITION_CSS_CLASS={};POSITION_CSS_CLASS[TYPES.ITI_START]="icon-flag-start";POSITION_CSS_CLASS[TYPES.ITI_STEP]="icon-flag-step";POSITION_CSS_CLASS[TYPES.ITI_TARGET]="icon-flag-arrival";POSITION_CSS_CLASS[TYPES.USER_POS]="icon-user-position";POSITION_CSS_CLASS[TYPES.SPOT]="icon-poi";POSITION_CSS_CLASS[TYPES.TRACKEE]="icon-trackee";POSITION_CSS_CLASS[TYPES.LABEL_ONLY]="icon-label-only";POSITION_CSS_CLASS[TYPES.FAVORITE]="icon-favorite";POSITION_CSS_CLASS[TYPES.TEMP_SPOT]="icon-temp-spot";var SVG_TYPES=[TYPES.ITI_START,TYPES.ITI_TARGET,TYPES.ITI_STEP,TYPES.USER_POS,TYPES.SPOT,TYPES.TRACKEE,TYPES.FAVORITE,TYPES.TEMP_SPOT];var positions=[],myPos=null,start=null,target=null,tempSpot=null;var reset=function(){mgLogger.debug(module,"[reset] position manager");mgJt.emptyArray(positions);positionsObject={};myPos=null;target=null;tempSpot=null};var initialize=function(){positions=[];positionsObject={};myPos=mgPositionFactory(TYPES.USER_POS);start=mgPositionFactory(TYPES.ITI_START);target=mgPositionFactory(TYPES.ITI_TARGET);tempSpot=mgPositionFactory(TYPES.TEMP_SPOT)};var checkPositionAlreadyExistsFromTag=function(tag,posTypes){if(mgJt.isEmpty(tag)===true){mgLogger.error(module,"checkPositionAlreadyExistsFromTag has an empty tag parameter",tag);return false}if(mgJt.isEmpty(posTypes)===true){posTypes=[]}if(posTypes instanceof Array===false){posTypes=[posTypes]}for(var i=0;i<positions.length;i++){var pos=positions[i];if(mgJt.isEmpty(pos)===true||mgJt.isEmpty(pos.place)===true||mgJt.isEmpty(pos.place.tag)===true){continue}if(pos.place.tag===tag&&posTypes.indexOf(pos.type)>=0){return pos}}return false};var checkPositionAlreadyExists=function(placeId,posType){const position=positionsObject[placeId];const _posType=position&&position.type;const types=["icon","label-only"];return position&&(_posType===posType||types.includes(posType))?position:false};var clearAll=function(scope){var reset=true;if(mgJt.isEmpty(scope)===true){scope=[TYPES.SPOT,TYPES.TEMP_SPOT,TYPES.ITI_START,TYPES.ITI_TARGET,TYPES.ITI_STEP,TYPES.TRACKEE]}for(var i=0;i<positions.length;i++){var position=positions[i];if(mgJt.isEmpty(position)===true||scope.indexOf(position.type)<0){continue}position.hide();if(reset===true){if(position.type===TYPES.SPOT){position.removePin();positions.splice(i,1);if(position&&position.place&&position.place.id){delete positionsObject[position.place.id]}i--;continue}}}};var isLabelOnly=function(type){return getLabelOnlyTableNames().indexOf(mgData.getTableNameFromType(type))!==-1};var getLabelOnlyTableNames=function(){return mgMapConfig.get().Ui.pinLabelOnly||[]};var showAllLabels=function(){var tableNames=["pois"];if(Array.isArray(tableNames)&&tableNames.length){tableNames.forEach(function(memberType){showLabels(memberType)})}};var showLabels=function(tableName){if(mgData.isTableNameValid(tableName)!==true){mgLogger.error(module,"Cannot show labels, tableName is invalid: ",tableName);return}var items=mgData.query(tableName),type=mgData.getPoiTypeFromTableName(tableName);var itemsPerPlace={};items.forEach(function(item){if(mgData.memberHasPlaces(item)===true){item.places.forEach(function(placeData){var placeId=placeData.place_id;var place=mgData.getPlace(placeData.place_id);if(!place||mgData.isSynopticTag(place.tag)){return}if(Array.isArray(itemsPerPlace[placeId])!==true){itemsPerPlace[placeId]=[]}itemsPerPlace[placeId].push({type:type,member:item})})}});var isPositionActive=true;Object.keys(itemsPerPlace).forEach(function(placeId,index){var position=mgPositionFactory(TYPES.LABEL_ONLY,"label-"+index,isPositionActive);position.setFromMemberPlace({place:mgData.getPlace(placeId),members:itemsPerPlace[placeId].map(function(data){return data.member})})});mgPinManager.updatePins()};var showMembersOnMap=function(){var timeKey="Show members on map";mgLogger.time(module,timeKey);showPois();mgLogger.timeEnd(module,timeKey);mgPinManager.updatePins();if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}window.setTimeout(_MobiGeoMap.handleSdkInitialized,200)};var showPois=function(){var members=mgData.query(["pois"]);if(mgJt.isEmpty(members)===true){mgLogger.debug(module,"No poi to display...")}else{members.forEach(function(member){var type=member.icon?TYPES.ICON:TYPES.LABEL_ONLY;displayPinForMember(member,type)});mgPinManager.updatePins();if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}}};var displayPinForMember=function(member,pinType,placeId,options){return _doPinForMember("show",member,pinType,placeId,options)};var hidePinForMember=function(member,pinType){return _doPinForMember("hide",member,pinType)};var removePinForMember=function(member,pinType){return _doPinForMember("delete",member,pinType)};var _doPinForMember=function(action,member,pinType,placeId,options){mgLogger.debug(module,"_doPinForMember",action,member,pinType);if(mgJt.isEmpty(member)===true){mgLogger.error(module,"displayPinForMember","Missing member argument",member);return}if(mgData.memberHasPlaces(member)!==true){return}var _positions=[];if(mgData.memberHasPlaces(member)===true){member.places.forEach(function(placeData){if(typeof placeId!=="undefined"&&placeData.place_id!==placeId){mgLogger.debug(module,"ignore place id "+placeId);return}var position=checkPositionAlreadyExists(placeData.place_id,pinType);if(position===false){if(action==="show"){var place=mgData.getPlace(placeData.place_id);if(!place||mgData.isSynopticTag(place.tag)){return}if(mgFeatures.isFavoritesEnabled()&&pinType===mgPositionManager.TYPES.SPOT){var favoritePosition=mgFavoritePositions.getByPlaceId(placeData.place_id);if(favoritePosition){_positions=_positions.concat(displayPinForMember(favoritePosition,mgPositionManager.TYPES.FAVORITE));return}}var isActive=true;position=mgPositionFactory(pinType,member.id+"-"+placeData.place_id,isActive);position.setFromSpot(member,place,options);positionsObject[position.place.id]=position}else if(action==="hide"){mgLogger.debug(module,"hide","No position found - Cannot hide "+member.type,member)}}else{if(!position.hasMember(member)){position.addMember(member);if(position.pin){if(options&&options.noLabel===true){position.pin.labelDisplayable=false}else{position.pin.labelDisplayable=true}}}}_positions.push(position);if(action==="show"&&position!==false){position.display()}else if(action==="hide"&&position!==false){position.hide()}else if(action==="delete"&&position!==false){position.hide();position.removePlaceMarkerFromMap();position.removePin();position.removeMember(member)}})}return _positions};var enableUserPinCssTransition=function(){if(mgJt.isEmpty(myPos.pin)===false&&myPos.displayed===true){window.setTimeout(myPos.pin.enableCssTransition,100)}};var disableUserPinCssTransition=function(){if(mgJt.isEmpty(myPos.pin)===false){myPos.pin.disableCssTransition()}};var handleZoneOrFloorChanged=function(){if(mgJt.isEmpty(myPos)===false&&mgJt.isEmpty(myPos.pin)===false&&myPos.displayed===true){myPos.displayPinLabel()}};PubSub.subscribe("mobigeo-zoneFloor-changed",handleZoneOrFloorChanged);var isSamePosition=function(posA,posB){return posA.floor===posB.floor&&posA.zone===posB.zone&&posA.x_m===posB.x_m&&posA.y_m===posB.y_m};var removePositions=function(criterias){for(var i=0;i<positions.length;i++){if(mgJt.isEmpty(positions[i])===false&&mgJt.matchCriterias(positions[i],criterias)===true){positions[i].removePin();if(positions[i]&&positions[i].place&&positions[i].place.id){delete positionsObject[positions[i].place.id]}delete positions[i]}}};var getHash=function(positionInfo){if(mgJt.isEmpty(positionInfo)===true){mgLogger.error(module,"Missing argument to generate hash",positionInfo)}else{return[positionInfo.x_m,positionInfo.y_m,positionInfo.zone,positionInfo.floor].join("/")}};var count=function(criteria){return mgJt.filterObjects(positions,criteria).length};var lastTempSpotShow;var showTempSpot=function(event){if(mgFeatures.isFavoritesEnabled()){var placeData=mgMapUi.getPlaceDataFromEvent(event);tempSpot.setFromL12n({zone:placeData.zone,floor:placeData.floor,xy_m:{x:placeData.x,y:placeData.y}});lastTempSpotShow=(new Date).getTime()}};var hideTempSpot=function(event){tempSpot.hide()};PubSub.subscribe("mobigeo-updateDone",initialize);return{get positions(){return positions},get start(){return start},get target(){return target},get tempSpot(){return tempSpot},get lastTempSpotShow(){return lastTempSpotShow},get TYPES(){return TYPES},get SVG_TYPES(){return SVG_TYPES},get POSITION_CSS_CLASS(){return POSITION_CSS_CLASS},getUserPosition:function(){return myPos},getPositionsMatchingTag:function(tag){return positions.filter(function(item,index){return item.place&&item.place.tag===tag})},push:function(pos){positions.push(pos);if(pos&&pos.place&&pos.place.id){positionsObject[pos.place.id]=pos}},isLabelOnly:isLabelOnly,count:count,reset:reset,initialize:initialize,getHash:getHash,showMembersOnMap:showMembersOnMap,checkPositionAlreadyExistsFromTag:checkPositionAlreadyExistsFromTag,checkPositionAlreadyExists:checkPositionAlreadyExists,clearAll:clearAll,displayPinForMember:displayPinForMember,hidePinForMember:hidePinForMember,removePinForMember:removePinForMember,enableUserPinCssTransition:enableUserPinCssTransition,disableUserPinCssTransition:disableUserPinCssTransition,isSamePosition:isSamePosition,removePositions:removePositions,showTempSpot:showTempSpot,hideTempSpot:hideTempSpot}}();var mgPinLabel=function(){var getLabel=function(pos){var _label="";switch(pos.type){case mgPositionManager.TYPES.USER_POS:break;case mgPositionManager.TYPES.ITI_START:_label="";break;case mgPositionManager.TYPES.ITI_TARGET:_label="";break;default:if(pos.type===mgPositionManager.TYPES.ICON&&pos.hasTitleOnMapProperty()!==true){break}if(pos.members.length>0){var conceptName=pos.conceptName;var ordered=mgData.sortMembers(pos.members);if(mgEditMode.isEnabled()&&pos.type===mgPositionManager.TYPES.LABEL_ONLY){_label=mgDraggableLabel.get(ordered,pos.place,conceptName)}else{var maxLabels=(conceptName?1:mgMapUi.getOptions().maxMembersTitlePerPinLabel)||2;ordered.forEach(function(member,index){if(index>maxLabels){return}if(index===maxLabels){_label+='<div class="pin-label-n-more">';if(conceptName){_label+=pos.members.length+" "+mgI18N.t("brands","data").toLowerCase()}else{_label+=mgI18N.t("andXMore","misc",[pos.members.length-maxLabels])}_label+="</div>";return}_label+=(index>0?",<br>":"")+(conceptName?'<span class="label-concept">'+conceptName+"</span>":mgData.getMemberTitle(member))})}}}return _label};return{getLabel:getLabel}}();var mgPinFactory=function(initialPos,isActive){"use strict";var id,module=mgLogger.modules.Pin,addedToDOM=false,tip_x,tip_y,zone,floor,xy_m,xy_v,masked=false,labelDisplayable=true,skipSelectPins=false,iconContainerEl,precisionEl,actualIconEl,iconLabelEl,buttonsContainerEl,accuracy,hasAccuracy=false,course,pin_w,pin_h,isUserLabelDisplayed=false,isTypeIcon=initialPos.type===mgPositionManager.TYPES.ICON,isTypeSpot=initialPos.type===mgPositionManager.TYPES.SPOT,isTypeTempSpot=initialPos.type===mgPositionManager.TYPES.TEMP_SPOT,isTypeFavorite=initialPos.type===mgPositionManager.TYPES.FAVORITE,isTypeUser=initialPos.type===mgPositionManager.TYPES.USER_POS,isTypeTrackee=initialPos.type===mgPositionManager.TYPES.TRACKEE,isTypeLabelOnly=initialPos.type===mgPositionManager.TYPES.LABEL_ONLY,isTypeFlagStart=initialPos.type===mgPositionManager.TYPES.ITI_START,isTypeFlagStep=initialPos.type===mgPositionManager.TYPES.ITI_STEP,isTypeFlagTarget=initialPos.type===mgPositionManager.TYPES.ITI_TARGET,isIconAnSVG=mgPositionManager.SVG_TYPES.indexOf(initialPos.type)>=0;var _options=mgMapConfig.get().Ui.pinOptions;var iconScaleOpts,canScale=mgPinManager.canScale(initialPos.type);if(canScale){iconScaleOpts=mgMapConfig.getIconScaleOptions()}var belongsToCurrentZoneAndFloor=function(){var currentZone=mgZoneManager.getCurrentZone();if(mgJt.isEmpty(currentZone)===true){return false}var currentFloor=currentZone.getCurrentFloor();if((isTypeSpot||isTypeFavorite||isTypeTempSpot)&&mgZoneManager.getZonesCount()>1&&currentZone.getId()===mgZoneManager.getRootZoneId()&&currentFloor.id===mgZoneManager.getRootZone().getMainFloor()){return true}return currentZone.getId()===zone&&currentFloor.id===floor};var show=function(updateIcon){if(isTypeIcon===true||initialPos.displayed===true){if(addedToDOM!==true||updateIcon===true){if(!actualIconEl.children.length){addToDOM()}}mgDt.showElement(iconContainerEl);if(iconLabelEl.innerHTML!==""&&labelDisplayable===true){displayLabel()}else{hideLabel()}}};var hide=function(){mgDt.hideElement(iconContainerEl,isTypeIcon)};var setPosition=function(pos,options){mgLogger.debug(module,"setPosition",pos.type);var displayIt=!options||options.skipDisplay!==true;if(mgJt.isEmpty(pos)===true){mgLogger.error(module,"Could no update location because position is empty",pos);return false}if(mgJt.isEmpty(pos.xy_m)===true){mgLogger.error(module,"This position has no coordonnates");hide();return false}var label=mgPinLabel.getLabel(pos);if(mgFeatures.isGeoGroupEnabled()===true){if(pos.type===mgPositionManager.TYPES.USER_POS){iconLabelEl.classList.add("geogroup-label-mypos")}else if(pos.type===mgPositionManager.TYPES.TRACKEE){var trackeeId=iconContainerEl.getAttribute("trackeeId");if(mgJt.isEmpty(trackeeId)===true){mgLogger.error(module,"This trackee position is missing trackeeId")}var trackeeInfos=mgGroupTrackeeManager.getTrackeeById(trackeeId);if(mgJt.isEmpty(trackeeInfos)===true){mgLogger.error(module,"This trackee is empty",trackeeId)}else{label=mgGroupUi.getGeoGroupLabel({pseudo:trackeeInfos.pseudo,position:""});if(trackeeInfos.pseudo!=="Vous"){iconLabelEl.classList.add("geogroup-label")}else{iconLabelEl.style.display="none"}}}if(mgJt.isEmpty(label)===false){label="<ul>"+label+"</ul>"}}if(isIconAnSVG===true){iconLabelEl.classList.add("svg-icon")}if(mgJt.isEmpty(label)===false){if(iconLabelEl.innerHTML!==label){iconLabelEl.innerHTML=label}if(mgEditMode.isEnabled()){mgDraggableLabel.initListeners(iconLabelEl)}}else{hideLabel()}xy_m=pos.xy_m;xy_v=mgMapTransform.m2v(xy_m);zone=pos.zone;floor=pos.floor;if(isTypeUser===true){accuracy=pos.accuracy;hasAccuracy=mgMapConfig.get().Ui.options.showUserPosPrecision===true&&typeof accuracy==="number";course=pos.course;if(mgJt.isEmpty(pos.course)===false){iconContainerEl.classList.add("icon-user-position-with-course")}else{iconContainerEl.classList.remove("icon-user-position-with-course")}}else{if(displayIt){mgDt.showElement(iconContainerEl)}if(mgEditMode.isEnabled()&&pos.type!==mgPositionManager.TYPES.LABEL_ONLY){mgDraggablePins.setDraggableIcon(iconContainerEl,pos.members[0],pos.place)}}var containerName=pos.type===mgPositionManager.TYPES.ICON||pos.type===mgPositionManager.TYPES.LABEL_ONLY?"mg-icons":"pins",newParentName="#"+containerName+"_"+pos.zone+"_"+pos.floor,newParentEl=mgMapUi.getMapstackEl().querySelector(newParentName);if(mgJt.isEmpty(newParentEl)===true){mgLogger.error(module,"The floor for this POI is missing","zone: "+pos.zone,"floor: "+pos.floor,newParentName)}else if(mgJt.isEmpty(iconContainerEl.parentElement)||newParentEl.getAttribute("id")!==iconContainerEl.parentElement.getAttribute("id")){newParentEl.appendChild(iconContainerEl)}if(_MobiGeoMap.ready===true){update()}updateTagAttribute();return displayIt};var getTransformOrigin=function(){var originX,originY;originX=pin_w!==0?100*(tip_x/pin_w):0;originY=pin_h!==0?100*(tip_y/pin_h):0;return originX+"% "+originY+"%"};var getTransformScale=function(){var scale;if(canScale!==true){scale=1/mgMapTransform.getS()}else{var zoneRatio;if(mgJt.isEmpty(mgZoneManager.getCurrentZone())!==true&&mgZoneManager.getCurrentZone().isRootZone()!==true){zoneRatio=iconScaleOpts.indoorRatio}else{zoneRatio=1}scale=Math.min(iconScaleOpts.max,Math.max(iconScaleOpts.min,iconScaleOpts.initial*zoneRatio*(1+(mgMap.getCurrentZoom()/mgMap.initialZoom-1)*iconScaleOpts.ratio)))/mgMapTransform.getS()}var scaleTransform;if(mgSupport.useCss3d===true){scaleTransform=" scale3d("+scale+", "+scale+", 1)"}else{scaleTransform=" scale("+scale+")"}return scaleTransform};var getTransformRotation=function(){if(typeof course!=="number"){course=0}var rotationValue=course;if(isTypeUser!==true){rotationValue-=mgMap.getCurrentRotation()}var transformRotation;if(mgSupport.useCss3d===false){transformRotation=" rotate("+rotationValue+"deg)"}else{transformRotation=" rotate3d(0,0,1,"+rotationValue+"deg)"}return transformRotation};var getIconTransform=function(transOrigin,transScale,transRotation,skipPositionUpdate){var transform=skipPositionUpdate!==true?getUpdatedCssPosition():{};transform[mgDt.getPrefixedCssProperty("transformOrigin")]=transOrigin;transform[mgDt.getPrefixedCssProperty("transform")]=transScale+(isTypeUser!==true?transRotation:"");return transform};var getUpdatedCssPosition=function(){return{left:xy_m.x/mgMap.getMap2ref()-tip_x+"px",top:xy_m.y/mgMap.getMap2ref()-tip_y+"px"}};var update=function(trOrigin,trScale,trRotation,skipPositionUpdate){var transformOrigin=trOrigin||getTransformOrigin(),transformScale=trScale||getTransformScale(),transformRotation=trRotation||getTransformRotation(),containerStyle=getIconTransform(transformOrigin,transformScale,transformRotation,skipPositionUpdate);containerStyle.opacity=1;mgDt.applyStyle(iconContainerEl,containerStyle);if(isTypeUser===true){actualIconEl.style[mgDt.getPrefixedCssProperty("transformOrigin")]=transformOrigin;actualIconEl.style[mgDt.getPrefixedCssProperty("transform")]=transformRotation;var rotateRule="";if(mgSupport.useCss3d===false){rotateRule+=" rotate("+mgMap.getCurrentRotation()*-1+"deg)"}else{rotateRule+=" rotate3d(0,0,1,"+mgMap.getCurrentRotation()*-1+"deg)"}var _style={};_style[mgDt.getPrefixedCssProperty("transform")]=rotateRule;if(buttonsContainerEl){mgDt.applyStyle(buttonsContainerEl,_style)}_style[mgDt.getPrefixedCssProperty("transformOrigin")]=transformOrigin;mgDt.applyStyle(iconLabelEl,_style)}if(hasAccuracy===true){var size=accuracy/mgMap.getMap2ref()*mgMapTransform.getS()*2,cssValues={width:size+"px",height:size+"px",borderRadius:size/2+"px",marginLeft:-size/2+tip_x+"px",marginTop:-size/2+tip_y+"px"};mgDt.applyStyle(precisionEl,cssValues);mgDt.applyStyle(iconContainerEl,cssValues);mgDt.applyStyle(actualIconEl,cssValues)}};var enableWillChangeProperty=function(){var willChangeValue="transform";_updateWillChangeValue(iconContainerEl,willChangeValue);if(isTypeUser===true){_updateWillChangeValue(actualIconEl,willChangeValue);_updateWillChangeValue(iconLabelEl,willChangeValue)}};var disableWillChangeProperty=function(){var willChangeValue="auto";_updateWillChangeValue(iconContainerEl,willChangeValue);if(isTypeUser===true){_updateWillChangeValue(actualIconEl,willChangeValue);_updateWillChangeValue(iconLabelEl,willChangeValue)}};var _updateWillChangeValue=function(el,value){mgDt.applyStyle(el,{willChange:value})};var remove=function(){var parentEl=iconContainerEl.parentNode;if(parentEl){parentEl.removeChild(iconContainerEl)}mgPinManager.removePin(id)};var displayUserLabel=function(){if(mgZoneManager.getCurrentZone().isRootZone()&&initialPos.zone!==mgZoneManager.getRootZoneId()&&mgZoneManager.getZone(initialPos.zone).getFloors().length>1){iconLabelEl.innerHTML='<div class="user-floor">'+mgI18N.t("Floor","map")+": "+mgZoneManager.getZone(initialPos.zone).getFloorLabelFromId(initialPos.floor)+"</div>";displayLabel();isUserLabelDisplayed=true}else if(isUserLabelDisplayed===true){hideLabel();iconLabelEl.innerHTML="";isUserLabelDisplayed=false}};var displayLabel=function(){mgDt.showElement(iconLabelEl)};var hideLabel=function(){mgDt.hideElement(iconLabelEl)};var disableCssTransition=function(){mgDt.applyStyle(iconContainerEl,{transition:"none"})};var enableCssTransition=function(){if(_options.useTransition===true){mgDt.applyStyle(iconContainerEl,{transition:"all .3s ease-out"})}};var setClassFromType=function(){iconContainerEl.classList.add(mgPositionManager.POSITION_CSS_CLASS[initialPos.type])};var initialize=function(){if(mgJt.isEmpty(_options.pinTips[initialPos.type])===true){mgLogger.error(module,"This type of Pin is not managed",initialPos.type);return}var pos_xy_m=initialPos.xy_m?initialPos.xy_m:{x:0,y:0};var pos_xy_v=mgMapTransform.m2v(pos_xy_m);var _width,_height;if(isTypeLabelOnly){_width=_height=0}else{_width=_options.pinWidth;_height=_options.pinHeight}if(isTypeIcon===true&&initialPos.members.length>=1&&mgJt.isEmpty(initialPos.members[0].icon_id)===false){_width=_options.iconWidth;_height=_options.iconHeight}if(isIconAnSVG===true){_width=_options.svgWidth;_height=_options.svgHeight}pin_w=_width*(mgSupport.env.type==="tablet"?1.5:1);pin_h=_height*(mgSupport.env.type==="tablet"?1.5:1);var tips=_options.pinTips[initialPos.type];tip_x=tips[0]*pin_w;tip_y=tips[1]*pin_h;zone=parseInt(initialPos.zone,10);floor=initialPos.floor;xy_m=pos_xy_m;xy_v=pos_xy_v;iconContainerEl=document.createElement("div");iconContainerEl.classList.add("pin");iconContainerEl.style.opacity=0;if(Array.isArray(initialPos.members)&&initialPos.members.length&&(isTypeSpot||isTypeFavorite)){if(initialPos.members[0].original_id){iconContainerEl.dataset.originalId=initialPos.members[0].original_id}iconContainerEl.dataset.id=initialPos.members[0].id;iconContainerEl.dataset.type=initialPos.members[0].type}if(initialPos.place){iconContainerEl.dataset.placeId=initialPos.place.id}if(isTypeTempSpot){iconContainerEl.dataset.type=mgData.POI_TYPES.temp_spot}var innerHtml=mgEditMode.isEnabled()?"":getButtonsHtml(initialPos.type);innerHtml+='<div class="pin-icon"></div>'+'<div class="label '+(mgEditMode.isEnabled()?"mg-drag-n-drop":"")+'"></div>';iconContainerEl.innerHTML=innerHtml;actualIconEl=iconContainerEl.querySelector(".pin-icon");iconLabelEl=iconContainerEl.querySelector(".label");buttonsContainerEl=iconContainerEl.querySelector(".pin-buttons-container");mgDt.hideElement(iconContainerEl);if(initialPos.type!==mgPositionManager.TYPES.ICON||belongsToCurrentZoneAndFloor()===true||mgSupport.isDegradeMode===true){addToDOM()}};var getButtonsHtml=function(){if(mgMapConfig.get().Ui.disablePinButtons){return""}var buttonsHtml=[],btnsStyle='style="'+["background-color:"+(mgMapUi.getOptions().pinButtonsBackgroundColor||"grey"),"color:"+(mgMapUi.getOptions().pinButtonsColor||"#fff")].join(";")+'"';if(mgFeatures.isRouteEnabled()&&mgMapConfig.get().Ui.options.goToContextualButton&&(isTypeSpot||isTypeFavorite)){buttonsHtml.push('<span class="pin-gothere-btn" title="'+mgI18N.t("compute","itinerary")+'" '+btnsStyle+">"+mgI18N.t("goThere","itinerary")+"</span>")}if(mgFeatures.isFavoritesEnabled()&&(isTypeSpot||isTypeUser||isTypeFavorite||isTypeTempSpot)){buttonsHtml.push('<span class="pin-share-btn" title="'+mgI18N.t("share","favorites")+'" '+btnsStyle+"></span>")}if(isTypeTempSpot||isTypeFavorite){buttonsHtml.push('<span class="pin-remove-btn" title="'+mgI18N.t("clearPosition","mapPosition")+'" '+btnsStyle+"></span>")}if(buttonsHtml.length){return'<div class="pin-buttons">'+'<div class="pin-buttons-container">'+buttonsHtml.join("")+"</div>"+"</div>"}return""};var addToDOM=function(){switch(initialPos.type){case mgPositionManager.TYPES.SPOT:case mgPositionManager.TYPES.FAVORITE:case mgPositionManager.TYPES.TEMP_SPOT:case mgPositionManager.TYPES.ITI_STEP:case mgPositionManager.TYPES.ITI_TARGET:case mgPositionManager.TYPES.LABEL_ONLY:setClassFromType();break;case mgPositionManager.TYPES.ITI_START:setClassFromType();if(mgMapUi.getOptions().flagStartLabelOnly){var iconContainerElFlagStart=iconContainerEl.querySelector(".pin-icon");iconContainerElFlagStart.innerHTML=mgI18N.t("flagstarlabel","itinerary");iconContainerElFlagStart.setAttribute("class","label-flag-start")}break;case mgPositionManager.TYPES.USER_POS:enableWillChangeProperty();setClassFromType();break;case mgPositionManager.TYPES.ICON:if(initialPos.members[0]&&initialPos.members[0].icon!==null){var icon=mgData.getById(mgData.TABLES.ICONS,initialPos.members[0].icon);var iconItem=icon&&(icon.icon||icon.lump&&icon.lump.icon);if(iconItem){var url=isActive?iconItem.icon:iconItem.iconGrey;if(iconItem.isSecure&&iconItem.isSvg){mgDt.appendSvg(actualIconEl,iconItem.icon)}else{mgDt.applyStyle(actualIconEl,{backgroundImage:"url("+encodeURI(url)+")"})}}}break;case mgPositionManager.TYPES.TRACKEE:var trackeeInfos=mgGroupTrackeeManager.getTrackeeById(initialPos.trackeeId);if(mgJt.isEmpty(initialPos.trackeeId)===true){mgLogger.error(module,"This trackee position is missing trackeeId")}if(mgJt.isEmpty(trackeeInfos)===true){mgLogger.error(module,"This trackee is empty",initialPos.trackeeId)}else{iconContainerEl.setAttribute("trackeeId",trackeeInfos.id);actualIconEl.innerHTML=mgTemplates["geogroup-trackee-icon"].render({color:trackeeInfos.color})}setClassFromType();break;default:mgLogger.error(module,"Unsupported icon type: "+initialPos.type)}if(isTypeUser===true&&mgSupport.isDegradeMode===false){enableCssTransition()}if(isIconAnSVG===true){iconContainerEl.setAttribute("data-icon",initialPos.type)}mgDt.applyStyle(iconContainerEl,{width:pin_w+"px",height:pin_h+"px"});if(mgMapConfig.get().Ui.options.showUserPosPrecision===true&&initialPos.polestar===true){precisionEl=document.createElement("div");precisionEl.classList.add("precision");mgDt.applyStyle(precisionEl,{position:"absolute",backgroundColor:"rgba(105,195,239,0.3)"});iconContainerEl.insertBefore(precisionEl,iconContainerEl.children[0])}addedToDOM=true};var updateTagAttribute=function(tag){iconContainerEl.setAttribute("data-tag",initialPos.place&&initialPos.place.tag?initialPos.place.tag:"")};var overrideIconStyle=function(selector,style){var elements=actualIconEl.querySelectorAll(selector);if(mgJt.isEmpty(elements)===false){for(var i=0;i<elements.length;i++){mgDt.applyStyle(elements[i],style)}}};var unfoldLabel=function(foldOthers){mgDraggableLabel.unfold(iconContainerEl,foldOthers)};initialize();return{show:show,hide:hide,remove:remove,update:update,setPosition:setPosition,displayLabel:displayLabel,hideLabel:hideLabel,displayUserLabel:displayUserLabel,unfoldLabel:unfoldLabel,overrideIconStyle:overrideIconStyle,belongsToCurrentZoneAndFloor:belongsToCurrentZoneAndFloor,getTransformOrigin:getTransformOrigin,getTransformScale:getTransformScale,getTransformRotation:getTransformRotation,disableCssTransition:disableCssTransition,enableCssTransition:enableCssTransition,enableWillChangeProperty:enableWillChangeProperty,disableWillChangeProperty:disableWillChangeProperty,isTypeIcon:function(){return isTypeIcon===true},isTypeUser:function(){return isTypeUser===true},isTypeTrackee:function(){return isTypeTrackee===true},isTypeLabelOnly:function(){return isTypeLabelOnly===true},isTypeSpot:function(){return isTypeSpot===true},isTypeFavorite:function(){return isTypeFavorite===true},isTypeTempSpot:function(){return isTypeTempSpot===true},isTypeFlagStart:function(){return isTypeFlagStart===true},isTypeFlagStep:function(){return isTypeFlagStep===true},isTypeFlagTarget:function(){return isTypeFlagTarget===true},get displayed(){return iconContainerEl.classList.contains(mgDt.FORCED_HIDE_CSS_CLASS)===false&&iconContainerEl.parentElement&&iconContainerEl.parentElement.classList.contains(mgDt.FORCED_HIDE_CSS_CLASS)===false},getZone:function(){return zone},getFloor:function(){return floor},get x(){return xy_m.x},get y(){return xy_m.y},get id(){return id},set id(value){id=value},get type(){return initialPos.type},get domEl(){return iconContainerEl},get masked(){return masked},set masked(value){masked=value},set labelDisplayable(value){labelDisplayable=value},get skipSelectPins(){return skipSelectPins},set skipSelectPins(value){skipSelectPins=value===true}}};var mgPinManager=function(){"use strict";var pinIdSequence=1,module=mgLogger.modules.Pin,pins=[];var addPin=function(pin){pin.id=pinIdSequence++;pins.push(pin)};var reset=function(){mgLogger.debug(module,"Reset pins ("+pins.length+")");pins.forEach(function(pin,index){pin.remove()});mgJt.emptyArray(pins)};var filterPins=function(zone,floor,types){if(typeof zone!=="number"){mgLogger.error(module,"Unexpected `zone` argument of type "+typeof zone,zone);return}if(typeof floor!=="string"){mgLogger.error(module,"Unexpected `floor` argument of type "+typeof floor,floor);return}var _types;if(types){if(Array.isArray(types)){_types=types}else if(typeof types==="string"){_types=[types]}else{mgLogger.error(module,"Unexpected `types` argument of type "+typeof types,types);return}}var filteredPins=[];for(var i=0;i<pins.length;i++){var pin=pins[i];if(pin.getZone()===zone&&pin.getFloor()===floor&&(!_types||_types.indexOf(pin.type)!==-1)){filteredPins.push(pin)}}return filteredPins};var updatePins=function(skipPositionUpdate,updateIcon){if(pins.length===0){return}mgLogger.debug(module,"updatePins ("+pins.length+")");var transformsByType={};var definedTypes=mgMapConfig.get().Ui.dynamicIconDisplayTypes||[];for(var i=0;i<pins.length;i++){var pin=pins[i];if(pin.belongsToCurrentZoneAndFloor()||mgZoneManager.getCurrentZone().isRootZone()&&(pin.isTypeUser()||pin.isTypeFlagStart()||pin.isTypeFlagTarget())){if(typeof transformsByType[pin.type]==="undefined"){transformsByType[pin.type]={}}if(typeof transformsByType[pin.type].trOrigin==="undefined"){transformsByType[pin.type].trOrigin=pin.getTransformOrigin()}if(typeof transformsByType[pin.type].trScale==="undefined"){transformsByType[pin.type].trScale=pin.getTransformScale()}if(typeof transformsByType[pin.type].trRotation==="undefined"){transformsByType[pin.type].trRotation=pin.getTransformRotation()}pin.update(transformsByType[pin.type].trOrigin,transformsByType[pin.type].trScale,transformsByType[pin.type].trRotation,skipPositionUpdate);if(skipPositionUpdate!==true){if(mgMapConfig.get().Ui.dynamicIconDisplay===true){for(var t=0;t<definedTypes.length;t++){if(mgPositionManager.TYPES[definedTypes[t]]===pin.type){if(pin.skipSelectPins===true||pin.masked===false&&pin.displayed!==true||updateIcon){pin.show(updateIcon)}else if(pin.masked===true&&pin.displayed===true){pin.hide()}}}}else if(pin.displayed!==true){pin.show(updateIcon)}}if(pin.isTypeUser()||pin.isTypeFavorite()){pin.show()}}else if(skipPositionUpdate!==true&&pin.displayed===true){pin.hide()}}};var handleZoneOrFloorChanged=function(){updatePins()};PubSub.subscribe("mobigeo-zoneFloor-changed",handleZoneOrFloorChanged);var enableWillChangeProperty=function(){if(mgMapConfig.get().Ui.useWillChange===true){for(var i=0;i<pins.length;i++){if(pins[i].isTypeIcon()!==true||pins[i].belongsToCurrentZoneAndFloor()){pins[i].enableWillChangeProperty()}}}};var disableWillChangeProperty=function(){if(mgMapConfig.get().Ui.useWillChange===true){for(var i=0;i<pins.length;i++){if(pins[i].isTypeUser()!==true){pins[i].disableWillChangeProperty()}}}};var removePin=function(pinId){for(var i=0,length=mgPinManager.getPins().length;i<length;i++){if(pinId===mgPinManager.getPins()[i].id){mgPinManager.getPins().splice(i,1);return}}mgLogger.error(module,"Could not find the pin to delete of id "+pinId)};var canScale=function(type){var confIconScale=mgMapConfig.get().Ui.iconScale;if(!confIconScale||Array.isArray(confIconScale.types)!==true){return true}return confIconScale.types.indexOf(type)!==-1};var selectPinsInsideviewport=function(type){for(var p=0;p<pins.length;p++){if(pins[p].type===type&&pins[p].belongsToCurrentZoneAndFloor()){if(mgViewport.isInside({x:pins[p].x,y:pins[p].y})===false){pins[p].masked=true}}}};var reducePinClusters=function(type){var candidates=[],clusters=[],threshold=mgMapConfig.get().Ui.pinClusterRange;if(threshold===undefined){return false}for(var p=0,tmp;p<pins.length;p++){if(pins[p].type===type&&pins[p].belongsToCurrentZoneAndFloor()&&pins[p].masked===false){pins[p].tmp_xy_v=mgMapTransform.r2v({x:pins[p].x,y:pins[p].y});tmp=candidates.push(p)}}if(candidates.length>0){var currentCluster=[],p0,it=0;var _getClusters=function(){it++;if(candidates.length===0){return}var pin_0=candidates.splice(0,1),pin_1=[],test_pin;if(pin_0.length===1){p0=pin_0[0];if(currentCluster.length===0){currentCluster.push(p0)}var pp=0;while(pp<candidates.length){test_pin=pins[candidates[pp]];if(pins[p0].getZone()===test_pin.getZone()&&pins[p0].getFloor()===test_pin.getFloor()&&mgUtils.dist2(pins[p0].tmp_xy_v,test_pin.tmp_xy_v)<threshold){pin_1=candidates.splice(pp,1);currentCluster.push(pin_1[0])}else{pp++}}}clusters.push(currentCluster);currentCluster=[];_getClusters()};_getClusters()}for(var c=0;c<clusters.length;c++){if(clusters[c].length>1){pins[clusters[c][0]].masked=false;for(p=1;p<clusters[c].length;p++){pins[clusters[c][p]].masked=true}}}};var selectPinsOfDefinedTypes=function(){var definedTypes=mgMapConfig.get().Ui.dynamicIconDisplayTypes||[];for(var t=0;t<definedTypes.length;t++){if(mgPositionManager.TYPES[definedTypes[t]]!==undefined){selectPins(mgPositionManager.TYPES[definedTypes[t]])}}};var selectPins=function(type){if(pins.length===0){return}for(var p=0;p<pins.length;p++){if(pins[p].type===type&&pins[p].belongsToCurrentZoneAndFloor()){pins[p].masked=false}}selectPinsInsideviewport(type);reducePinClusters(type);for(p=0;p<pins.length;p++){var pin=pins[p];if(pin.type===type){if(pin.skipSelectPins===true){pin.show()}else if(pin.belongsToCurrentZoneAndFloor()){if(pin.masked===false){pin.show()}else{pin.hide()}}}}};return{reset:reset,addPin:addPin,removePin:removePin,getPins:function(){return pins},filterPins:filterPins,canScale:canScale,updatePins:updatePins,selectPins:selectPins,selectPinsOfDefinedTypes:selectPinsOfDefinedTypes,enableWillChangeProperty:enableWillChangeProperty,disableWillChangeProperty:disableWillChangeProperty}}();var mgAroundMeUi=function(){"use strict";var module=mgLogger.modules.Modal;var values=function(){var _values;return{get:function(){if(!_values){_values={nbResults:mgAroundMe.getDefaultMaxNbResults(),type:mgData.POI_TYPES.service,category:null};if(mgFeatures.isPoiStatesEnabled()){var poiStates=mgMapConfig.get().poiStates;if(poiStates){_values.isStateChecked=false;_values.state="{ "+Object.keys(poiStates).map(function(stateProp){return'"'+stateProp+'": '}).join(", ")+" }"}}}return _values},set:function(prop,value){_values[prop]=value}}}();var getTypesData=function(){return Object.keys(mgData.POI_TYPES).map(function(key){var value=mgData.POI_TYPES[key];return{value:value,isSelected:value===values.get().type}})};var getCategoriesData=function(){if(!values.get().type){return}var categories=MobiGeo.Map.POI.getCategoryIds(values.get().type);return[{label:mgI18N.t("allCategories","aroundMe"),value:null,isSelected:values.get().category===null}].concat((categories||[]).map(function(category){return{label:category,value:category,isSelected:values.get().category===category}}))};var nbResultsInputEl,typeSelectEl,categorySelectEl,stateCheckboxEl,stateTextareaEl;var show=function(){if(mgFeatures.isAroundMeEnabled()!==true){mgLogger.error(module,"Around Me feature is disabled");return}var okButton=mgModalButton.ok;okButton.cb=onSubmit;var templateData={nbResultsLabel:mgI18N.t("nbResults","aroundMe"),nbResults:values.get().nbResults,typeLabel:mgI18N.t("type","aroundMe"),types:getTypesData(),categoryLabel:mgI18N.t("category","aroundMe"),categoriesHtml:mgTemplates["aroundme-categories"].render({categories:getCategoriesData()}),isStateDisplayed:mgFeatures.isPoiStatesEnabled(),stateLabel:mgI18N.t("state","aroundMe"),isStateChecked:values.get().isStateChecked,state:values.get().state};var modalEl=mgModal.show({title:mgI18N.t("_name_","aroundMe"),content:mgTemplates.aroundme.render(templateData),buttons:[mgModalButton.close,okButton]});nbResultsInputEl=modalEl.querySelector("#am-nb-results input");typeSelectEl=modalEl.querySelector("#am-type select");typeSelectEl.addEventListener("change",onTypeSelect);categorySelectEl=modalEl.querySelector("#am-category select");categorySelectEl.addEventListener("change",onCategorySelect);if(mgFeatures.isPoiStatesEnabled()){stateCheckboxEl=modalEl.querySelector("#am-state input");stateCheckboxEl.addEventListener("change",onStateToggle);stateTextareaEl=modalEl.querySelector("#am-state textarea")}};var onTypeSelect=function(event){values.set("type",typeSelectEl.selectedOptions[0].value);categorySelectEl.innerHTML=mgTemplates["aroundme-categories"].render({categories:getCategoriesData()})};var onCategorySelect=function(event){if(!event.target.value){for(var i=0;i<categorySelectEl.children.length;i++){var optionEl=categorySelectEl.children.item(i);if(optionEl.value){optionEl.selected=false}}}};var onStateToggle=function(event){var isEnabled=stateCheckboxEl.checked;values.set("isStateChecked",isEnabled);if(isEnabled){stateTextareaEl.removeAttribute("disabled")}else{stateTextareaEl.setAttribute("disabled","")}};var onSubmit=function(){var userPos=mgPositionManager.getUserPosition();if(_MobiGeoLocation.isUserOnSite()===false&&!(mgMapConfig.get().location&&mgMapConfig.get().location.useGpsLocation)||typeof userPos.zone!=="number"||typeof userPos.floor!=="string"){mgModal.showMessage({content:mgI18N.t("positionNotLocated","mapPosition")})}else{if(nbResultsInputEl.value.length===0){mgMessage.displayTooltip(nbResultsInputEl.previousElementSibling,mgI18N.t("missingValue","misc"));return}values.set("nbResults",parseInt(nbResultsInputEl.value,10));var categories=[];for(var i=0;i<categorySelectEl.children.length;i++){var optionEl=categorySelectEl.children.item(i);if(optionEl.value&&optionEl.selected===true){categories.push(optionEl.value)}}if(stateTextareaEl){values.set("state",stateTextareaEl.value)}var state;if(values.get().isStateChecked){try{state=JSON.parse(values.get().state)}catch(e){mgMessage.displayTooltip(stateTextareaEl,e.message);return}}MobiGeo.Map.POI.clear();MobiGeo.Map.POI.aroundMe({maxNbResults:values.get().nbResults,type:values.get().type,category:categories.length>0?categories:null,state:state},function(err,results){if(err){mgModal.showMessage({content:err});return}MobiGeo.Map.POI.show(results);mgModal.hide()})}};return{show:show}}();var mgAroundMe=function(){"use strict";var module=mgLogger.modules.POI;var getDefaultMaxNbResults=function(){return mgMapConfig.get().aroundMe.maxNbResults};var filterByState=function(pois,apiType,state,errorCb){mgLogger.debug(module,"Around me: applying filter ",state);if(typeof state===null||typeof state!=="object"||Object.keys(state).length===0){mgLogger.error(module,"Empty state object",state);return null}var stateProps=[],propNames=Object.keys(state);for(var i=0;i<propNames.length;i++){var propValue=state[propNames[i]];if(typeof propValue!=="number"){mgLogger.error(module,"Invalid value for "+propNames[i]+", ignoring it.",state);errorCb(_MobiGeoMapPOI.ERRORS.AM_INVALID_POI_STATE_PROPERTY);return null}stateProps.push({name:propNames[i],value:propValue})}var _filtered={};Object.keys(pois).filter(function(poiId){var poi=pois[poiId],includePoi=true;stateProps.forEach(function(prop){var storedValue=mgPoiStates.get(poi.original_id,apiType,prop.name);if(storedValue!==prop.value){includePoi=false}});if(includePoi){_filtered[poi.id]=poi}});return _filtered};var getPoisFromCriterias=function(poiType,poiCatIds,poiState,errorCb){var pois;if(!poiType){mgLogger.error(module,"Missing POI type value (see MobiGeo.Map.POI.types for supported values)");errorCb(_MobiGeoMapPOI.ERRORS.INVALID_POI_TYPE);return null}else{if(mgData.isTypeValid(poiType)!==true){mgLogger.error(module,"Unexpected POI type value (see MobiGeo.Map.POI.types for supported values) : "+poiType);errorCb(_MobiGeoMapPOI.ERRORS.INVALID_POI_TYPE);return null}var authorizedTables=mgMapConfig.get().aroundMe.authorizedTables;if(Array.isArray(authorizedTables)&&authorizedTables.indexOf(mgData.getTableNameFromType(poiType))===-1){mgLogger.error(module,"Around Me feature is not enabled for POI type "+poiType);errorCb(_MobiGeoMapPOI.ERRORS.INVALID_POI_TYPE);return null}}var tableName=mgData.getTableNameFromType(poiType);if(!poiCatIds){pois=_getAllPois(poiType)}else{var category,results,categoriesType=mgData.getCategoriesTableNameFromType(poiType),categories=mgData.getCollection(categoriesType).data,catfi=mgData.Attr[categoriesType];pois={};for(var index=0;index<poiCatIds.length;index++){var poiCatId=poiCatIds[index];var catIds=Object.keys(categories);for(var i=0;i<catIds.length;i++){var cat=categories[catIds[i]];if(cat[catfi.original_id]===poiCatId){category=cat;break}}if(!category){mgLogger.error(module,"POI category '"+poiCatId+"' for type '"+poiType+"' not found");errorCb(_MobiGeoMapPOI.ERRORS.AM_INVALID_POI_CATEGORY);return null}var children=category[catfi.lump][tableName];if(!children||children.lengh===0){mgLogger.error(module,"POI category '"+poiCatId+"' is empty");errorCb(_MobiGeoMapPOI.ERRORS.AM_CATEGORY_IS_EMPTY);return null}results=mgData.applyFactoryToIds(children,tableName);for(var poi in results){pois[poi]=results[poi]}}}if(poiState!==null&&typeof poiState!=="undefined"){if(mgFeatures.isPoiStatesEnabled()!==true){mgLogger.error(module,"Ignoring POI state filter as POI states feature is not activated",poiState)}else{var filterResults=[],_arrPoiState=Array.isArray(poiState)?poiState:[poiState];for(var j=0;j<_arrPoiState.length;j++){var result=filterByState(pois,poiType,_arrPoiState[j],errorCb);if(result===null){return null}filterResults.push(result)}if(filterResults.length===1){return filterResults[0]}else{var mergedResults={};filterResults.forEach(function(results){Object.keys(results).forEach(function(poiId){if(typeof mergedResults[poiId]==="undefined"){mergedResults[poiId]=results[poiId]}})});return mergedResults}}}return pois};var _getAllPois=function(type){return mgData.applyFactoryToCollection(mgData.getTableNameFromType(type))};var search=function(poiType,poiCatId,poiState,maxNbResults,cb){var pois=getPoisFromCriterias(poiType,poiCatId,poiState,cb);if(pois===null){return}if(typeof maxNbResults!=="number"){if(maxNbResults){mgLogger.error(module,"Unexpected 'maxNbResults' value: "+maxNbResults);cb(_MobiGeoMapPOI.ERRORS.AM_INVALID_MAX_NB_RESULTS);return}else{maxNbResults=getDefaultMaxNbResults()}}if(mgFeatures.isLocationEnabled()!==true){mgLogger.error(module,"Feature unavailable without location");cb(_MobiGeoMapPOI.ERRORS.AM_LOCATION_FEATURE_DISABLED);return}var userPosition=mgPositionManager.getUserPosition();if(_MobiGeoLocation.isUserOnSite()===false&&!(mgMapConfig.get().location&&mgMapConfig.get().location.useGpsLocation)||typeof userPosition.zone!=="number"||typeof userPosition.floor!=="string"){mgLogger.error(module,"User is not located");cb(_MobiGeoMapPOI.ERRORS.AM_USER_HAS_NO_POSITION);return}return _performSearch(pois,poiType,maxNbResults,userPosition,cb)};var _getPlaces=function(pois,type,filter){var placesCount=0,placesPerPoi={},hasFilter=typeof filter==="function";Object.keys(pois).forEach(function(poiId){var places=pois[poiId].places;if(Array.isArray(places)&&places.length>0){places.forEach(function(placeData){var place=mgData.getPlace(placeData.place_id);if(!hasFilter||filter(place)===true){if(Array.isArray(placesPerPoi[poiId])!==true){placesPerPoi[poiId]=[]}placesPerPoi[poiId].push(place);placesCount++}})}});return{count:placesCount,perPoi:placesPerPoi}};var getDistancePerPlace=function(places,gateway,position){var userAltitude=mgZoneManager.getAltitude(position.zone,position.floor),poiIds=Object.keys(places.perPoi),distancePerPlace=[],currentPoiId,positionToGtwDist;if(gateway){positionToGtwDist=mgUtils.dist(position.xy_m,gateway);mgLogger.debug(module,"Distance from position to closest gateway: "+positionToGtwDist,gateway)}var iterateOnPlaces=function(place){var data={placeId:place.id,poiId:currentPoiId,zone:place.zone,floor:place.floor};var distance;if(position.zone===place.zone&&position.floor!==place.floor&&gateway){distance=positionToGtwDist+mgUtils.dist(gateway,place)}else{distance=mgUtils.dist(position.xy_m,place)}distance*=mgMapConfig.get().ref2meters;data.flytime=distance/mgMapConfig.get().walkSpeed+getTimePenalty(userAltitude,position.zone!==place.zone,position.floor!==place.floor,place);distancePerPlace.push(data)};for(var i=0;i<poiIds.length;i++){currentPoiId=poiIds[i];places.perPoi[currentPoiId].forEach(iterateOnPlaces)}return distancePerPlace};var _performSearch=function(pois,poiType,maxNbResults,position,cb){var places=_getPlaces(pois,poiType,function(place){return place.zone===position.zone});mgLogger.debug(module,"Found "+places.count+" places in zone "+position.zone);if(places.count<maxNbResults){var oldPlacesCount=places.count;places=_getPlaces(pois,poiType);mgLogger.info(module,"Only "+oldPlacesCount+" POI"+(oldPlacesCount<2?" was":"s were")+" found in user zone, using all zones: "+places.count)}var gateway=mgUtils.getClosestGatewayOnSameZoneFloorArea(position);var distancePerPlace=getDistancePerPlace(places,gateway,position);distancePerPlace.sort(function(data1,data2){if(data1.flytime>data2.flytime){return 1}else if(data1.flytime<data2.flytime){return-1}else{return 0}});mgLogger.debug(module,"Distance per place: ",distancePerPlace);var closestPoisData=distancePerPlace.slice(0,maxNbResults),results=closestPoisData.map(function(poiData){return{_id:pois[poiData.poiId].id,label:pois[poiData.poiId].title,type:poiType,flytime:Math.round(poiData.flytime),collection:pois[poiData.poiId].collection,placeId:poiData.placeId,placeLabel:mgZoneManager.getZone(poiData.zone).getFullFloorLabel(poiData.floor)}});cb(null,results);return results};var getTimePenalty=function(userAltitude,isDifferentZone,isDifferentFloor,place){var mapConf=mgMapConfig.get(),placeAltitude,floorsOnPath;if(isDifferentZone!==true){if(isDifferentFloor!==true){return 0}placeAltitude=mgZoneManager.getAltitude(place.zone,place.floor);floorsOnPath=Math.abs(userAltitude-placeAltitude)/mapConf.altitudePerFloor}else if(isDifferentZone===true){placeAltitude=mgZoneManager.getAltitude(place.zone,place.floor);floorsOnPath=Math.abs(userAltitude)+Math.abs(placeAltitude)}return mapConf.minTimeFloorChange+mapConf.timePerFloorChange*floorsOnPath};return{search:search,getDefaultMaxNbResults:getDefaultMaxNbResults}}();var mgPoiStates=function(){"use strict";var module=mgLogger.modules.POI,_storedStates;var ignoredProps=["id","originalId","type"];var reset=function(){_storedStates={}};var setState=function(pois){if(Array.isArray(pois)!==true){mgLogger.error(module,"Cannot store POI states, expected an array but got: ",pois);return}pois.forEach(function(poi){if(typeof poi.type==="undefined"||poi.type===null){mgLogger.error(module,"Missing POI type, ignoring this entry: ",poi);return}if(mgData.isTypeValid(poi.type)!==true){mgLogger.error(module,"Invalid POI type, ignoring this entry: ",poi);return}if(!_storedStates[poi.type]){_storedStates[poi.type]={}}var poiId=poi.id;if(typeof poiId==="undefined"||poiId===null){mgLogger.error(module,"Missing POI id, ignoring this entry: ",poi);return}var fieldsSet=[];Object.keys(poi).forEach(function iterateOnPoisToUpdate(prop){if(ignoredProps.indexOf(prop)!==-1){return}if(!_storedStates[poi.type][poiId]||_storedStates[poi.type][poiId][prop]!==poi[prop]){fieldsSet.push(prop)}});_storedStates[poi.type][poiId]=poi;if(fieldsSet.length===0){mgLogger.debug(module,"POI state: nothing to do.",poi)}else{mgLogger.debug(module,"POI state: fields to handle: "+fieldsSet.join(", "),poi);var el=getElementFromOriginalId(poiId,poi.type);if(!el){mgLogger.error(module,"Could not find DOM element for this POI",poi);return}if(el instanceof SVGElement){var classNames=el.className.baseVal.split(" ");classNames=classNames.filter(function(className){for(var i=0;i<fieldsSet.length;i++){if(className.indexOf(fieldsSet[i])===0){return false}}return true});fieldsSet.forEach(function(poiField){classNames.push(poiField+poi[poiField])});el.className.baseVal=classNames.join(" ")}else{mgLogger.info(module,"Too many place members",poi)}}})};var getElementFromOriginalId=function(originalId,type){var member=mgData.getMemberFromIdAndType(originalId,type);if(mgData.memberHasPlaces(member)!==true){return}var tags=[];member.places.forEach(function(placeData){if(placeData){var placeId;if(typeof placeData==="number"){placeId=placeData}else if(typeof placeData==="object"){placeId=placeData.place_id}if(typeof placeId==="number"){var place=mgData.getPlace(placeId);if(place){tags.push(place.tag)}}}});switch(tags.length){case 0:return;case 1:return document.getElementById(tags[0]);default:mgLogger.error(module,"Too many place members",originalId);return}};var get=function(id,type,stateProp){if(!_storedStates||!_storedStates[type]||!_storedStates[type][id]){var defaultValue=mgMapConfig.get().poiStates[stateProp].default;if(typeof defaultValue==="undefined"){mgLogger.error(module,"No default value for POI state property: "+stateProp)}return defaultValue}return _storedStates[type][id][stateProp]};reset();return{reset:reset,setState:setState,get:get}}();var mgPage=function(){"use strict";var ATTR_TO_PREVENT_SCROLL="data-prevent-scroll-on-this",skipForTagNames=["svg","path","rect","polygon"];var preventScrollOnThis=function(element){if(mgSupport.touch===true){element.addEventListener(mgSupport.interaction.move,preventScroll)}else{element.addEventListener("mousemove",preventScroll)}};var enableScrollOnThis=function(element){if(mgSupport.touch===true){element.removeEventListener(mgSupport.interaction.move,preventScroll)}else{element.removeEventListener("mousemove",preventScroll)}};var preventScrollMove=function(event){event.preventDefault()};var preventScroll=function(event){if(mgDraggablePins.isDraggable(event.target)){return}var skipAttributeCheck=shouldSkip(event.target);if(skipAttributeCheck!==true){if(event.target.hasAttribute("")===true||mgJt.isEmpty(mgDt.findParentNodeWithAttribute(event.target,ATTR_TO_PREVENT_SCROLL))===false){return}var nodeName=event.target.nodeName.toLowerCase();if(nodeName==="input"||nodeName==="textarea"||nodeName==="label"||nodeName==="a"||nodeName==="button"){return}}event.preventDefault()};var shouldSkip=function(el){var tagName=el.tagName?el.tagName.toLowerCase():"";if(skipForTagNames.indexOf(tagName)!==-1||mgDt.getClassList(el).indexOf("pin-icon")!==-1||el.id==="smallwindow"){return true}else{return false}};return{preventScrollOnThis:preventScrollOnThis,enableScrollOnThis:enableScrollOnThis}}();function mgZoneFactory(zoneConfig){"use strict";var module=mgLogger.modules.Zone,conf={},currentFloor=null,elevator,divNode=null,floorsData=[],userIsIn=false,perimeter_r=[],center=null,width=null,height=null,subscriptions=[];var initialize=function(){for(var param in zoneConfig){if(zoneConfig.hasOwnProperty(param)===false){continue}conf[param]=zoneConfig[param]}conf.floors.sort(function(a,b){return b.order-a.order});for(var f=0;f<conf.floors.length;f++){var floor=conf.floors[f];floorsData.push({floorId:floor.id,floorLabel:getFloorShortLabel(floor),routingAreas:getRoutingAreas(floor)});mgZoneManager.appendMapToLoad({zoneId:conf.id,floorId:floor.id})}};var getFloorShortLabel=function(floor){if(mgJt.isEmpty(floor.shortLabel)===true){return floor.id}else if(mgJt.isEmpty(floor.shortLabel)===false&&mgJt.isEmpty(floor.shortLabel[_MobiGeo.getLang()])===false){return floor.shortLabel[_MobiGeo.getLang()]}};var getRoutingAreas=function(floor){if(mgJt.isEmpty(floor.areas)===true){return[]}return floor.areas};var getFloorLabelFromId=function(floorId){for(var i=0;i<floorsData.length;i++){if(floorsData[i].floorId===floorId){return floorsData[i].floorLabel}}return};var setCurrentFloor=function(floorId,initPhase){if(!initPhase&&mgPermissions.canSeeFloor(conf.id,floorId)!==true){mgPermissions.handleFloorAccessRestricted(conf.id,floorId);return}if(typeof floorId!=="string"){floorId=String(floorId)}var newCurrentFloor=getFloorObject(floorId);if(mgJt.isEmpty(newCurrentFloor)===true){mgLogger.error(module,"Could not setCurrentFloor: this floor does not exist.",floorId,"(zoneId: "+conf.id+")");return false}if(mgJt.isEmpty(currentFloor)===false){mgZoneManager.showHideItems("hide",conf.id,currentFloor.id,["floor"])}mgZoneManager.showHideAllItems("hide",["pins","labels","mg-icons"]);mgZoneManager.showHideItems("show",conf.id,floorId,["floor","pins","labels","mg-icons"]);if(isRootZone()&&floorId===conf.mainFloor&&mgZoneManager.getZonesCount()>1){mgZoneManager.showHideAllItems("show",["pins","labels"])}if(mgJt.isEmpty(elevator)===false){elevator.setSelectedFloor(floorId)}if(mgMapUi.getOptions().showMapTitle===true&&mgJt.isEmpty(mgZoneManager.getCurrentZone())===false&&conf.id===mgZoneManager.getCurrentZone().getId()){mgMapUi.setTitle(getFullFloorLabel(floorId))}if(newCurrentFloor.isUnderground===true){mgZoneManager.getRootZone().hide()}else{mgZoneManager.getRootZone().show()}currentFloor=newCurrentFloor;if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}if(mgJt.isEmpty(mgZoneManager.getCurrentZone())===false&&conf.id===mgZoneManager.getCurrentZone().getId()){mgZoneManager.triggerZoneFloorChangedEvent(conf.id,currentFloor.id)}return true};var getFloorLabel=function(floorId){var floor=getFloorObject(floorId);if(floor){if(floor.longLabel&&floor.longLabel[MobiGeo.lang]){return floor.longLabel[MobiGeo.lang]}else if(conf.defaultLongLabel&&conf.defaultLongLabel[MobiGeo.lang]){return conf.defaultLongLabel[MobiGeo.lang]+" "+floor.id}}return""};var getFullFloorLabel=function(floorId){var title=conf.name[MobiGeo.lang],sep=mgMapUi.getOptions().mapTitleSep?mgMapUi.getOptions().mapTitleSep:"<br>",floorTitle=getFloorLabel(floorId);if(title===""||floorTitle===""){sep=""}return conf.name[MobiGeo.lang]+sep+getFloorLabel(floorId)};var getFloorObject=function(id){for(var index in zoneConfig.floors){if(zoneConfig.floors.hasOwnProperty(index)===false){continue}if(zoneConfig.floors[index].id===id){return zoneConfig.floors[index]}}mgLogger.error(module,"Cannot find floor matching id: "+id+" (typeof id: "+typeof id+")");return null};var getFloorIdFromAltitude=function(naoAltitude){if(typeof naoAltitude!=="number"){naoAltitude=parseInt(naoAltitude,10)}for(var index in zoneConfig.floors){if(zoneConfig.floors.hasOwnProperty(index)===false){continue}if(zoneConfig.floors[index].altitude===naoAltitude){return zoneConfig.floors[index].id}}return null};var _setLang=function(container){if(!container){return}var children=container.childNodes,regexp=new RegExp("^"+container.id+"_([a-z]{2})$");for(var i=0;i<children.length;i++){var child=children.item(i),match=regexp.exec(child.id);if(match&&typeof match[1]==="string"){var lang=match[1];child.style.display=lang===MobiGeo.lang?"inline":"none"}}};var setLang=function(){_setLang(document.getElementById("Z_"+conf.parentZone+"_0_L"));_setLang(document.getElementById("Z_"+conf.parentZone+"_0_Lr"))};var parseZone=function(){var parentZoneMainFloor=mgZoneManager.getZone(conf.parentZone).getMainFloor();var zoneEl=document.getElementById("Z_"+conf.parentZone+"_"+parentZoneMainFloor+"_Z"+conf.id);if(mgJt.isEmpty(zoneEl)===true){mgLogger.error(module,"parseZone: could not find the main element","Z_"+conf.parentZone+"_"+parentZoneMainFloor+"_Z"+conf.id);return}if(mgJt.isEmpty(conf)===true||mgJt.isEmpty(conf.perimeter)===true){mgLogger.error(module,"parseZone: this zone is missing perimeter information: ",conf.id);return}if(mgJt.isEmpty(conf.perimeter.points)===true){mgLogger.error(module,"parseZone: this zone is missing perimeter points: ",conf.id);return}perimeter_r=conf.perimeter.points;if(mgJt.isEmpty(conf.perimeter.center)===true){mgLogger.error(module,"parseZone: this zone is missing perimeter center: ",conf.id);return}center={x_m:conf.perimeter.center.x,y_m:conf.perimeter.center.y};if(mgJt.isEmpty(conf.perimeter.boundingBox)===true){mgLogger.error(module,"parseZone: this zone is missing perimeter coordinates: ",conf.id);return}width=conf.perimeter.boundingBox.xMax-conf.perimeter.boundingBox.xMin;height=conf.perimeter.boundingBox.yMax-conf.perimeter.boundingBox.yMin;mgLogger.debug(module,"Zone",conf.id,"width",width,"height",height)};var hasFloor=function(floorId){if(typeof floorId!=="string"){floorId=String(floorId)}return mgJt.isEmpty(getFloorObject(floorId))===false};var countFloors=function(){return zoneConfig.floors.length};var afterLoaded=function(){if(conf.floors.length===0){mgLogger.info(module,"This zone",conf.id,"has no any floor");return}divNode=mgMapUi.getMapDisplayEl().querySelector("#zone_"+conf.id);if(mgJt.isEmpty(divNode)===true){mgLogger.error(module,"Could not find this zone","#zone_"+conf.id);return}if(conf.floors.length>1){elevator=mgZoneElevatorFactory(conf.id)}if(isRootZone()){width=mgMapConfig.get().Ui.refMapWidth;height=mgMapConfig.get().Ui.refMapHeight;center={x_m:width/2,y_m:height/2}}else if(mgJt.isEmpty(conf.parentZone)===true){mgLogger.error(module,"This zone has no parent!",conf.id,conf.parentZone)}setLang();parseZone()};var handlePositionChangedFloor=function(eventName,data){if(data.zone===conf.id&&conf.floors.length>1){userIsIn=true;if(typeof data.floor==="string"||typeof data.floor==="number"){elevator.removeUserCurrentFloor();elevator.setUserCurrentFloor(data.floor)}}else if(userIsIn===true){userIsIn=false;elevator.removeUserCurrentFloor()}};subscriptions.push(PubSub.subscribe("mobiGeoPosition-zonefloor-updated",handlePositionChangedFloor));var showElevator=function(){if(mgJt.isEmpty(elevator)===false){elevator.show()}};var hideElevator=function(){if(mgJt.isEmpty(elevator)===false){elevator.hide()}};var clear=function(){mgJt.clearPubSubSubscriptions(subscriptions);mgJt.emptyArray(subscriptions);if(mgJt.isEmpty(elevator)===false){elevator.clear()}};var show=function(){mgDt.showElement(divNode)};var hide=function(){mgDt.hideElement(divNode)};var showHideLabels=function(zoomLevel){var labelsNode=mgMapUi.getMapDisplayEl().querySelector("#Z_"+conf.id+"_"+currentFloor.id+"_L");var labelsReversedNode=mgMapUi.getMapDisplayEl().querySelector("#Z_"+conf.id+"_"+currentFloor.id+"_Lr");if(zoomLevel>=(conf.zoomThresholdForLabels||0)){if(labelsNode){mgDt.showElement(labelsNode)}if(labelsReversedNode){mgDt.showElement(labelsReversedNode)}}else{if(labelsNode){mgDt.hideElement(labelsNode)}if(labelsReversedNode){mgDt.hideElement(labelsReversedNode)}}};var updateElevatorStatus=function(evt,data){if(mgJt.isEmpty(data)===true||data.zone!==conf.id||data.type!==mgPositionManager.TYPES.SPOT&&data.type!==mgPositionManager.TYPES.FAVORITE||mgJt.isEmpty(elevator)===true){return}if(data.action==="show"){elevator.setStatusOnFloor(data.type,data.floor)}else{if(mgPositionManager.count({displayed:true,zone:data.zone,floor:data.floor,type:data.type})===0){elevator.removeStatusOnFloor(data.type,data.floor)}}};subscriptions.push(PubSub.subscribe("new-POI-status",updateElevatorStatus));var getRoutingArea=function(floor_id,xy_r){var floor=getFloorObject(floor_id);if(mgJt.isEmpty(floor)){return 0}if(mgJt.isEmpty(floor.areas)){return 0}for(var a=0;a<floor.areas.length;a++){if(mgZoneManager.checkPointInPolygon(xy_r,floor.areas[a].points)===true){return floor.areas[a].id}}return 0};var isRootZone=function(){return conf.id===mgZoneManager.getRootZoneId()};var iterateOnFloors=function(func){floorsData.forEach(function(floorData){func(conf.id,floorData.floorId)})};initialize();return{show:show,hide:hide,clear:clear,hasFloor:hasFloor,countFloors:countFloors,afterLoaded:afterLoaded,getFloorIdFromAltitude:getFloorIdFromAltitude,setCurrentFloor:setCurrentFloor,showElevator:showElevator,hideElevator:hideElevator,getRoutingArea:getRoutingArea,showHideLabels:showHideLabels,isRootZone:isRootZone,iterateOnFloors:iterateOnFloors,getFloorLabelFromId:getFloorLabelFromId,getFullFloorLabel:getFullFloorLabel,getFloorLabel:getFloorLabel,getCurrentFloor:function(){return currentFloor},getId:function(){return conf.id},getParentZone:function(){return conf.parentZone},getName:function(){return conf.name?conf.name[MobiGeo.lang]:""},getShortName:function(){return conf.shortName?conf.shortName[MobiGeo.lang]:""},getZoomToZoneLabel:function(){return conf.zoomToZoneLabel?conf.zoomToZoneLabel[MobiGeo.lang]:""},getPrefix:function(){return conf.prefix?conf.prefix[MobiGeo.lang]:""},getFloor:function(id){return mgJt.filterOne(conf.floors,{id:id})},getFloors:function(){return conf.floors},getMainFloor:function(){return conf.mainFloor},getDivNode:function(){return divNode},getFloorsData:function(){return floorsData},getPerimeter_r:function(){return perimeter_r},getCenter:function(){return center},getWidth:function(){return width},getHeight:function(){return height},hasCustomCenter:function(){return mgJt.isEmpty(conf.customFocus)===false&&mgJt.isEmpty(conf.customFocus.center)===false},getCustomCenter:function(){return conf.customFocus.center},hasCustomZoomRatio:function(){return mgJt.isEmpty(conf.customFocus)===false&&mgJt.isEmpty(conf.customFocus.zoomRatio)===false},getCustomZoomRatio:function(){return conf.customFocus.zoomRatio},hasElevator:function(){return typeof elevator==="object"&&elevator!==null},setDroppableFloor:function(floorId){elevator.setDroppableFloor(floorId)}}}function mgZoneElevatorFactory(zoneId){"use strict";var module=mgLogger.modules.Zone,elevatorEl=null,elevatorStyle={visible:{display:"block"},hidden:{display:"none"}},routeStyle={iconClassName:"iti-icon",arrivalClassName:"iti-arrival",stepClassName:"iti-step"},isDisplayed=false,currentFloorId,VERTICAL_MARGINS=40,subscriptions=[];var show=function(){mgDt.applyStyle(elevatorEl,elevatorStyle.visible);ScrollManager.resize();isDisplayed=true;if(mgJt.isEmpty(currentFloorId)===false){ScrollManager.centerOnFloor(currentFloorId)}};var hide=function(){mgDt.applyStyle(elevatorEl,elevatorStyle.hidden);isDisplayed=false};var getAscFloorEl=function(floorId){return elevatorEl.querySelector("#asc_"+zoneId+"_"+floorId)};var setSelectedFloor=function(floorId){currentFloorId=floorId;if(mgJt.isEmpty(elevatorEl)===false){var currentAscEl=elevatorEl.querySelector(".select");if(mgJt.isEmpty(currentAscEl)===false){currentAscEl.classList.remove("select")}}var newAscEl=getAscFloorEl(floorId);if(mgJt.isEmpty(newAscEl)===false){newAscEl.classList.add("select")}};var setUserCurrentFloor=function(floorId){var newPositionFloorEl=getAscFloorEl(floorId);if(mgDt.isDOMElement(newPositionFloorEl)===true){newPositionFloorEl.classList.add(mgZoneManager.elevatorStyles[mgPositionManager.TYPES.USER_POS])}};var removeUserCurrentFloor=function(){if(mgJt.isEmpty(elevatorEl)===false){var currentPositionFloorEl=elevatorEl.querySelector("."+mgZoneManager.elevatorStyles[mgPositionManager.TYPES.USER_POS]);if(mgDt.isDOMElement(currentPositionFloorEl)===true){currentPositionFloorEl.classList.remove(mgZoneManager.elevatorStyles[mgPositionManager.TYPES.USER_POS])}}};subscriptions.push(PubSub.subscribe("mobiGeoPosition-hide",removeUserCurrentFloor));var setStatusOnFloor=function(positionType,floorId){getAscFloorEl(floorId).classList.add(mgZoneManager.elevatorStyles[positionType])};var removeStatusOnFloor=function(positionType,floorId){getAscFloorEl(floorId).classList.remove(mgZoneManager.elevatorStyles[positionType])};var clear=function(){mgJt.clearPubSubSubscriptions(subscriptions)};var initialize=function(){var selector="elevator_"+zoneId;elevatorEl=mgJt.filterOne(mgMapUi.getMapDisplayEl().children,{id:selector});if(mgJt.isEmpty(elevatorEl)===true){mgLogger.error(module,"Could not find the zone elevator #"+selector)}else{ScrollManager.init();hide()}};var removeRouteIcons=function(){var els=elevatorEl.querySelectorAll("."+routeStyle.iconClassName);for(var i=0;i<els.length;i++){els[i].classList.remove(routeStyle.iconClassName);els[i].classList.remove(routeStyle.arrivalClassName);els[i].classList.remove(routeStyle.stepClassName)}};PubSub.subscribe("mobigeoRoute-clear",removeRouteIcons);var setDroppableFloor=function(floorId){mgDraggablePins.initDroppableListeners(getAscFloorEl(floorId))};var routeStepUpdate=function(evtName,data){if(zoneId===data.currentPartInfo.zone){removeRouteIcons();var levelCurrentEl=getAscFloorEl(data.currentPartInfo.floor);if(mgJt.isEmpty(levelCurrentEl)===true){return}if(data.currentPartInfo.isArrival===true){levelCurrentEl.classList.add(routeStyle.iconClassName);levelCurrentEl.classList.add(routeStyle.arrivalClassName);return}}if(mgJt.isEmpty(data.nextPartInfo)===false&&zoneId===data.nextPartInfo.zone){var levelNextEl=getAscFloorEl(data.nextPartInfo.floor);if(mgJt.isEmpty(levelNextEl)===true){return}levelNextEl.classList.add(routeStyle.iconClassName);if(levelNextEl.isArrival===true){levelNextEl.classList.add(routeStyle.arrivalClassName)}else{levelNextEl.classList.add(routeStyle.stepClassName)}}};PubSub.subscribe("mobigeoRoute-stepChange",routeStepUpdate);var ScrollManager=function(){var elevatorScrollableEl=null,upArrowEl=null,downArrowEl=null,enabled,ticking=false,lastScrollTop=0,maxScrollTop,height={full:0,max:0},styles={arrowVisible:{opacity:1},arrowNotVisible:{opacity:0}},scrollTopCompensation,activationDeadZone=10,deadZone=2;var init=function(){elevatorScrollableEl=elevatorEl.querySelector(".elevator-floor-list");upArrowEl=elevatorEl.querySelector(".elevator-up-arrow");downArrowEl=elevatorEl.querySelector(".elevator-down-arrow");elevatorScrollableEl.onscroll=scrollHandler;height.full=_performVisiblityTweak(function getElevatorHeight(){return elevatorScrollableEl.offsetHeight})};var _performVisiblityTweak=function(func){mgDt.applyStyle(elevatorEl,{visiblity:"hidden"});mgDt.applyStyle(elevatorEl,elevatorStyle.visible);var value=func.apply(null,mgJt.argumentsToArray(arguments).slice(1));mgDt.applyStyle(elevatorEl,elevatorStyle.hidden);mgDt.applyStyle(elevatorEl,{visiblity:"visible"});return value};var resize=function(){if(mgJt.isEmpty(elevatorEl)===false){height.max=Math.round(mgViewport.h_v-elevatorEl.offsetTop-VERTICAL_MARGINS);if(height.max+activationDeadZone>height.full){enabled=false;mgDt.applyStyle(elevatorScrollableEl,{maxHeight:"none"});maxScrollTop=height.full}else{enabled=true;maxScrollTop=height.full-height.max;mgDt.applyStyle(elevatorScrollableEl,{maxHeight:height.max+"px"});scrollTopCompensation=Math.floor(0-height.max/2);elevatorEl.addEventListener(mgSupport.interaction.start,mgJt.ionicHackStart);elevatorEl.addEventListener(mgSupport.interaction.end,mgJt.ionicHackEnd)}}updateArrows()};var scrollHandler=function(e){if(!ticking){window.requestAnimationFrame(function(){lastScrollTop=e.target.scrollTop;updateArrows();ticking=false})}ticking=true};var updateArrows=function(){if(enabled===true){if(lastScrollTop<deadZone){mgDt.applyStyle(upArrowEl,styles.arrowNotVisible)}else{mgDt.applyStyle(upArrowEl,styles.arrowVisible)}if(lastScrollTop>maxScrollTop-deadZone){mgDt.applyStyle(downArrowEl,styles.arrowNotVisible)}else{mgDt.applyStyle(downArrowEl,styles.arrowVisible)}}else{mgDt.applyStyle(upArrowEl,styles.arrowNotVisible);mgDt.applyStyle(downArrowEl,styles.arrowNotVisible)}};var centerOnFloor=function(floorId){if(enabled===true){var scrollTopValue;if(isDisplayed!==true){scrollTopValue=_performVisiblityTweak(_getScrollTopValue,floorId)}else{scrollTopValue=_getScrollTopValue(floorId)}elevatorScrollableEl.scrollTop=scrollTopValue;lastScrollTop=scrollTopValue;updateArrows()}};var _getScrollTopValue=function(floorId){var floorTop=getAscFloorEl(floorId).offsetTop,scrollTopValue=floorTop+scrollTopCompensation;return scrollTopValue<0?0:scrollTopValue};return{get enabled(){return enabled},init:init,resize:resize,centerOnFloor:centerOnFloor}}();initialize();return{show:show,hide:hide,clear:clear,setSelectedFloor:setSelectedFloor,setUserCurrentFloor:setUserCurrentFloor,removeUserCurrentFloor:removeUserCurrentFloor,setStatusOnFloor:setStatusOnFloor,removeStatusOnFloor:removeStatusOnFloor,setDroppableFloor:setDroppableFloor}}var mgZoneManager=function(){"use strict";var module=mgLogger.modules.Zone,mapsToLoad=[],zones=[],nbMaps=0,rootZoneId=0,defaultFloorId="0",currentZone=null,contentData=[],optionsReady,updateChecked,elevatorStyles;var initialize=function(){if(!optionsReady||!updateChecked){return}elevatorStyles={};elevatorStyles[mgPositionManager.TYPES.USER_POS]="user-position";elevatorStyles[mgPositionManager.TYPES.SPOT]="with-poi";elevatorStyles[mgPositionManager.TYPES.FAVORITE]="with-favorite";var confZones=mgMapConfig.get().zones,infoZoneInitialized=[];confZones.forEach(function(confZone){if(confZone.enabled===false){mgLogger.debug(module,"This zone is disabled",confZone.id);return}var zone=mgZoneFactory(confZone);addZone(zone);nbMaps+=zone.getFloors().length;if(zone.getFloors().length>0){contentData.push({id:zone.getId(),hasfloors:zone.getFloors().length>1,floorsData:zone.getFloorsData()})}infoZoneInitialized.push(zone.getId())});mgLogger.info(module,"Initialized zones are ",infoZoneInitialized.join(" "));mgMapUi.render()};var loadMaps=function(){mgLogger.info(module,"Loading maps.");mgLogger.time(module,"Loading all map files");var mapLoadedFlag={};var afterLoadingMapCallback=function(status){mgLogger.debug(module,"Loaded map:",status.map_id,status.zoneId);delete mapLoadedFlag[status.zoneId+"_"+status.floorId];if(mgJt.objectTotalSize(mapLoadedFlag)===0){mgLogger.info(module,"All maps are loaded and present in DOM.");mgLogger.timeEnd(module,"Loading all map files");PubSub.publish("mobigeo-mapsLoaded")}};for(var i=0;i<mapsToLoad.length;i++){mapLoadedFlag[mapsToLoad[i].zoneId+"_"+mapsToLoad[i].floorId]=true;mgMapUiSVG.loadSVGMap(mapsToLoad[i].zoneId,mapsToLoad[i].floorId,afterLoadingMapCallback)}};var reset=function(){mgLogger.debug(module,"[reset] zone manager");mgJt.emptyArray(mapsToLoad);for(var index in zones){if(zones.hasOwnProperty(index)===false){continue}zones[index].clear()}mgJt.emptyArray(zones);nbMaps=0;rootZoneId=0;currentZone=null;optionsReady=false;updateChecked=false;mgJt.emptyArray(contentData)};var getZoneFromXY=function(xy_r){for(var z=0;z<zones.length;z++){if(zones.hasOwnProperty(z)===false){continue}if(zones[z].getId()===rootZoneId){continue}if(checkPointInPolygon(xy_r,zones[z].getPerimeter_r())===true){return zones[z].getId()}}return rootZoneId};var isInsideSite=function(xy_r){if(mgJt.isEmpty(zones[rootZoneId])===true){mgLogger.error(module,"Cannot know if on the site because there is not site zone");return false}return checkPointInPolygon(xy_r,zones[rootZoneId].getPerimeter_r())===true};var addZone=function(zone){zones[zone.getId()]=zone};var getZonesCount=function(){return zones.length};var getZone=function(zoneId){return zones[zoneId]};var setCurrentZone=function(zoneId,floorId){mgLogger.debug(module,"setZone",zoneId,floorId);var zone=zones[zoneId];if(mgJt.isEmpty(zone)===true){mgLogger.error(module,"This zone does not exist",zoneId);return false}if(mgPermissions.canSeeZone(zoneId)!==true){mgPermissions.handleZoneAccessRestricted(zoneId);return}if(zone.getFloors().length===0){mgLogger.error(module,"This zone has no floor",zoneId);return false}if(mgJt.isEmpty(currentZone)===false&&zoneId===currentZone.getId()){if(mgJt.isEmpty(floorId)===true){mgLogger.debug(module,"Same ZONE (no floorId specified)");return true}if(floorId===zone.getCurrentFloor().id){mgLogger.debug(module,"Same ZONE + same FLOOR",floorId);return true}}if(mgJt.isEmpty(floorId)===false&&zone.hasFloor(floorId)===false){return false}var _floorId;if(mgJt.isEmpty(floorId)!==true){_floorId=floorId}else{if(mgPositionManager.getUserPosition().displayed&&mgPositionManager.getUserPosition().zone===zoneId){_floorId=mgPositionManager.getUserPosition().floor}else{if(zones[zoneId].getCurrentFloor()){_floorId=zones[zoneId].getCurrentFloor().id}else{_floorId=zones[zoneId].getMainFloor()}}}if(mgPermissions.canSeeFloor(zoneId,_floorId)!==true){mgPermissions.handleFloorAccessRestricted(zoneId,_floorId);return}if(currentZone&&currentZone.getId()!==rootZoneId){currentZone.hide()}if(mgJt.isEmpty(currentZone)===false){currentZone.hideElevator()}currentZone=zone;zone.setCurrentFloor(_floorId);if(mgJt.isEmpty(zone.getDivNode())===false){zone.show()}zone.showElevator();if(zoneId===rootZoneId&&zone.getCurrentFloor().id===zone.getMainFloor()){showHideAllItems("show",["pins","labels"]);if(mgMapConfig.get().Ui.dynamicIconDisplay===true){mgPinManager.selectPinsOfDefinedTypes()}}if(zoneId===rootZoneId){zones[rootZoneId].getDivNode().classList.remove("opaque")}else{zones[rootZoneId].getDivNode().classList.add("opaque")}return true};var initZonesWhenReady=function(){setCurrentZone(rootZoneId,zones[rootZoneId].getMainFloor())};var checkPointInPolygon=function(xy_r,polygon_r){var j=polygon_r.length-1;var isInPolygon=false;for(var i=0;i<polygon_r.length;i++){if(polygon_r[i].y<xy_r.y&&polygon_r[j].y>=xy_r.y||polygon_r[j].y<xy_r.y&&polygon_r[i].y>=xy_r.y){if(polygon_r[i].x+(xy_r.y-polygon_r[i].y)/(polygon_r[j].y-polygon_r[i].y)*(polygon_r[j].x-polygon_r[i].x)<xy_r.x){isInPolygon=!isInPolygon}}j=i}return isInPolygon};var defaultActions={show:mgDt.showElement,hide:mgDt.hideElement};var applyShowHide=function(action,items,selector){if(action!=="show"&&action!=="hide"){mgLogger.error(module,"invalid action: "+action);return}for(var i=0;i<items.length;i++){var tmpSelector=selector.replace(/£/,items[i])+(items[i]==="pins"&&action==="hide"?":not(#pins_0_0)":""),elements=mgMapUi.getMapDisplayEl().querySelectorAll(tmpSelector),func=defaultActions[action];for(var l=0;l<elements.length;l++){func(elements[l])}}};var showHideItems=function(action,zoneId,floor,items){applyShowHide(action,items,"#£_"+zoneId+"_"+floor)};var showHideAllItems=function(action,items){applyShowHide(action,items,".£")};var triggerZoneFloorChangedEvent=function(zoneId,floorId){PubSub.publish("mobigeo-zoneFloor-changed",{zoneId:zoneId,floorId:floorId})};var onMapsInserted=function(){mgLogger.info(module,"onMapsInserted!");for(var i=0;i<zones.length;i++){if(mgJt.isEmpty(zones[i])===true){continue}zones[i].afterLoaded()}PubSub.publish("mobigeo-zonesReady")};var handleResize=function(){if(mgJt.isEmpty(currentZone)===false){currentZone.showElevator()}};var getAltitude=function(zoneId,floor){var zone=getZone(zoneId);if(!zone){mgLogger.error(module,"Invalid zone id: "+zoneId);return}var floorsConfig=zone.getFloors();for(var i=0;i<floorsConfig.length;i++){if(floorsConfig[i].id===floor){return floorsConfig[i].altitude}}};var iterate=function(func){zones.forEach(func)};PubSub.subscribe("mobigeo-uiOptionsParsed",function(){optionsReady=true;initialize()});PubSub.subscribe("mobigeo-updateDone",function(){updateChecked=true;initialize()});PubSub.subscribe("mobigeo-mapUiReady",loadMaps);PubSub.subscribe("mobigeo-zonesReady",initZonesWhenReady);PubSub.subscribe("mobigeo-mapsInserted",onMapsInserted);return{getCurrentZone:function(){return currentZone},getRootZoneId:function(){return rootZoneId},getRootZone:function(){return getZone(rootZoneId)},getDefaultFloorId:function(){return defaultFloorId},appendMapToLoad:function(params){mapsToLoad.push(params)},get elevatorStyles(){return elevatorStyles},reset:reset,getZonesCount:getZonesCount,getZone:getZone,getZoneFromXY:getZoneFromXY,getAltitude:getAltitude,contentData:contentData,showHideItems:showHideItems,showHideAllItems:showHideAllItems,setCurrentZone:setCurrentZone,isInsideSite:isInsideSite,triggerZoneFloorChangedEvent:triggerZoneFloorChangedEvent,handleResize:handleResize,checkPointInPolygon:checkPointInPolygon,iterate:iterate}}();var mgItinerary=function(){"use strict";var module=mgLogger.modules.Route,idxPathTagsIds=null;var _options={svg2ref:1,fixedDistance:{elevator:0,elevatorpmronly:0,elevatorarea:0,stairs:10,escalator:5,escalatorup:5,escalatordown:5,entrance:0,xentrance:0,door:0},fixedTime:{elevator:20,elevatorpmronly:20,elevatorarea:20,stairs:30,escalator:30,escalatorup:30,escalatordown:30,entrance:5,xentrance:5,door:1}};var ROUTING_EXIT_STATUS={NO_TARGET_POSITION:-2,NO_START_POSITION:-1,START_IS_DEST:0,SOLUTION_FOUND:1,NO_SOLUTION_FOUND:2,MAX_ITERATION_REACHED:3,NO_NEIGHBOUR_FOUND:4,FLOOR_TARGET_IS_START_FLOOR:5,ERROR:6};var END_POINT_TYPE={GRAPH_NODE:0,FREE_L12N_POINT:1,FREE_TAG_POINT:2,FLOOR:3,ERROR:4};var START="Start",TARGET="Target";var freeNeighbourRank=null;var getEndPointType=function(endPointName){var endPoint=mgPositionManager[endPointName.toLowerCase()];if(mgJt.isEmpty(endPoint.place)===false&&mgJt.isEmpty(endPoint.place.tag)===false){if(endPoint.place.tag.match(/Syno/)!==null){return END_POINT_TYPE.FLOOR}else{if(typeof idxPathTagsIds[endPoint.place.tag]!=="undefined"){return END_POINT_TYPE.GRAPH_NODE}return END_POINT_TYPE.FREE_TAG_POINT}}else if(typeof endPoint.zone!=="undefined"&&typeof endPoint.floor!=="undefined"&&endPoint.xy_m.x!==0&&isNaN(parseInt(endPoint.xy_m.x,10))===false&&endPoint.xy_m.y!==0&&isNaN(parseInt(endPoint.xy_m.y,10))===false){return END_POINT_TYPE.FREE_L12N_POINT}return END_POINT_TYPE.ERROR};var getError=function(itiObj){var msg=mgI18N.t("noItinerary","itinerary");if(itiObj!==null&&typeof itiObj==="object"){switch(itiObj.status){case ROUTING_EXIT_STATUS.NO_START_POSITION:return{code:_MobiGeoMapRoute.ERRORS.INVALID_START,message:msg+mgI18N.t(":","misc")+mgI18N.t("errorStart","itinerary")};case ROUTING_EXIT_STATUS.NO_TARGET_POSITION:return{code:_MobiGeoMapRoute.ERRORS.INVALID_DESTINATION,message:msg+mgI18N.t(":","misc")+mgI18N.t("errorDest","itinerary")};case ROUTING_EXIT_STATUS.START_IS_DEST:return{code:_MobiGeoMapRoute.ERRORS.ALREADY_AT_DESTINATION,message:msg+mgI18N.t(":","misc")+mgI18N.t("alreadyAtDestination","itinerary")};case ROUTING_EXIT_STATUS.FLOOR_TARGET_IS_START_FLOOR:return{code:_MobiGeoMapRoute.ERRORS.ALREADY_AT_DESTINATION,message:msg+mgI18N.t(":","misc")+mgI18N.t("alreadyOnDestinationFloor","itinerary")};case ROUTING_EXIT_STATUS.NO_SOLUTION_FOUND:case ROUTING_EXIT_STATUS.MAX_ITERATION_REACHED:case ROUTING_EXIT_STATUS.NO_NEIGHBOUR_FOUND:return{code:_MobiGeoMapRoute.ERRORS.NO_ROUTE_FOUND,message:msg}}}mgLogger.error(module,"Unhandled route status: "+(itiObj?itiObj.status:null));return{code:_MobiGeoMapRoute.ERRORS.INTERNAL_ERROR,message:msg}};var checkEndPoint=function(endPointName){if(mgJt.isEmpty(mgPositionManager[endPointName.toLowerCase()])===true||mgJt.isEmpty(mgPositionManager[endPointName.toLowerCase()].xy_m)===true){mgLogger.error(module,"Could not trace itinerary: missing "+endPointName+" position");var errorCode="NO_"+endPointName.toUpperCase()+"_POSITION";return{status:ROUTING_EXIT_STATUS[errorCode]}}return true};var setEndPathNode=function(endPointName,resetFlag){var endPointType=getEndPointType(endPointName),endPoint=mgPositionManager[endPointName.toLowerCase()],tag=null,zone=null,floor=null,area=null,neighbours=null,pathNode=null,errorCode=null,n;switch(endPointType){case END_POINT_TYPE.GRAPH_NODE:tag=endPoint.place.tag;mgLogger.debug(module,"Using "+endPointName+" tag: ",tag);pathNode=mgData.getById(mgData.TABLES.PATHS,idxPathTagsIds[tag]);if(mgJt.isEmpty(pathNode)===true){errorCode="NO_"+endPointName.toUpperCase()+"_POSITION";mgLogger.error(module,errorCode,"Id "+idxPathTagsIds[tag]+" not found in Paths table");return{error:ROUTING_EXIT_STATUS[errorCode]}}return{pathNode:pathNode,neighbours:null};case END_POINT_TYPE.FREE_L12N_POINT:case END_POINT_TYPE.FREE_TAG_POINT:zone=mgZoneManager.getZone(endPoint.zone);area=zone.getRoutingArea(endPoint.floor,endPoint.xy_m);mgLogger.debug(module,endPointName+" point in (zone, floor, area) ("+endPoint.zone+","+endPoint.floor+","+area+")");tag="l12n"+endPointName;if(!resetFlag){pathNode={id:idxPathTagsIds[tag],zone:endPoint.zone,floor:endPoint.floor,area:area,x:endPoint.xy_m.x,y:endPoint.xy_m.y,tag:tag,type:"l12n"};neighbours=mgItineraryPolygonInternal.getNeighbours(pathNode);if(mgJt.isEmpty(neighbours)===true){mgLogger.error(module,"NO_NEIGHBOUR_FOUND","No neighbours found around "+endPointName+" free position");return{error:ROUTING_EXIT_STATUS.NO_NEIGHBOUR_FOUND}}}else{pathNode={id:idxPathTagsIds[tag],zone:null,floor:null,area:null,x:null,y:null,tag:tag,type:"l12n"};neighbours=[]}if(endPointName===START){for(n=0;n<neighbours.length;n++){pathNode["v"+(n+1)+"Id"]=neighbours[n].node.id;pathNode["v"+(n+1)+"cost"]=neighbours[n].cost}for(n=neighbours.length;n<freeNeighbourRank;n++){pathNode["v"+(n+1)+"Id"]=0;pathNode["v"+(n+1)+"cost"]=0}}else{for(n=0;n<neighbours.length;n++){neighbours[n].node["v"+freeNeighbourRank+"Id"]=pathNode.id;neighbours[n].node["v"+freeNeighbourRank+"cost"]=neighbours[n].cost;mgData.update(mgData.TABLES.PATHS,neighbours[n].node.id,neighbours[n].node);pathNode["v"+(n+1)+"Id"]=neighbours[n].node.id;pathNode["v"+(n+1)+"cost"]=neighbours[n].cost}for(n=neighbours.length;n<freeNeighbourRank;n++){pathNode["v"+(n+1)+"Id"]=0;pathNode["v"+(n+1)+"cost"]=0}}mgData.update(mgData.TABLES.PATHS,pathNode.id,pathNode);return{pathNode:pathNode,neighbours:neighbours};case END_POINT_TYPE.FLOOR:if(endPointName===START){return{error:ROUTING_EXIT_STATUS.NO_START_POSITION}}pathNode={id:null,zone:endPoint.zone,floor:endPoint.floor,area:0,x:null,y:null,tag:"floorTarget",type:"Floor"};return{pathNode:pathNode,neighbours:null};case END_POINT_TYPE.ERROR:return null;default:return null}};var getIti=function(options){var isPMR=false,n;if(options!==null&&typeof options==="object"){if(options.userType==="PMR"){isPMR=true}}var startStatus=checkEndPoint(START);if(startStatus!==true){return startStatus}var targetStatus=checkEndPoint(TARGET);if(targetStatus!==true){return targetStatus}var startPathObj=null,targetPathObj=null,startPathNode=null,targetPathNode=null;freeNeighbourRank=mgMapConfig.get().maxPathNodeNeighbours+1;if(getEndPointType(START)===END_POINT_TYPE.FREE_L12N_POINT||getEndPointType(START)===END_POINT_TYPE.FREE_TAG_POINT){setEndPathNode(START,true)}if(getEndPointType(TARGET)===END_POINT_TYPE.FREE_L12N_POINT||getEndPointType(TARGET)===END_POINT_TYPE.FREE_TAG_POINT){setEndPathNode(TARGET,true)}startPathObj=setEndPathNode(START,false);if(typeof startPathObj.error!=="undefined"){return{status:startPathObj.error}}targetPathObj=setEndPathNode(TARGET,false);if(typeof targetPathObj.error!=="undefined"){return{status:targetPathObj.error}}startPathNode=startPathObj.pathNode;targetPathNode=targetPathObj.pathNode;if(targetPathNode.type!=="Floor"&&((startPathNode&&startPathNode.id)===(targetPathNode&&targetPathNode.id)||mgUtils.dist(startPathNode,targetPathNode)<10)){mgLogger.debug(module,"ITI_IS_USELESS","Start and target positions are the same !");return{status:ROUTING_EXIT_STATUS.START_IS_DEST}}mgLogger.time(module,"Compute itinerary");var itiObj=_computeItinerary(startPathNode,targetPathNode,isPMR);mgLogger.timeEnd(module,"Compute itinerary");mgLogger.info(module,"Itinerary calculated.");if(mgJt.isEmpty(targetPathObj.neighbours)===false){var targetNeighbours=targetPathObj.neighbours;for(n=0;n<targetNeighbours.length;n++){targetNeighbours[n].node["v"+freeNeighbourRank+"Id"]=0;targetNeighbours[n].node["v"+freeNeighbourRank+"cost"]=0;mgData.update(mgData.TABLES.PATHS,targetNeighbours[n].node.id,targetNeighbours[n].node)}}return itiObj};var ItiPart=function(route){this.status=route.status;this.infos={zone:null,floor:null,area:null,targetType:null,directions:"",nbElts:route.nbElts,nbIter:route.nbIter,cost:route.cost,walkingTime:null,distance:null,lastX:null,lastY:null,firstX:null,firstY:null,secondX:null,secondY:null,path:"M "};this.setDirections=function(floorTargetMode,nextPart){var fromZoneName=mgZoneManager.getZone(this.infos.zone).getPrefix()+mgZoneManager.getZone(this.infos.zone).getName();if(mgJt.isEmpty(nextPart)===true){if(floorTargetMode===false){this.infos.directions=mgI18N.t("laststep","itinerary")}else{this.infos.directions=mgI18N.t("laststepfloortarget","itinerary")}}else{var toZoneName=mgZoneManager.getZone(nextPart.infos.zone).getPrefix()+mgZoneManager.getZone(nextPart.infos.zone).getName();if(this.infos.targetType==="elevator"||this.infos.targetType==="elevatorarea"||this.infos.targetType==="elevatorpmronly"){this.infos.directions=mgI18N.t("elevatorstep","itinerary",[nextPart.infos.floor])}else if(this.infos.targetType==="stairs"||this.infos.targetType==="stairsarea"){this.infos.directions=mgI18N.t("stairsstep","itinerary",[nextPart.infos.floor])}else if(this.infos.targetType.match(/escalator/)!==null){this.infos.directions=mgI18N.t("escalatorstep","itinerary",[nextPart.infos.floor])}else if(this.infos.targetType==="door"){if(this.infos.area!==0&&nextPart.infos.area===0){this.infos.directions=mgI18N.t("dooroutstep","itinerary",[fromZoneName])}else if(this.infos.area===0&&nextPart.infos.area!==0){this.infos.directions=mgI18N.t("doorinstep","itinerary",[toZoneName])}else{var floor=mgZoneManager.getZone(nextPart.infos.zone).getFloor(nextPart.infos.floor);if(mgJt.isEmpty(floor.areasEnterDirections)===false&&mgJt.isEmpty(floor.areasEnterDirections["area"+nextPart.infos.area])===false){this.infos.directions=floor.areasEnterDirections["area"+nextPart.infos.area][MobiGeo.lang]}else{this.infos.directions=mgI18N.t("doortostep","itinerary")}}}else if(this.infos.targetType==="entrance"||this.infos.targetType==="xentrance"){if(nextPart.infos.zone===0){this.infos.directions=mgI18N.t("entranceoutstep","itinerary",[fromZoneName])}else if(nextPart.infos.zone!==0){this.infos.directions=mgI18N.t("entranceinstep","itinerary",[toZoneName])}}else if(this.infos.targetType==="zoneentrance"||this.infos.targetType==="zoneentrance"){if(nextPart.infos.zone===0){this.infos.directions=mgI18N.t("zoneentranceoutstep","itinerary",[fromZoneName])}else if(nextPart.infos.zone!==0){this.infos.directions=mgI18N.t("zoneentranceinstep","itinerary",[toZoneName])}}}};var that=this;var initialize=function(){if(that.status===ROUTING_EXIT_STATUS.SOLUTION_FOUND){var r=1/_options.svg2ref;var pathLength=0;var x=0;var y=0;that.infos.zone=route.steps[0].zone;that.infos.floor=route.steps[0].floor;that.infos.area=route.steps[0].area;for(var i=0;i<route.nbElts;i++){x=route.steps[i].x;y=route.steps[i].y;if(i>0){pathLength+=mgUtils.dist({x:x,y:y},{x:that.infos.lastX,y:that.infos.lastY});if(i===1){that.infos.secondX=x;that.infos.secondY=y}}else{that.infos.firstX=x;that.infos.firstY=y}that.infos.path+=x*r+","+y*r+" ";that.infos.lastX=x;that.infos.lastY=y}that.infos.targetType=route.steps[i-1].type;that.infos.distance=Math.round(pathLength*mgMapConfig.get().ref2meters);that.infos.walkingTime=Math.round(that.infos.distance/mgMapConfig.get().walkSpeed)}};initialize()};var _computeItinerary=function(startPathNode,targetPathNode,isPMR){var itiObj={status:null,totalDistance:0,totalWalkingTime:0,parts:[]};var route=null;var itiPart=null;var i=0,j=0;var floorTargetMode=null;if(targetPathNode.type==="Floor"){floorTargetMode=true}else{floorTargetMode=false}if(floorTargetMode===false&&startPathNode.zone===targetPathNode.zone&&startPathNode.floor===targetPathNode.floor&&startPathNode.area===targetPathNode.area){route=mgItineraryInternal.computeOptimizedSingleRoute(startPathNode,targetPathNode,"paths",isPMR);itiPart=new ItiPart(route);itiPart.setDirections(floorTargetMode,null);itiObj.status=itiPart.status;itiObj.parts=[itiPart]}else if(floorTargetMode===true&&startPathNode.zone===targetPathNode.zone&&startPathNode.floor===targetPathNode.floor){itiObj.status=ROUTING_EXIT_STATUS.FLOOR_TARGET_IS_START_FLOOR;mgLogger.error(module,"FLOOR_TARGET_IS_START_FLOOR: Target is a floor and is equal to start floor");return itiObj}else{var GTWtype;if(isPMR){GTWtype="door|entrance|xentrance|zoneentrance|elevatorarea|elevator|elevatorpmronly"}else{GTWtype="door|entrance|xentrance|zoneentrance|elevatorarea|elevator|stairs|stairsarea|escalator|escalatorup[0-9]*|escalatordown[0-9]*"}var startGateways=mgData.query(mgData.TABLES.GTW_PATHS,{type:GTWtype,zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area});var targetGateways=mgData.query(mgData.TABLES.GTW_PATHS,{type:GTWtype,zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area});mgLogger.time(module,"Compute all gateway routes");var gtwRoutes=[];var validGtwRoutes=[];var routeCost=null;var minCost=null;var minSteps=null;var minRouteIdx=null;var minGtwRoute=null;var escalatorUpDownRe=/escalatorup[0-9]*|escalatordown[0-9]*/;for(i=0;i<startGateways.length;i++){for(j=0;j<targetGateways.length;j++){if(mgMapConfig.get().use2WayRoutingAlgoForGTWRoutes===true){gtwRoutes.push(mgItineraryInternal.computeOptimizedSingleRoute(startGateways[i],targetGateways[j],"gtw_paths",isPMR))}else{gtwRoutes.push(mgItineraryInternal.computeSingleRoute(startGateways[i],targetGateways[j],"gtw_paths",isPMR))}}}mgLogger.timeEnd(module,"Compute all gateway routes");mgLogger.info(module,"Computed "+gtwRoutes.length+" gateway routes");var invalidTransitions=[{step1:{type:"entrance",zone:startPathNode.zone,area:startPathNode.area},step2:{type:"entrance",zone:startPathNode.zone,area:startPathNode.area}},{step1:{type:"entrance",zone:targetPathNode.zone,area:targetPathNode.area},step2:{type:"entrance",zone:targetPathNode.zone,area:targetPathNode.area}},{step1:{type:"elevator",zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area},step2:{zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area}},{step1:{type:"stairs",zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area},step2:{zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area}},{step1:{type:"escalator",zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area},step2:{zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area}},{step1:{zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area},step2:{type:"elevator",zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area}},{step1:{zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area},step2:{type:"stairs",zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area}},{step1:{zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area},step2:{type:"escalator",zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area}}];var validRoute;if(startPathNode.area!==0){invalidTransitions.push({step1:{type:"door",zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area},step2:{type:"door",zone:startPathNode.zone,floor:startPathNode.floor,area:startPathNode.area}})}if(targetPathNode.area!==0){invalidTransitions.push({step1:{type:"door",zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area},step2:{type:"door",zone:targetPathNode.zone,floor:targetPathNode.floor,area:targetPathNode.area}})}var indoorOnlyConnectedZones=mgMapConfig.get().indoorOnlyConnectedZones;if(mgJt.isEmpty(indoorOnlyConnectedZones)===false){if(indoorOnlyConnectedZones.indexOf(startPathNode.zone)>-1&&indoorOnlyConnectedZones.indexOf(targetPathNode.zone)>-1){invalidTransitions.push({step1:{zone:0}})}}var conditionalForbiddenTransitions=mgMapConfig.get().conditionalForbiddenTransitions;if(mgJt.isEmpty(conditionalForbiddenTransitions)===false){var rule=startPathNode.zone+"_to_"+targetPathNode.zone;if(mgJt.isEmpty(conditionalForbiddenTransitions[rule])===false){for(var z=0;z<conditionalForbiddenTransitions[rule].length;z++){invalidTransitions.push(conditionalForbiddenTransitions[rule][z])}}}for(i=0;i<gtwRoutes.length;i++){validRoute=true;if(gtwRoutes[i].status===ROUTING_EXIT_STATUS.SOLUTION_FOUND){routeCost=mgUtils.dist(startPathNode,gtwRoutes[i].steps[0])+gtwRoutes[i].cost+(floorTargetMode===false?mgUtils.dist(gtwRoutes[i].steps[gtwRoutes[i].nbElts-1],targetPathNode):0);if(minCost===null||minCost>routeCost){for(var t=0;t<invalidTransitions.length;t++){if(gtwRoutes[i].checkForbiddenStepOrTransition(invalidTransitions[t])){validRoute=false;mgLogger.debug(module,"Invalid transition");break}}if(validRoute){minCost=routeCost;minRouteIdx=i}}}}if(minRouteIdx===null){mgLogger.error(module,"No gateway route found");return{status:ROUTING_EXIT_STATUS.NO_SOLUTION_FOUND}}minGtwRoute=gtwRoutes[minRouteIdx];mgLogger.debug(module,minGtwRoute);var currentNode=mgData.getById(mgData.TABLES.PATHS,idxPathTagsIds[minGtwRoute.steps[0].tag]);var nextNode=currentNode;var currentStep=null;var nextStep=null;if((nextNode&&nextNode.id)!==(startPathNode&&startPathNode.id)){route=mgItineraryInternal.computeOptimizedSingleRoute(startPathNode,nextNode,"paths",isPMR)}else{route=mgItineraryInternal.getSingletonRoute(startPathNode)}itiPart=new ItiPart(route);itiObj.parts.push(itiPart);if(itiPart.status!==ROUTING_EXIT_STATUS.SOLUTION_FOUND){mgLogger.error(module,"No route found from user position to gateway "+minGtwRoute.steps[0].tag+" area "+minGtwRoute.steps[0].area);itiObj.status=itiPart.status;return itiObj}if(minGtwRoute.nbElts>1){currentStep=minGtwRoute.steps[0];var fixedDistance=0;for(i=1;i<minGtwRoute.nbElts;i++){nextStep=minGtwRoute.steps[i];if(currentStep.zone===nextStep.zone&&currentStep.floor===nextStep.floor&&currentStep.area===nextStep.area){if(currentNode===null){currentNode=mgData.getById(mgData.TABLES.PATHS,idxPathTagsIds[minGtwRoute.steps[i-1].tag])}nextNode=mgData.getById(mgData.TABLES.PATHS,idxPathTagsIds[minGtwRoute.steps[i].tag]);route=mgItineraryInternal.computeOptimizedSingleRoute(currentNode,nextNode,"paths",isPMR);itiPart=new ItiPart(route);itiObj.parts.push(itiPart);if(itiPart.status!==ROUTING_EXIT_STATUS.SOLUTION_FOUND){itiObj.status=itiPart.status;mgLogger.error(module,"No route found between "+currentNode.tag+" and "+(nextNode&&nextNode.tag));return itiObj}currentNode=nextNode}else{if(mgJt.isEmpty(_options.fixedDistance[currentStep.type])===false){itiObj.totalDistance+=_options.fixedDistance[currentStep.type];itiObj.totalWalkingTime+=Math.round(_options.fixedTime[currentStep.type]+_options.fixedDistance[currentStep.type]/mgMapConfig.get().walkSpeed)}if(i===minGtwRoute.nbElts-1){currentNode=mgData.getById(mgData.TABLES.PATHS,idxPathTagsIds[minGtwRoute.steps[i].tag])}else{currentNode=null}}currentStep=nextStep}}if(floorTargetMode===false&&(currentNode&&currentNode.id)!==(targetPathNode&&targetPathNode.id)){route=mgItineraryInternal.computeOptimizedSingleRoute(currentNode,targetPathNode,"paths",isPMR)}else{if(floorTargetMode===true){targetPathNode=currentNode}route=mgItineraryInternal.getSingletonRoute(targetPathNode)}itiPart=new ItiPart(route);itiObj.parts.push(itiPart);if(itiPart.status!==ROUTING_EXIT_STATUS.SOLUTION_FOUND){itiObj.status=itiPart.status;mgLogger.error(module,"No route found between "+currentNode.tag+" and "+targetPathNode.tag);return itiObj}}for(i=0;i<itiObj.parts.length;i++){if(i===itiObj.parts.length-1){itiObj.parts[i].setDirections(floorTargetMode,null);itiObj.status=itiObj.parts[i].status}else{itiObj.parts[i].setDirections(floorTargetMode,itiObj.parts[i+1])}itiObj.totalDistance+=itiObj.parts[i].infos.distance;itiObj.totalWalkingTime+=itiObj.parts[i].infos.walkingTime}return itiObj};var _computePathsIndex=function(){mgLogger.info(module,"Creating paths index...");idxPathTagsIds={};var pathsCollection=mgData.getCollection(mgData.TABLES.PATHS);if(mgJt.isEmpty(pathsCollection)===true){mgLogger.error(module,"Missing data for itinerary.");return}var tagIdx=pathsCollection.order.indexOf("tag");for(var id in pathsCollection.data){if(pathsCollection.data.hasOwnProperty(id)===false){continue}id=parseInt(id,10);var tag=pathsCollection.data[id][tagIdx];if(mgJt.isEmpty(tag)===true){continue}idxPathTagsIds[tag]=id}};PubSub.subscribe("mobigeo-dataLoaded",function(){if(!mgFeatures.isRouteEnabled()){return}mgLogger.time(module,"Itinerary indexes");_computePathsIndex();mgLogger.timeEnd(module,"Itinerary indexes")});return{ROUTING_EXIT_STATUS:ROUTING_EXIT_STATUS,getError:getError,getIti:getIti}}();var mgModal=function(){"use strict";var globalContainerId="mobigeo-modal-global-container",globalContainerEl,modalEl,contentEl,containerAppendedToDom=false,queue=[],instances=[],CONSTANTS={btnNamePrefix:"modal-btn-",minVerticalMargin:20,loaderFadeDuration:500,smallDeviceHeight:450},module=mgLogger.modules.Modal;var reset=function(){if(globalContainerEl){globalContainerEl.innerHTML="";hideGlobalContainer()}instances=[]};var showGlobalContainer=function(){mgDt.applyStyle(globalContainerEl,{display:"block"});mgJt.ionicHackStart()};var hideGlobalContainer=function(){mgDt.applyStyle(globalContainerEl,{display:"none"});mgJt.ionicHackEnd()};var show=function(options){if(mgJt.isEmpty(options)===true){mgLogger.error(module,"No options specified");return}if(mgJt.isEmpty(options.content)===true){mgLogger.error(module,"No content specified");return}if(mgJt.isEmpty(options.buttons)===true){options.buttons=[]}for(var i=0;i<instances.length;i++){if(options.content===instances[i].options.content){mgLogger.debug(module,"A modal with same content is already displayed, so skip this one");return instances[i].modalEl}}if(!mgMapUi.getMapContainerEl()){queue.push(options);return}_hideWithoutDelay();if(mgJt.isEmpty(globalContainerEl)===true){globalContainerEl=document.createElement("div");globalContainerEl.setAttribute("id",globalContainerId);mgPage.preventScrollOnThis(globalContainerEl)}var newInstance=createModal(options);instances.push(newInstance);if(containerAppendedToDom===false){mgMapUi.getMapContainerEl().appendChild(globalContainerEl)}if(instances.length===1){showGlobalContainer()}resize(true);if(options.showLoader===true){showLoader(newInstance)}var displayStyle={display:"block",opacity:1};if(options.skipFadeIn===true){displayStyle.transitionDuration="0s"}mgDt.applyStyle(newInstance.containerEl,displayStyle);newInstance.isVisible=true;if(newInstance.inputEl){newInstance.inputEl.focus()}if(mgJt.isEmpty(newInstance.options)===false&&typeof newInstance.options.onShow==="function"){newInstance.options.onShow()}window.setTimeout(applyQueue,1);return newInstance.modalEl};var showMessage=function(options){options.content='<div class="mobigeo-modal-content-message">'+options.content+"</div>";return show(options)};var showInput=function(options){options.content="<input "+' class="mobigeo-modal-input"'+(typeof options.maxlength==="number"?' maxlength="'+options.maxlength+'"':"")+' placeholder="'+options.placeholder+'"'+' value="'+(options.inputValue?options.inputValue:"")+'"'+"/>";options.isInput=true;var onHide=typeof options.onHide==="function"?options.onHide:function noop(){};options.onHide=function(){mgDt.iosHackScrollTo0();onHide()};return show(options)};var createModal=function(options){var containerEl=document.createElement("div"),modalId="mobigeo-modal-instance-"+(new Date).getTime();containerEl.setAttribute("id",modalId);containerEl.classList.add("mobigeo-modal-instance");containerEl.innerHTML=mgTemplates.modal.render(Object.assign(options,CONSTANTS));var modalEl=containerEl.children[0],contentEl=containerEl.querySelector(".mobigeo-modal-content"),inputEl;if(options.isInput){inputEl=containerEl.querySelector(".mobigeo-modal-input")}globalContainerEl.appendChild(containerEl);for(var i=0,total=options.buttons.length;i<total;i++){addButtonCallback(modalEl,options.buttons[i],options,inputEl)}if(mgJt.isEmpty(options.hideCrossClose)===true||options.hideCrossClose!==true){modalEl.querySelector(".mobigeo-modal-cross-close").addEventListener(mgSupport.interaction.click,applyCloseBtnEffectThenHide)}return{id:options.id,containerEl:containerEl,modalEl:modalEl,contentEl:contentEl,inputEl:inputEl,loaderEl:containerEl.querySelector(".mobigeo-modal-loader"),isVisible:false,options:options}};var addButtonCallback=function(modalEl,btnDef,options,inputEl){if(!btnDef){mgLogger.error(module,"empty button definition, skipping it");return}var button=modalEl.querySelector("."+CONSTANTS.btnNamePrefix+btnDef.name);if(typeof btnDef.cb!=="function"){mgLogger.error(module,"Wrong argument, expected a function for button '"+btnDef.name+"' callback but found a "+typeof btnDef.cb+" ("+btnDef.cb+")");mgDt.removeElement(button);return}else{if(options.isInput&&btnDef.name==="ok"){button.addEventListener(mgSupport.interaction.click,function(){btnDef.cb(inputEl)})}else{button.addEventListener(mgSupport.interaction.click,btnDef.cb)}button.eventListeners=[btnDef.cb]}mgDt.applyStyle(button,btnDef.style)};var applyCloseBtnEffectThenHide=function(event){mgDt.toggleHoverClass(event.target);window.requestAnimationFrame(function rafHide(){hide()})};var applyQueue=function(){if(queue.length>0){for(var i=0,total=queue.length;i<total;i++){show(queue[i])}mgJt.emptyArray(queue)}};var hide=function(opts){if(instances.length>0){var hasOpts=typeof opts==="object"&&opts!==null;var instance;if(hasOpts&&mgDt.isDOMElement(opts.el)===true){var match=getInstanceFromEl(opts.el);if(!match){return}instances.splice(match.index,1);instance=match.instance}else{instance=instances.pop()}window.setTimeout(function(){_hideWithoutDelay(instance);if(mgJt.isEmpty(instance.options)===false&&typeof instance.options.onHide==="function"){instance.options.onHide()}if(hasOpts&&typeof opts.next==="function"){opts.next()}},mgModalButton.CONSTANTS.buttonEffectDuration)}};var _hideWithoutDelay=function(instance){if(mgJt.isEmpty(instance)===false){mgDt.applyStyle(instance.containerEl,{display:"none"});instance.isVisible=false;var buttons=instance.modalEl.querySelector(".mobigeo-modal-buttons-container").children;for(var i=0;i<buttons.length;i++){if(Array.isArray(buttons.eventListeners)===true){for(var j=0;i<buttons.eventListeners;j++){buttons[i].removeEventListener(mgSupport.interaction.start,buttons.eventListeners[j])}}}if(instance.options.hideCrossClose!==true){instance.modalEl.querySelector(".mobigeo-modal-cross-close").removeEventListener(mgSupport.interaction.start,applyCloseBtnEffectThenHide)}mgDt.removeElement(instance.containerEl);if(instances.length===0){hideGlobalContainer()}}};var getInstanceFromEl=function(el){var instance,index;if(mgDt.isDOMElement(el)!==true){mgLogger.error(module,"Cannot find modal because of bad argument, expected DOM element",el)}else{for(var i=0;i<instances.length;i++){if(instances[i].modalEl===el){instance=instances[i];break}}if(!instance){mgLogger.error(module,"Cannot find modal matching DOM element ",el);return}else{return{index:i,instance:instance}}}return};var updateContent=function(el,newContent){var contentEl=el.querySelector(".mobigeo-modal-content-message")||el.querySelector(".mobigeo-modal-content");if(contentEl){contentEl.textContent=newContent}else{mgLogger.error(module,"argument's content differs from what is expected from a modal element",el)}};var filterContentSiblingsElements=function(el){return mgDt.elementFilter(el)&&el.classList.contains("mobigeo-modal-top-buttons")===false};var resize=function(instance,forced,isKeyboardOpen,keyboardSize){instances.forEach(function(inst){var usedVisibilityTrick=false,previousVisiblityValue;if(inst.options.placement){mgDt.applyStyle(inst.modalEl,inst.options.placement)}else{var availableHeight=mgMapUi.mapContainerOffsets.height-CONSTANTS.minVerticalMargin*2;if(inst.isVisible===false){previousVisiblityValue=inst.containerEl.style.visibility;mgDt.applyStyle(inst.containerEl,{visibility:"hidden"});mgDt.applyStyle(inst.containerEl,{display:"block"});usedVisibilityTrick=true}var actualSiblingsTotalHeight=0,contentSiblings=mgDt.getSiblings(inst.contentEl,filterContentSiblingsElements),actualContentHeight=mgDt.getChildrenTotalHeight(inst.contentEl);for(var j=0,totalSib=contentSiblings.length;j<totalSib;j++){actualSiblingsTotalHeight+=contentSiblings[j].offsetHeight}if(isKeyboardOpen){availableHeight-=keyboardSize}var contentMaxHeight=availableHeight-actualSiblingsTotalHeight;var topPosition=0;if(contentMaxHeight<actualContentHeight){topPosition=CONSTANTS.minVerticalMargin}else if(availableHeight>CONSTANTS.smallDeviceHeight){topPosition=(availableHeight-(actualSiblingsTotalHeight+actualContentHeight))/3}else{topPosition=(availableHeight-(actualSiblingsTotalHeight+actualContentHeight))/6}contentMaxHeight=contentMaxHeight-topPosition;mgDt.applyStyle(inst.modalEl,{top:topPosition+"px"});mgDt.applyStyle(inst.contentEl,{maxHeight:contentMaxHeight+"px"})}if(usedVisibilityTrick===true){mgDt.applyStyle(inst.containerEl,{visibility:previousVisiblityValue})}})};var _setOpacity=function(el,value){mgDt.applyStyle(el,{opacity:value})};var showLoader=function(instance){if(mgJt.isEmpty(instance)===true){instance=instances[instances.length-1]}if(instance){var loaderEl=instance.loaderEl;loaderEl.classList.remove(mgDt.FORCED_HIDE_CSS_CLASS);window.setTimeout(_setOpacity,10,loaderEl,1)}};var hideLoader=function(instance){if(mgJt.isEmpty(instance)===true){instance=instances[instances.length-1]}if(instance){var loaderEl=instance.loaderEl;mgDt.applyStyle(loaderEl,{opacity:0});window.setTimeout(_hideLoader,CONSTANTS.loaderFadeDuration,loaderEl)}};var _hideLoader=function(loaderEl){loaderEl.classList.add(mgDt.FORCED_HIDE_CSS_CLASS)};return{reset:reset,show:show,showMessage:showMessage,showInput:showInput,hide:hide,resize:resize,showLoader:showLoader,hideLoader:hideLoader,updateContent:updateContent}}();var mgModalButton=function(){"use strict";var MINIMUM_ARGS_COUNT=3,CONSTANTS={buttonEffectDuration:120},module=mgLogger.modules.Modal;var PREDEFINED={};var addPredefined=function(name,title,callback,styleOpts){PREDEFINED[name]=function(){return create(name,title,callback,styleOpts)}};var getPredefined=function(name,overrideOpts){var buttonDef=PREDEFINED[name]();if(mgJt.isEmpty(overrideOpts)===false){for(var prop in overrideOpts){if(overrideOpts.hasOwnProperty(prop)===false){continue}buttonDef[prop]=overrideOpts[prop]}}return buttonDef};var initialize=function(){addPredefined("close",mgI18N.t("close","misc"),mgModal.hide);addPredefined("cancel",mgI18N.t("cancel","misc"),mgModal.hide);addPredefined("ok",mgI18N.t("ok","misc"))};var create=function(name,title,callback,styleOpts){if(arguments.length<MINIMUM_ARGS_COUNT){mgLogger.error(module,"Missing button argument(s). Expected "+MINIMUM_ARGS_COUNT+" but found "+arguments.length)}var btnDef={name:name,title:title,cb:function(e){mgDt.toggleHoverClass(e.target);callback()},style:{}};if(mgJt.isEmpty(styleOpts)===false){for(var styleKey in styleOpts){if(styleOpts.hasOwnProperty(styleKey)===false){continue}btnDef.style[styleKey]=styleOpts[styleKey]}}for(var defStyleKey in CONSTANTS.defaultStyle){if(CONSTANTS.defaultStyle.hasOwnProperty(defStyleKey)===false){continue}if(mgJt.isEmpty(btnDef.style[defStyleKey])===true){btnDef.style[defStyleKey]=CONSTANTS.defaultStyle[defStyleKey]}}return btnDef};PubSub.subscribe("mobigeo-domReady",initialize);return{get CONSTANTS(){return CONSTANTS},create:create,get ok(){return getPredefined("ok")},get close(){return getPredefined("close")},get cancel(){return getPredefined("cancel")},getPredefined:getPredefined,addPredefined:addPredefined}}();var mgItineraryUi=function(){"use strict";var module=mgLogger.modules.Route,infosContainer=null,destinationEl=null,infosLegendEl=null,routingSteps=null,routingStep=null,arrowRightEl=null,arrowLeftEl=null,routingStepsEl=null,reloadBtnEl=null,clearBtnEl=null,currentStep=0,_stepCount=0,_itiObj=null,animationTimeout=null,hammertime=null,partsEl=[],stepFlags=[],currentOptions=null;var _options={showStartFlag:true,itineraryPathClassName:"mobigeo-itinerary",arrowDisabledClassName:"iti-btn-disabled"};var getElements=function(){if(mgFeatures.isRouteEnabled()){infosContainer=mgMapUi.getMapDisplayEl().querySelector(".iti-infos-container");destinationEl=infosContainer.querySelector(".iti-infos-text-destination");infosLegendEl=infosContainer.querySelector(".iti-infos-text-step-legend");arrowRightEl=infosContainer.querySelector(".btn-iti-arrow-right");arrowLeftEl=infosContainer.querySelector(".btn-iti-arrow-left");reloadBtnEl=infosContainer.querySelector(".btn-iti-reload");clearBtnEl=infosContainer.querySelector(".btn-iti-clear");routingStepsEl=infosContainer.querySelector(".btn-iti-rsteps");if(mgFeatures.isLocationEnabled()&&mgLocation.hasPosition()!==true){mgDt.hideElement(reloadBtnEl)}MobiGeo.Location.on("enterSite",function(){mgDt.showElement(reloadBtnEl)});MobiGeo.Location.on("exitSite",function(){mgDt.hideElement(reloadBtnEl)});_bindEventHandlers()}};PubSub.subscribe("mobigeo-mapUiReady",getElements);var LoadingModalTimer=function(){var timeoutRef,modalEl,DELAY;var start=function(){if(typeof DELAY==="undefined"){DELAY=mgMapConfig.get().Ui.itiComputingModalDelay}timeoutRef=window.setTimeout(_displayModal,DELAY)};var _displayModal=function(){modalEl=mgModal.showMessage({title:mgI18N.t("_name_","itinerary"),content:mgI18N.t("beingComputed","itinerary"),hideCrossClose:true})};var clear=function(){window.clearTimeout(timeoutRef);if(modalEl){mgModal.hide({el:modalEl})}};return{start:start,clear:clear}}();var display=function(options,onAccept,cb){clear();currentOptions=options;LoadingModalTimer.start();window.setTimeout(_display,1,options,onAccept,cb)};var createItiPopup=function(itiObj,targetMember){return mgTemplates.itipopup.render({showTimeAndLength:mgMapConfig.get().Ui.itiShowTimeAndLength===true,meters:itiObj.totalDistance,meterLabel:mgI18N.t("meters","itinerary"),startsFromUserPosition:hasMember(mgPositionManager.start)!==true,time:mgJt.secondsToString(itiObj.totalWalkingTime),startIconText:mgI18N.t("flagstarlabel","itinerary"),flagStartLabelOnly:mgMapUi.getOptions().flagStartLabelOnly,startTitle:mgJt.isEmpty(mgPositionManager.start.members)===false?mgPositionManager.start.members[0].title:mgI18N.t("yourPosition","itinerary"),destinationTitle:targetMember?targetMember.title:mgI18N.t("recordedPosition","itinerary"),destinationType:targetMember?targetMember.type.toLowerCase():""})};var _display=function(options,onAccept,cb){var itiObj=mgItinerary.getIti(options);LoadingModalTimer.clear();var itineraryIsInvalid=mgJt.isEmpty(itiObj)===true||itiObj.status!==mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND;if(itineraryIsInvalid){var error=mgItinerary.getError(itiObj);mgLogger.error(module,"Itinerary error: "+error.message);mgModal.showMessage({title:mgI18N.t("_name_","mapPosition"),content:error.message,buttons:[mgModalButton.close]});clear();cb(error.code)}else{var targetMember=mgPositionManager.target.members[0];var msg=createItiPopup(itiObj,targetMember);var startButton=mgModalButton.ok;startButton.title=mgI18N.t("start","misc");startButton.cb=function(){mgModal.hide();window.setTimeout(function(){draw(itiObj);if(typeof onAccept==="function"){onAccept()}},200)};mgMapUi.resize();mgModal.show({title:mgI18N.t("_name_","itinerary"),content:msg,buttons:[startButton,mgModalButton.close]});routingSteps=document.querySelector(".iti-routing-steps");routingStep=document.querySelector(".iti-routing-step");_applyRoutingSteps(itiObj);cb()}};var reset=function(){currentStep=0;_itiObj=null;_stepCount=0;for(var i=0,total=partsEl.length;i<total;i++){partsEl[i].parentNode.removeChild(partsEl[i])}mgJt.emptyArray(partsEl);for(i=0,total=stepFlags.length;i<total;i++){stepFlags[i].removePin()}mgJt.emptyArray(stepFlags);if(mgMapConfig.isLoaded()&&mgSynopticView.isEnabled()){mgSynopticView.removeIti();mgSynopticPins.clearAll()}};var clear=function(){reset();mgPositionManager.start.hide();mgPositionManager.target.hide();if(mgJt.isEmpty(infosContainer)===false){mgDt.hideElement(infosContainer,false)}PubSub.publish("mobigeoRoute-clear");mgVignette.showThumbnail();mgSynopticView.show()};var hasMember=function(pos){return Array.isArray(pos.members)&&pos.members.length>0};var hasFavoriteMember=function(pos){return Array.isArray(pos.members)&&pos.members.length>0&&pos.members[0].type===mgData.TABLES.FAVORITE_POSITIONS};var draw=function(itiObj){if(mgJt.isEmpty(itiObj)===true||mgJt.isEmpty(itiObj.parts)===true){mgLogger.error(module,"Could not draw itinerary: empty itinerary");return false}if(mgJt.isEmpty(_options.strokeColor)){_options.strokeColor=mgMapConfig.get().Ui.itiStrokeColor?mgMapConfig.get().Ui.itiStrokeColor:"#ff0000"}_options.arrowStrokeColor=mgMapConfig.get().Ui.itiArrowStrokeColor?mgMapConfig.get().Ui.itiArrowStrokeColor:"#ff0000";_options.arrowFillColor=mgMapConfig.get().Ui.itiArrowFillColor?mgMapConfig.get().Ui.itiArrowFillColor:"#ffffff";if(mgMapConfig.get().Ui.options.showArrowsOnPath===true){var arrowSymbol=document.querySelector("#markerArrowEmpty path");mgDt.applyStyle(arrowSymbol,{stroke:_options.arrowStrokeColor});mgDt.applyStyle(arrowSymbol,{fill:_options.arrowFillColor})}if(mgLogger.modules.Route.simulateMove===true){PubSub.publish("mobigeodebug-route-drawn",itiObj)}var startIsAPOI=hasMember(mgPositionManager.start);_itiObj=itiObj;_stepCount=itiObj.parts.length;mgPositionManager.clearAll([mgPositionManager.TYPES.ITI_START,mgPositionManager.TYPES.ITI_STEP,mgPositionManager.TYPES.ITI_TARGET]);if(_options.showStartFlag===true&&Array.isArray(mgPositionManager.start.members)&&mgPositionManager.start.members.length>0){mgPositionManager.start.display()}_options.dashArray=mgMapConfig.get().Ui.itiDashArray?mgMapConfig.get().Ui.itiDashArray:"none";_options.fillColor=mgMapConfig.get().Ui.itiFillColor?mgMapConfig.get().Ui.itiFillColor:"#ff0000";console.log("OPTIONS = ",_options.dashArray);for(var i=0;i<_stepCount;i++){var partInfos=itiObj.parts[i].infos;if(_insertPart(partInfos,_options.strokeColor,_options.dashArray,_options.fillColor)===false){mgLogger.error(module,"Could not draw one part of the itinerary")}var step=i+1;partInfos.isStart=i===0;partInfos.isArrival=step===_stepCount;_insertStepPins(partInfos,step)}if(mgMapConfig.get().Ui.synopticViewOptions&&mgMapConfig.get().Ui.synopticViewOptions.enableSynopticView===true){mgSynopticView.drawIti(itiObj,_options)}if(mgMapConfig.get().Ui.synopticViewOptions&&mgMapConfig.get().Ui.synopticViewOptions.hideSynopticViewDuringIti===true){mgVignette.hideThumbnail();mgSynopticView.hide()}if(Array.isArray(mgPositionManager.target.members)&&mgPositionManager.target.members.length>0){mgDt.showElement(reloadBtnEl)}else{mgDt.hideElement(reloadBtnEl)}mgDt.showElement(infosContainer,true,resizeInfosText);currentStep=1;_applyStep(itiObj);if(mgPositionTracking.isEnabled()!==true||startIsAPOI){if(startIsAPOI){mgPositionTracking.disable()}focusMapOnStep(1)}return true};var reload=function(){if(mgPositionManager.getUserPosition().displayed!==true){mgModal.showMessage({title:mgI18N.t("_name_","mapPosition"),content:mgI18N.t("positionNotLocated","mapPosition"),buttons:[mgModalButton.close]});return}if(Array.isArray(mgPositionManager.target.members)===false||mgPositionManager.target.members.length===0){mgLogger.error(module,"Cannot reload itinerary (no member)");return}var targetMember=mgPositionManager.target.members[0];_MobiGeoMapRoute.goTo({id:targetMember.id,type:mgData.POI_TYPES[targetMember.type]||targetMember.type,placeId:mgPositionManager.target.place.id},currentOptions)};var _onNextClick=function(){if(currentStep<_stepCount){currentStep++;_applyStep(_itiObj);mgPositionTracking.disable();focusMapOnStep(currentStep)}};var _onRoutingStepsClick=function(){var targetMember=mgPositionManager.target.members[0];var msg=createItiPopup(_itiObj,targetMember);mgMapUi.resize();mgModal.show({title:mgI18N.t("_name_","itinerary"),content:msg,buttons:[mgModalButton.close]});routingSteps=document.querySelector(".iti-routing-steps");routingStep=document.querySelector(".iti-routing-step");_applyRoutingSteps(_itiObj)};var _onPreviousClick=function(){if(currentStep>1){currentStep--;_applyStep(_itiObj);mgPositionTracking.disable();focusMapOnStep(currentStep)}};var hideAllStepFlag=function(){for(var i=0,stepFlagsL=stepFlags.length;i<stepFlagsL;i++){stepFlags[i].hide()}};var swipeLeftHandler=function(event){_onNextClick()};var enableSwipeLeft=function(){hammertime.on("swipeleft",swipeLeftHandler)};var disableSwipeLeft=function(){hammertime.off("swipeleft",swipeLeftHandler)};var toggleSwipeLeft=function(){disableSwipeLeft();window.setTimeout(enableSwipeLeft,500)};var swipeRightHandler=function(event){_onPreviousClick()};var enableSwipeRight=function(){hammertime.on("swiperight",swipeRightHandler)};var disableSwipeRight=function(){hammertime.off("swiperight",swipeRightHandler)};var toggleSwipeRight=function(){disableSwipeRight();window.setTimeout(enableSwipeRight,500)};var isButtonEnabled=function(el){return el.classList.contains(_options.arrowDisabledClassName)===false};var enableButton=function(el){if(isButtonEnabled(el)!==true){el.classList.remove(_options.arrowDisabledClassName)}};var disableButton=function(el){if(isButtonEnabled(el)){el.classList.add(_options.arrowDisabledClassName)}};var showStepFlag=function(step){stepFlags[step].display()};var _bindEventHandlers=function(){mgDt.addTapEvent(arrowRightEl,function itiNextStepClickHandler(){if(isButtonEnabled(arrowRightEl)){mgDt.toggleHoverClass(arrowRightEl);_onNextClick();toggleSwipeLeft()}});mgDt.addTapEvent(arrowLeftEl,function itiPreviousStepClickHandler(){if(isButtonEnabled(arrowLeftEl)){mgDt.toggleHoverClass(arrowLeftEl);_onPreviousClick();toggleSwipeRight()}});if(reloadBtnEl){mgDt.addTapEvent(reloadBtnEl,function itiReloadClickHandler(){mgDt.toggleHoverClass(reloadBtnEl);window.setTimeout(reload,250)})}if(clearBtnEl){mgDt.addTapEvent(clearBtnEl,function itiClearClickHandler(){mgDt.toggleHoverClass(clearBtnEl);window.setTimeout(clear,250)})}mgDt.addTapEvent(routingStepsEl,function itiRoutingStepsClickHandler(){if(isButtonEnabled(routingStepsEl)){mgDt.toggleHoverClass(routingStepsEl);_onRoutingStepsClick()}});hammertime=new Hammer(infosContainer.querySelector(".iti-infos"));hammertime.options.swipeVelocityY=.8;enableSwipeLeft();enableSwipeRight()};var ELEVATOR_AREA_WIDTH=60;var resizeInfosText=function(){if(destinationEl){destinationEl.style.maxWidth=window.innerWidth-infosContainer.offsetLeft-destinationEl.offsetLeft-ELEVATOR_AREA_WIDTH+"px"}};var _applyRoutingSteps=function(itiObj){itiObj.parts.map(function(ele,index){var rstepText=null;if(index===0){routingStep.id="rs"+index;rstepText=routingStep.querySelector(".iti-rs-text")}else{var rstep=routingStep.cloneNode(true);rstep.id="rs"+index;rstepText=rstep.querySelector(".iti-rs-text");routingSteps.appendChild(rstep)}if(index===itiObj.parts.length-1){var separator=routingStep.querySelector(".iti-routing-separator");var lastSeparator=separator.cloneNode(true);routingSteps.appendChild(lastSeparator)}rstepText.textContent=ele.infos.directions})};var _applyStep=function(itiObj){var partInfos=itiObj.parts[currentStep-1].infos;if(Array.isArray(mgPositionManager.target.members)&&mgPositionManager.target.members.length>0){destinationEl.textContent=mgPositionManager.target.members[0].title;mgDt.showElement(destinationEl)}else{mgDt.hideElement(destinationEl)}infosLegendEl.textContent=partInfos.directions;hideAllStepFlag();if(currentStep<=stepFlags.length){showStepFlag(currentStep-1)}if(currentStep===1){disableButton(arrowLeftEl)}else{enableButton(arrowLeftEl)}if(currentStep===_stepCount){disableButton(arrowRightEl)}else{enableButton(arrowRightEl)}PubSub.publish("mobigeoRoute-stepChange",{currentPartInfo:partInfos,nextPartInfo:partInfos.isArrival!==true?itiObj.parts[currentStep].infos:null})};var _insertStepPins=function(partInfos,step){if(partInfos.isArrival===false){var stepPosition=mgPositionFactory(mgPositionManager.TYPES.ITI_STEP,step);var stepPos={xy_m:{x:partInfos.lastX,y:partInfos.lastY},zone:partInfos.zone,floor:partInfos.floor};stepPosition.setFromL12n(stepPos);stepFlags.push(stepPosition)}};var _insertPart=function(partInfos,strokeColor,dashArray,fillColor){var siteId=mgMapConfig.get().siteId;var containerName="#mapsvg_"+siteId+"_"+partInfos.zone+"_"+partInfos.floor+"_0_1";var containerEl=mgMapUi.getMapstackEl().querySelector(containerName);if(mgJt.isEmpty(containerEl)===true){mgLogger.error(module,"Could not find this zone/floor SVG container",containerName);return false}var svgEl=document.createElementNS("http://www.w3.org/2000/svg","g");svgEl.setAttribute("class",_options.itineraryPathClassName);var bgPathElStyle="opacity: 0;"+"transition: opacity 1.5s;"+"pointer-events: none;"+"stroke: "+strokeColor+";"+"stroke-width: "+(getStrokeWidth()+2)+"px;"+"stroke-linejoin: round;"+"stroke-linecap: butt;"+"fill-opacity: 0;";var pathElStyle="opacity: 0;"+"transition: opacity 1.5s;"+"pointer-events: none;"+"stroke: "+fillColor+";"+"stroke-width: "+getStrokeWidth()+"px;"+"stroke-linejoin: round;"+"stroke-linecap: butt;"+"fill-opacity: 0;"+"stroke-dasharray: "+dashArray+";";var pathArrowsElStyle="opacity: 0;"+"transition: opacity 1.5s;"+"pointer-events: none;"+"stroke: none;"+"stroke-width: "+getStrokeWidth()+"px;"+"stroke-linejoin: round;"+"stroke-linecap: butt;"+"fill-opacity: 0;"+"marker-end: url(#markerArrowEmpty);";var bgPathEl=document.createElementNS("http://www.w3.org/2000/svg","path");bgPathEl.setAttribute("data-is-itinerary","");bgPathEl.setAttribute("d",partInfos.path);bgPathEl.setAttribute("style",bgPathElStyle);svgEl.appendChild(bgPathEl);var pathEl=document.createElementNS("http://www.w3.org/2000/svg","path");pathEl.setAttribute("data-is-itinerary","");pathEl.setAttribute("d",partInfos.path);pathEl.setAttribute("style",pathElStyle);svgEl.appendChild(pathEl);if(mgMapConfig.get().Ui.options.showArrowsOnPath===true){var workPath=partInfos.path.split(" ");var currentPoint=[];var xy=[];var pathLength=0;var arrowDistThresholdIndoor=mgMapConfig.get().Ui.itiArrowIntervalIndoor?mgMapConfig.get().Ui.itiArrowIntervalIndoor:200;var arrowDistThresholdOutdoor=mgMapConfig.get().Ui.itiArrowIntervalOutdoor?mgMapConfig.get().Ui.itiArrowIntervalOutdoor:500;var arrowDistThreshold=partInfos.zone===0?arrowDistThresholdOutdoor:arrowDistThresholdIndoor;var subPaths=[];var subPathIndex=0;var currentSubPath="";var arrowsPathEl=null;workPath.shift();if(workPath.length>1){for(var segIndex=0;segIndex<workPath.length;segIndex++){currentSubPath+=workPath[segIndex];xy=workPath[segIndex].split(",");if(segIndex>1){pathLength+=Math.sqrt((xy[0]-currentPoint[0])*(xy[0]-currentPoint[0])+(xy[1]-currentPoint[1])*(xy[1]-currentPoint[1]));if(pathLength>arrowDistThreshold){arrowsPathEl=document.createElementNS("http://www.w3.org/2000/svg","path");arrowsPathEl.setAttribute("data-is-itinerary","");arrowsPathEl.setAttribute("d","M "+currentSubPath);arrowsPathEl.setAttribute("style",pathArrowsElStyle);svgEl.appendChild(arrowsPathEl);currentSubPath=workPath[segIndex];pathLength=0}}currentPoint=xy;currentSubPath+=" "}}}containerEl.appendChild(svgEl);partsEl.push(svgEl);return true};var getStrokeWidth=function(){var initialStrokeWidth=mgMapConfig.get().Ui.itiStrokeWidth?mgMapConfig.get().Ui.itiStrokeWidth:3;return initialStrokeWidth*mgMap.getMap2ref()/mgMapTransform.getS()};var refreshPathWidth=function(){if(!mgFeatures.isRouteEnabled()){return}if(mgJt.isEmpty(partsEl)===false){var strokeWidth=getStrokeWidth(),itiEls=mgMapUi.getMapstackEl().querySelectorAll(".mobigeo-itinerary path[data-is-itinerary]");for(var i=0;i<itiEls.length;i++){mgDt.applyStyle(itiEls[i],{strokeWidth:strokeWidth,opacity:1})}}};PubSub.subscribe("mobigeo-mapRefreshed",refreshPathWidth);var focusMapOnStep=function(stepToFocus){var infos=_itiObj.parts[stepToFocus-1].infos;mgMap.focusOnPosition({xy_m:{x:infos.secondX!==null?infos.secondX:infos.firstX,y:infos.secondY!==null?infos.secondY:infos.firstY},zone:infos.zone,floor:infos.floor})};var onUserPositionChanged=function(eventName,data){if(!mgFeatures.isRouteEnabled()){return}selectStepMatchingZoneAndFloor(data.zone,data.floor,data.area)};PubSub.subscribe("mobiGeoPosition-zonefloor-updated",onUserPositionChanged);var selectStepMatchingZoneAndFloor=function(zone,floor,area){if(mgJt.isEmpty(_itiObj)===true||mgJt.isEmpty(_itiObj.parts)===true||mgJt.isEmpty(_itiObj.parts[currentStep-1])===true||mgJt.isEmpty(_itiObj.parts[currentStep-1].infos)===true){return}var matchingIndex=getStepMatching(zone,floor,area,currentStep-1);if(mgJt.isEmpty(matchingIndex)===true){matchingIndex=getStepMatching(zone,floor,area,0)}if(mgJt.isEmpty(matchingIndex)===false){if(matchingIndex!==currentStep-1){currentStep=matchingIndex+1;_applyStep(_itiObj)}}};var getStepMatching=function(zone,floor,area,startIndex){for(var i=startIndex;i<_stepCount;i++){if(_itiObj.parts[i].infos.zone===zone&&_itiObj.parts[i].infos.floor===floor&&_itiObj.parts[i].infos.area===area){return i}}};return{get currentStep(){return currentStep},resize:function(){resizeInfosText()},display:display,clear:clear,reset:reset,reload:reload,selectStepMatchingZoneAndFloor:selectStepMatchingZoneAndFloor}}();var mgItineraryInternal=function(){"use strict";var module=mgLogger.modules.Route,closedList=[],openList=null,nbNeighbours=0;var _options={maxIterations:1e3,noPMRNodeTypesRe:/stairs|stairsarea|dotnopmr|escalator|escalatorup[0-9]*|escalatordown[0-9]*/,PMROnlyNodeTypes:["dotpmronly","elevatorpmronly"]};var Step=function(node){this.nodeId=node.id;this.zone=node.zone;this.floor=node.floor;this.area=node.area;this.x=node.x;this.y=node.y;this.type=node.type;this.tag=node.tag};var Route=function(){this.status=null;this.steps=[];this.cost=null;this.nbElts=0;this.nbIter=0;this.reverse=function(){if(this.status===mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND&&this.nbElts>1){var reversedRouteSteps=[],i,j;for(i=0;i<this.nbElts;i++){j=this.nbElts-1-i;reversedRouteSteps[i]=this.steps[j]}for(i=0;i<this.nbElts;i++){this.steps[i]=reversedRouteSteps[i]}}};this.getNodeOfStep=function(index){if(this.status===mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND&&this.nbElts>index){var step=this.steps[index];var node={id:step.nodeId,zone:step.zone,floor:step.floor,area:step.area,x:step.x,y:step.y,tag:step.tag,type:step.type};return node}return null};this.checkForbiddenStepOrTransition=function(stepPattern){if(!mgJt.isEmpty(stepPattern)&&!mgJt.isEmpty(stepPattern.step1)&&this.status===mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND){var i,s1,s2,prop,stepCheck,transCheck,regexp;for(i=0;i<this.nbElts;i++){s1=this.steps[i];stepCheck=true;for(prop in stepPattern.step1){if(stepPattern.step1.hasOwnProperty(prop)){regexp=new RegExp(stepPattern.step1[prop]);if(s1.hasOwnProperty(prop)&&(s1[prop]+"").match(regexp)===null){stepCheck=false;break}}}if(stepCheck){if(mgJt.isEmpty(stepPattern.step2)){return true}else{stepCheck=false;if(i<this.nbElts-1){s2=this.steps[i+1];transCheck=true;for(prop in stepPattern.step2){if(stepPattern.step2.hasOwnProperty(prop)){regexp=new RegExp(stepPattern.step2[prop]);if(s2.hasOwnProperty(prop)&&(s2[prop]+"").match(regexp)===null){transCheck=false;break}}}if(transCheck){mgLogger.debug(module,"Invalid transition from ("+s1.tag+","+s1.type+","+s1.zone+","+s1.floor+","+s1.area+") to ("+s2.tag+","+s2.type+","+s2.zone+","+s2.floor+","+s2.area+")");return true}}}}}}return false}};var _table="";var _isPMR=false;var getSingletonRoute=function(pathNode){var route=new Route;var step=new Step(pathNode);route.status=mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND;route.cost=0;route.nbElts=1;route.steps.push(step);return route};var computeOptimizedSingleRoute=function(startPathNode,targetPathNode,table,isPMR){var directRoute=computeSingleRoute(startPathNode,targetPathNode,table,isPMR);if(directRoute.status===mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND&&directRoute.nbElts>2){var reverseStartPathNode=targetPathNode;var reverseTargetPathNode=null;if(startPathNode.type==="l12n"){reverseTargetPathNode=directRoute.getNodeOfStep(1)}else{reverseTargetPathNode=startPathNode}var reverseRoute=computeSingleRoute(reverseStartPathNode,reverseTargetPathNode,table,isPMR);if(reverseRoute.status===mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND&&reverseRoute.nbElts>1){if(startPathNode.type==="l12n"){var n=reverseRoute.nbElts-1;var lastStep=new Step(startPathNode);reverseRoute.steps.push(lastStep);reverseRoute.cost+=Math.sqrt((startPathNode.x-reverseRoute.steps[n].x)*(startPathNode.x-reverseRoute.steps[n].x)+(startPathNode.y-reverseRoute.steps[n].y)*(startPathNode.y-reverseRoute.steps[n].y));reverseRoute.nbElts++}if(directRoute.cost<=reverseRoute.cost){return directRoute}else{reverseRoute.reverse();return reverseRoute}}else{return directRoute}}else{return directRoute}};var computeSingleRoute=function(startPathNode,targetPathNode,table,isPMR){nbNeighbours=table==="gtw_paths"?mgMapConfig.get().maxGtwPathNodeNeighbours:mgMapConfig.get().maxPathNodeNeighbours+1;_table=table;_isPMR=isPMR;mgLogger.debug(module,"Running A* on ("+(startPathNode&&startPathNode.id)+", "+(targetPathNode&&targetPathNode.id)+")");openList=new OpenListObj;closedList=[];new ExploredNode(startPathNode,startPathNode&&startPathNode.id,0,targetPathNode);var iterations=0;var endReason;var route=new Route;while(true){if(openList.getCount()===0){endReason=mgItinerary.ROUTING_EXIT_STATUS.NO_SOLUTION_FOUND;break}var nextCandidateNode=openList.getMinFNode();if(nextCandidateNode===null){endReason=mgItinerary.ROUTING_EXIT_STATUS.NO_NEIGHBOUR_FOUND;break}if((nextCandidateNode&&nextCandidateNode.id)===(targetPathNode&&targetPathNode.id)){targetPathNode=nextCandidateNode;endReason=mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND;break}nextCandidateNode.exploreNeighbourhood();iterations++;if(iterations===_options.maxIterations){endReason=mgItinerary.ROUTING_EXIT_STATUS.MAX_ITERATION_REACHED;break}}switch(endReason){case mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND:var path=_traceback(targetPathNode&&targetPathNode.id,startPathNode&&startPathNode.id,targetPathNode);route.nbIter=iterations;if(mgJt.isEmpty(path)===true){route.status=mgItinerary.ROUTING_EXIT_STATUS.MAX_ITERATION_REACHED}else{var l=0,step=null;var node=path.pop();while(node){step=new Step(node);route.steps.push(step);l++;node=path.pop()}route.nbElts=l;route.cost=targetPathNode.G;route.status=mgItinerary.ROUTING_EXIT_STATUS.SOLUTION_FOUND}break;case mgItinerary.ROUTING_EXIT_STATUS.NO_SOLUTION_FOUND:route.status=mgItinerary.ROUTING_EXIT_STATUS.NO_SOLUTION_FOUND;break;default:route.status=endReason}return route};var ExploredNode=function(node,parentId,G,targetPathNode){this.id=node.id;this.parentId=parentId;this.type=node.type;this.x=node.x;this.y=node.y;this.zone=node.zone;this.floor=node.floor;this.area=node.area;this.tag=node.tag;for(var i=1,vId=null,vCost=null;i<=nbNeighbours;i++){vId=node["v"+i+"Id"];vCost=node["v"+i+"cost"];this["N"+i]=typeof vId==="undefined"?0:vId;this["G"+i]=typeof vCost==="undefined"?0:vCost}this.G=G;this.H=Math.abs(this.x-(targetPathNode&&targetPathNode.x))+Math.abs(this.y-(targetPathNode&&targetPathNode.y));this.F=this.G+this.H;openList.addNode(this);var exploreNeighbour=function(id,parentNode,G){if(typeof closedList[id]==="undefined"){var index=openList.node2Index(id);if(index>-1){var currentNode=openList.nodes[index];if(currentNode.G>G){currentNode.G=G;currentNode.F=G+currentNode.H;currentNode.parentId=parentNode.id}}else{var n=mgData.getById(_table,id);if(mgJt.isEmpty(n)===false&&((n.type!=="place"||id===targetPathNode.id)&&(_isPMR===false&&_options.PMROnlyNodeTypes.indexOf(n.type)===-1||_isPMR===true&&n.type.match(_options.noPMRNodeTypesRe)===null))){new ExploredNode(n,parentNode.id,G,targetPathNode)}}}};this.exploreNeighbourhood=function(){openList.moveNodeToClosedList(this);for(var i=1;i<=nbNeighbours;i++){if(this["N"+i]>0){exploreNeighbour(this["N"+i],this,this.G+this["G"+i])}}}};var OpenListObj=function(){this.nodes=[];this.addNode=function(node){if(typeof node.id!=="undefined"){this.nodes.push(node)}};this.node2Index=function(node){if(typeof node==="number"||typeof node==="string"){node={id:node}}if(typeof node.id!=="undefined"){for(var index=0;index<this.nodes.length;index++){if(this.nodes[index].id===node.id){return index}}return-1}};this.getCount=function(){return this.nodes.length};this.moveNodeToClosedList=function(node){var index=this.node2Index(node);if(index>-1){this.nodes.splice(index,1);closedList[node.id]=node}};this.getMinFNode=function(){if(this.nodes.length>0){var n=this.nodes[0];for(var i=1;i<this.nodes.length;i++){if(this.nodes[i].F<n.F){n=this.nodes[i]}}return n}return null}};var _traceback=function(_tId,_sId,_targetPathNode){var n=0;var path=[];do{path.push(_targetPathNode);_tId=_targetPathNode.parentId;_targetPathNode=closedList[_tId];n++;if(n===_options.maxIterations){return null}}while(_tId!==_sId);path.push(_targetPathNode);return path};return{computeSingleRoute:computeSingleRoute,computeOptimizedSingleRoute:computeOptimizedSingleRoute,getSingletonRoute:getSingletonRoute}}();var mgItineraryPolygonInternal=function(){"use strict";var module=mgLogger.modules.Route;var _options={targetNbCandidates:10,fishnetSizeOutside:250,fishnetSizeInside:150};var segmentIsCutByLine=function(x1,y1,x2,y2,x3,y3,x4,y4){if(x3===x4){if(x1<x3&&x2>x3||x1>x3&&x2<x3){return true}else{return false}}else{var a=(y3-y4)/(x3-x4);var b=(x3*y4-y3*x4)/(x3-x4);var th_y1=a*x1+b;var th_y2=a*x2+b;if(y1<th_y1&&y2>th_y2||y1>th_y1&&y2<th_y2){return true}else{return false}}};var polygonIsCutByPath=function(polygonIndex,polygon,pos,neighbour){var xSeries=polygon[polygonIndex.xSeries].split(",");var ySeries=polygon[polygonIndex.ySeries].split(",");var max=polygon[polygonIndex.nbVertices]-1;for(var i=0;i<max;i++){var x1=parseInt(xSeries[i],10);var x2=parseInt(xSeries[i+1],10);var y1=parseInt(ySeries[i],10);var y2=parseInt(ySeries[i+1],10);if(segmentIsCutByLine(x1,y1,x2,y2,pos.x,pos.y,neighbour.x,neighbour.y)===true&&segmentIsCutByLine(pos.x,pos.y,neighbour.x,neighbour.y,x1,y1,x2,y2)===true){return true}}return false};var pointIsInPolygon=function(polygonIndex,polygon,point){var c=false;var i,l,n=polygon[polygonIndex.nbVertices];var xSeries=polygon[polygonIndex.xSeries].split(",");var ySeries=polygon[polygonIndex.ySeries].split(",");var x_i,y_i,y_l;for(i=0,l=n-1;i<n;l=i++){x_i=parseInt(xSeries[i]);y_i=parseInt(ySeries[i]);y_l=parseInt(ySeries[l]);if((y_i<=point.y&&point.y<y_l||y_l<=point.y&&point.y<y_i)&&point.x<(xSeries[l]-x_i)*(point.y-y_i)/(y_l-y_i)+x_i){c=!c}}return c};var checkNoPolygonCut=function(polygonIndex,localPolygons,pos,neighbour){var bBox={zone:pos.zone,floor:pos.floor,xMin:Math.min(pos.x,neighbour.x),xMax:Math.max(pos.x,neighbour.x),yMin:Math.min(pos.y,neighbour.y),yMax:Math.max(pos.y,neighbour.y)};var polygons=getPolygonsCollidingWithBBox(localPolygons,bBox,polygonIndex,false);if(mgJt.isEmpty(polygons)===true){return true}for(var i=0;i<polygons.length;i++){if(pointIsInPolygon(polygonIndex,polygons[i],pos)===false&&polygonIsCutByPath(polygonIndex,polygons[i],pos,neighbour)===true){return false}}return true};var sortByCost=function(a,b){return a.cost>b.cost?1:a.cost<b.cost?-1:0};var getCandidatesRaw=function(node,radius){var results=mgData.query(mgData.TABLES.PATHS,{id:null,excludeId:node.id,type:"dot|dotsource|access|l12n",zone:node.zone,floor:node.floor,area:node.area,xMin:node.x-radius,xMax:node.x+radius,yMin:node.y-radius,yMax:node.y+radius});return results};var getCandidates=function(node,radius){var candidatesRaw=getCandidatesRaw(node,radius);if(candidatesRaw.length>_options.targetNbCandidates*2){radius=Math.ceil(radius/Math.sqrt(candidatesRaw.length/_options.targetNbCandidates));candidatesRaw=getCandidatesRaw(node,radius)}else if(candidatesRaw.length<_options.targetNbCandidates/2){radius=Math.ceil(radius*(candidatesRaw.length?Math.sqrt(_options.targetNbCandidates/candidatesRaw.length):2));candidatesRaw=getCandidatesRaw(node,radius)}return{candidates:candidatesRaw,radius:radius}};var getPolygonsCollidingWithBBox=function(localPolygons,boundingBox,polygonIndex,useDB){var bBox={};var polygons=[];var source;if(useDB===true){var polygonsCollection=mgData.getCollection(mgData.TABLES.POLYGONS);if(polygonsCollection!==null){source=polygonsCollection.data}}else{source=localPolygons}if(source&&source.length){for(var i=0;i<source.length;i++){var p=source[i];if(p[polygonIndex.zone]===boundingBox.zone&&p[polygonIndex.floor]===boundingBox.floor){bBox.xMin=p[polygonIndex.xMin];bBox.xMax=p[polygonIndex.xMax];bBox.yMin=p[polygonIndex.yMin];bBox.yMax=p[polygonIndex.yMax];if(test2BBoxesCollide(boundingBox,bBox)===true){polygons.push(p)}}}}return polygons};var test2BBoxesCollide=function(bBox1,bBox2){if((bBox1.xMin<=bBox2.xMin&&bBox2.xMin<=bBox1.xMax||bBox1.xMin<=bBox2.xMax&&bBox2.xMax<=bBox1.xMax)&&bBox2.yMin<=bBox1.yMax&&bBox2.yMax>=bBox1.yMin||(bBox1.yMin<=bBox2.yMin&&bBox2.yMin<=bBox1.yMax||bBox1.yMin<=bBox2.yMax&&bBox2.yMax<=bBox1.yMax)&&bBox2.xMin<=bBox1.xMax&&bBox2.xMax>=bBox1.xMin||bBox2.xMin<=bBox1.xMin&&bBox2.xMax>=bBox1.xMax&&bBox2.yMin<=bBox1.yMin&&bBox2.yMax>=bBox1.yMax||bBox2.xMin>=bBox1.xMin&&bBox2.xMax<=bBox1.xMax&&bBox2.yMin>=bBox1.yMin&&bBox2.yMax<=bBox1.yMax){return true}return false};var getNeighbours=function(node){var fishnetSizeOutside=mgMapConfig.get().fishnetSizeOutside?mgMapConfig.get().fishnetSizeOutside:_options.fishnetSizeOutside;var fishnetSizeInside=mgMapConfig.get().fishnetSizeInside?mgMapConfig.get().fishnetSizeInside:_options.fishnetSizeInside;if(mgJt.isEmpty(node)===true){mgLogger.error(module,"getNeighbours positions is empty");return[]}var polygonIndex={zone:0,floor:"0",xMin:0,xMax:0,yMin:0,yMax:0,nbVertices:0,xSeries:"",ySeries:""};var polygons=mgData.getCollection(mgData.TABLES.POLYGONS);if(polygons!==null){for(var prop in polygonIndex){if(polygonIndex.hasOwnProperty(prop)===false){continue}polygonIndex[prop]=polygons.order.indexOf(prop)}}else{mgLogger.error(module,"getNeighbours: no polygons found");return[]}var radius=node.zone===0?fishnetSizeOutside:fishnetSizeInside;var __data=getCandidates(node,radius);var candidates=__data.candidates;radius=__data.radius;var bBox={zone:node.zone,floor:node.floor,xMin:Math.max(node.x-radius,0),xMax:Math.min(node.x+radius,mgMapConfig.get().Ui.refMapWidth),yMin:Math.max(node.y-radius,0),yMax:Math.min(node.y+radius,mgMapConfig.get().Ui.refMapHeight)};var localPolygons=getPolygonsCollidingWithBBox(null,bBox,polygonIndex,true);var quarters=[[],[],[],[]];for(var i=0;i<candidates.length;i++){var c={node:candidates[i],cost:null};c.cost=(c.node.x-node.x)*(c.node.x-node.x)+(c.node.y-node.y)*(c.node.y-node.y);if(c.node.y<=node.y&&node.y-c.node.y>=Math.abs(c.node.x-node.x)){quarters[0].push(c)}else if(c.node.x>=node.x&&c.node.x-node.x>=Math.abs(c.node.y-node.y)){quarters[1].push(c)}else if(c.node.y>=node.y&&c.node.y-node.y>=Math.abs(c.node.x-node.x)){quarters[2].push(c)}else if(c.node.x<=node.x&&node.x-c.node.x>=Math.abs(c.node.y-node.y)){quarters[3].push(c)}else{mgLogger.error(module,"error in quarters candidates ventilation")}}var neighbours=[];for(var k=0;k<quarters.length;k++){quarters[k].sort(sortByCost);for(var l=0;l<quarters[k].length;l++){if(checkNoPolygonCut(polygonIndex,localPolygons,node,quarters[k][l].node)===true){quarters[k][l].cost=Math.sqrt(quarters[k][l].cost);neighbours.push(quarters[k][l]);break}}}return neighbours};return{getNeighbours:getNeighbours}}();var mgDragCancelPanel=function(){var module=mgLogger.modules.Edit,initialized=false,PANEL_EL_ID="mg-drag-cancel",TOGGLE_CLASS="mg-drag-cancel-visible",panelEl;var show=function(){if(!initialized){intialize();window.requestAnimationFrame(show);return}panelEl.classList.add(TOGGLE_CLASS)};var hide=function(){if(initialized){panelEl.classList.remove(TOGGLE_CLASS)}};var intialize=function(){panelEl=document.createElement("div");panelEl.id=PANEL_EL_ID;var spanEl=document.createElement("span");spanEl.textContent=mgI18N.t("dragCancel","edit");panelEl.appendChild(spanEl);mgDraggablePins.initDroppableListeners(panelEl,{});mgMapUi.getMapDisplayEl().appendChild(panelEl);initialized=true};return{get PANEL_EL_ID(){return PANEL_EL_ID},show:show,hide:hide}}();var mgDraggableLabel=function(){"use strict";var LABEL_UNFOLDED_CLASS="mg-draggable-unfolded",TOGGLE_BUTTON_CLASSNAME="mg-draggable-limit-toggle",DRAGGABLE_LABEL_CLASS="mg-draggable-label",DEFAULT_MAX_DRAGGABLE_LABELS=1;var _getLimitedArrowHtml=function(arrow){return'<span class="mg-draggable-limit-arrow">'+arrow+"</span>"};var _getLimitedArrowUpHtml=function(){return _getLimitedArrowHtml("▲")};var _getLimitedArrowDownHtml=function(){return _getLimitedArrowHtml("▼")};var getLimitedToogleButtonContent=function(opened,count,conceptName){if(opened){return _getLimitedArrowUpHtml()}else{var label;if(conceptName){label=count+" "+mgI18N.t("brands","data").toLowerCase()}else{label=mgI18N.t("andXMore","misc",[count-DEFAULT_MAX_DRAGGABLE_LABELS])}var limitedArrow=_getLimitedArrowDownHtml();return limitedArrow+label+limitedArrow}};var wrapWithUl=function(label,place,isLimitedList,draggableMembersCount){var ulAttrs=['class="'+(isLimitedList?"mg-draggable-limited ":"")+(draggableMembersCount===0?"mg-no-draggable-members ":"")+'"','data-place-id="'+place.id+'"','data-place-tag="'+place.tag+'"'].join(" ");return"<ul "+ulAttrs+">"+label+"</ul>"};var get=function(members,place,conceptName){var label="",draggableMembersCount=0,isLimitedList=members.length>DEFAULT_MAX_DRAGGABLE_LABELS;if(conceptName){label+='<li class="label-concept">'+conceptName+"</li>"}members.forEach(function(member,index){var isMemberEditable=mgPermissions.canEditMember(member);if(isMemberEditable){draggableMembersCount++}label+=mgTemplates.draggableLabel.render({member:member,memberTitle:mgData.getMemberTitle(member),isMemberEditable:isMemberEditable,TOPBRAND_FLAG_CLASS:member.lump&&member.lump.top_brand?"mg-top-brand":"",DRAGGABLE_FLAG_CLASS:mgDraggablePins.DRAGGABLE_FLAG_CLASS,DRAGGABLE_LABEL_CLASS:DRAGGABLE_LABEL_CLASS})});label=wrapWithUl(label,place,isLimitedList,draggableMembersCount);if(isLimitedList){var limitedLabel=getLimitedToogleButtonContent(false,members.length,conceptName);label+='<div class="'+TOGGLE_BUTTON_CLASSNAME+'" '+'data-count="'+members.length+'" '+(conceptName?'data-concept-name="'+conceptName+'"':"")+">"+limitedLabel+"</div>"}return label};var _unfold=function(container,toggleEl,foldOthers){if(!toggleEl){return}if(foldOthers!==false){var currentZone=mgZoneManager.getCurrentZone();var labelOnlyPins=mgPinManager.filterPins(currentZone.getId(),currentZone.getCurrentFloor().id,mgPositionManager.TYPES.LABEL_ONLY);labelOnlyPins.forEach(function(pin){fold(pin.domEl)})}container.classList.add(LABEL_UNFOLDED_CLASS);toggleEl.innerHTML=getLimitedToogleButtonContent(true)};var _fold=function(container,toggleEl){if(!toggleEl){return}container.classList.remove(LABEL_UNFOLDED_CLASS);toggleEl.innerHTML=getLimitedToogleButtonContent(false,parseInt(toggleEl.dataset.count,10),toggleEl.dataset.conceptName)};var fold=function(iconContainer){_fold(iconContainer,iconContainer.querySelector("."+TOGGLE_BUTTON_CLASSNAME))};var unfold=function(iconContainer,foldOthers){_unfold(iconContainer,iconContainer.querySelector("."+TOGGLE_BUTTON_CLASSNAME),foldOthers)};var initListeners=function(iconLabelEl){if(mgEditMode.isEnabled()){var draggableEls=iconLabelEl.querySelectorAll("."+mgDraggablePins.DRAGGABLE_FLAG_CLASS);Array.prototype.forEach.call(draggableEls,mgDraggablePins.initDraggableListeners);var limitToggleEl=iconLabelEl.querySelector("."+TOGGLE_BUTTON_CLASSNAME);if(limitToggleEl){mgDt.addTapEvent(limitToggleEl,function(event){var divEl=event.target.parentNode.parentNode;if(divEl.classList.contains(LABEL_UNFOLDED_CLASS)){_fold(divEl,limitToggleEl)}else{_unfold(divEl,limitToggleEl)}})}}};return{get DRAGGABLE_LABEL_CLASS(){return DRAGGABLE_LABEL_CLASS},get:get,initListeners:initListeners,unfold:unfold}}();var mgDraggablePins=function(){"use strict";var DRAGGABLE_FLAG_CLASS="mg-draggable",DROP_ZONE_HOVER_CLASS="hovered";var module=mgLogger.modules.Edit,moduleInitialized,draggedMember,dragStartedAt,dragCanceled,lastHoveredPlace;var keyUpHandler=function(e){var key=e.key||e.keyCode;if(key==="Escape"||key==="Esc"||key===27){dragCanceled=true}};var init=function(){reset();document.addEventListener("keyup",keyUpHandler);moduleInitialized=true};var reset=function(){document.removeEventListener("keyup",keyUpHandler);moduleInitialized=false};var isDraggable=function(el){return mgEditMode.isEnabled()===true&&mgDt.isDOMElement(el)&&(el.classList.contains("pin-icon")&&el.parentNode.classList.contains(DRAGGABLE_FLAG_CLASS)||el.classList.contains(DRAGGABLE_FLAG_CLASS))};var isDragging=function(){return typeof dragStartedAt==="number"};var setDraggableIcon=function(iconContainerEl,member,place){if(mgPermissions.canEditMember(member)!==true){iconContainerEl.classList.add("mg-not-draggable");return}iconContainerEl.setAttribute("draggable",true);iconContainerEl.classList.add(DRAGGABLE_FLAG_CLASS);initDraggableListeners(iconContainerEl);iconContainerEl.dataset.memberId=member.id;iconContainerEl.dataset.memberType=member.type;iconContainerEl.dataset.placeId=place.id;iconContainerEl.dataset.placeTag=place.tag};var initDraggableListeners=function(el){if(!moduleInitialized){init()}el.ondragend=function(evt){setDragging(false,evt.target);window.setTimeout(function(_evt){if(dragCanceled!==true){var el=_evt.target,str="Member "+JSON.stringify(draggedMember)+" droppped at ",oldPlaceData=_getPlaceData(el);if(lastHoveredPlace&&!lastHoveredPlace.x&&!lastHoveredPlace.y){if(lastHoveredPlace.floor&&lastHoveredPlace.floor===el.dataset.floor||lastHoveredPlace.tag&&lastHoveredPlace.tag===(el.dataset.placeTag||el.parentNode.dataset.placeTag)){mgLogger.debug(module,str+"the same place")}else{mgLogger.debug(module,str+"existing place "+JSON.stringify(lastHoveredPlace));mgEditMode.updatePlaceOfMember(draggedMember,oldPlaceData,lastHoveredPlace)}}else{var newPlaceData;if(lastHoveredPlace&&lastHoveredPlace.x&&lastHoveredPlace.y){newPlaceData=lastHoveredPlace}else{newPlaceData=mgMapUi.getPlaceDataFromEvent(_evt);if(!newPlaceData){mgLogger.error(module,"Invalid coordinates - ignoring last drag-and-drop");return}}mgLogger.debug(module,str+"new place "+JSON.stringify(newPlaceData));mgEditMode.createPlaceForMember(draggedMember,oldPlaceData,newPlaceData)}if(mgEditMode.hasOnlyZoneFloorData(oldPlaceData)||lastHoveredPlace&&mgEditMode.hasOnlyZoneFloorData(lastHoveredPlace)){mgEditPanel.update()}}},200,evt)};el.ondragstart=function(evt){draggedMember={title:el.children&&el.children.length?el.children[0].textContent:el.textContent,type:el.dataset.memberType,id:mgJt.isStringParsableAsInt(el.dataset.memberId)?parseInt(el.dataset.memberId,10):el.dataset.memberId};if(evt.dataTransfer){if(typeof evt.dataTransfer.setData==="function"){evt.dataTransfer.setData("text","...")}if(typeof evt.dataTransfer.setDragImage==="function"){var dragImage;if(el.classList.contains("pin")){dragImage=el.querySelector(".pin-icon")}else if(el.classList.contains("pin-icon")){dragImage=el}else if(el.classList.contains(mgEditPanel.FROM_PANEL_CLASS)){dragImage=el.querySelector(".mg-ep-icon")}if(!dragImage){dragImage=el}if(dragImage){evt.dataTransfer.setDragImage(dragImage,dragImage.offsetWidth/2,dragImage.offsetHeight/2)}}}setDragging(true,evt.target);setLastHoveredPlace(null)}};var setDragging=function(value,el){var iconsContainerId="mg-icons_"+mgZoneManager.getCurrentZone().getId()+"_"+mgZoneManager.getCurrentZone().getCurrentFloor().id;var zfContainer=mgMapUi.getMapstackEl().querySelector("#"+iconsContainerId);if(value){dragCanceled=false;dragStartedAt=(new Date).getTime();zfContainer.classList.add("is-dragging");el.parentNode.parentNode.classList.add("is-being-dragged");mgDragCancelPanel.show()}else{dragStartedAt=null;zfContainer.classList.remove("is-dragging");el.parentNode.parentNode.classList.remove("is-being-dragged");mgDragCancelPanel.hide()}mgEditPanel.setDragging(value,el)};var _getPlaceData=function(el){var placeData={};if(el.classList.contains("btn-floornumber")){placeData.zone=parseInt(el.parentElement.dataset.zone,10);placeData.floor=el.dataset.floor}else if(el.id===mgEditPanel.DROP_MASK_ID){placeData.zone=parseInt(el.dataset.zone,10);placeData.floor=el.dataset.floor}else if(el.classList.contains(mgEditPanel.FROM_PANEL_CLASS)){placeData.zone=parseInt(el.parentElement.dataset.zone,10);placeData.floor=el.parentElement.dataset.floor}else if(el.tagName==="LI"){var ulEl=el.parentNode;placeData.id=ulEl.dataset.placeId;placeData.tag=ulEl.dataset.placeTag}else{if(el.dataset&&el.dataset.placeId){placeData.id=el.dataset.placeId}else{placeData.id=el.id}if(mgJt.notNullNorUndefined(placeData.id)){placeData.tag=mgData.getPlace(placeData.id).tag}}if(mgJt.isStringParsableAsInt(placeData.id)){placeData.id=parseInt(placeData.id,10)}return placeData};var setLastHoveredPlace=function(value){lastHoveredPlace=value;mgLogger.debug(module,"Last hovered place:",lastHoveredPlace)};var initDroppableListeners=function(dropZoneEl,cbs){var isEditPanel=dropZoneEl.id===mgEditPanel.DROP_MASK_ID,isPlaceMarker=dropZoneEl.classList.contains("mg-place-marker"),isFloor=dropZoneEl.classList.contains("floor"),isDragCancelPanel=dropZoneEl.id===mgDragCancelPanel.PANEL_EL_ID;dropZoneEl.addEventListener("dragover",function(e){e.preventDefault()});dropZoneEl.addEventListener("dragenter",function(e){e.preventDefault();mgLogger.debug(module,"dragenter");if(!isPlaceMarker||mgEditMode.canStack(draggedMember.type)){dropZoneEl.classList.add(DROP_ZONE_HOVER_CLASS)}if(cbs&&cbs.ondragenter){cbs.ondragenter(e)}});dropZoneEl.addEventListener("dragleave",function(e){mgLogger.debug(module,"dragleave");dropZoneEl.classList.remove(DROP_ZONE_HOVER_CLASS);setLastHoveredPlace(null);if(cbs&&cbs.ondragleave){cbs.ondragleave(e)}});dropZoneEl.addEventListener("drop",function(e){dropZoneEl.classList.remove(DROP_ZONE_HOVER_CLASS);if(isDragCancelPanel){dragCanceled=true}else if(isFloor||isPlaceMarker&&mgEditMode.canStack(draggedMember.type)===false){setLastHoveredPlace(mgMapUi.getPlaceDataFromEvent(e))}else{setLastHoveredPlace(_getPlaceData(dropZoneEl))}if(cbs&&cbs.ondrop){cbs.ondrop(e)}e.stopPropagation()})};var BLINK_CLASS="mg-edit-blink",BLINK_DURATION=500,BLINK_OCCURENCES=3;var blink=function(memberId,memberType){var el=mgMapUi.getMapDisplayEl().querySelector('[data-member-type="'+memberType+'"][data-member-id="'+memberId+'"]');if(!el){mgLogger.error(module,"Cannot find DOM element for member id:"+memberId+" and member type:"+memberType);return}var placeData=_getPlaceData(el);if(mgEditMode.hasOnlyZoneFloorData(placeData)){mgEditPanel.open()}else{var pos;if(mgPositionManager.isLabelOnly(memberType)){pos=mgPositionManager.checkPositionAlreadyExists(placeData.id,mgPositionManager.TYPES.LABEL_ONLY);if(pos){pos.pin.unfoldLabel(false)}}else{pos=mgPositionManager.checkPositionAlreadyExists(placeData.id,mgPositionManager.TYPES.ICON)}if(pos){pos.display()}}el.classList.add(BLINK_CLASS);window.setTimeout(function removeBlink(_el){_el.classList.remove(BLINK_CLASS)},BLINK_DURATION*BLINK_OCCURENCES,el)};return{get DRAGGABLE_FLAG_CLASS(){return DRAGGABLE_FLAG_CLASS},init:init,reset:reset,isDraggable:isDraggable,isDragging:isDragging,setDraggableIcon:setDraggableIcon,initDraggableListeners:initDraggableListeners,initDroppableListeners:initDroppableListeners,blink:blink}}();var mgEditMode=function(){"use strict";var module=mgLogger.modules.Edit,enabled,currentOptions,modifications=[];var parseOptions=function(opts){currentOptions=opts;if(!opts||typeof opts!=="object"){enabled=false;return}mgLogger.info(module,"Edit mode is enabled");enabled=true;mgPermissions.parseParameters(opts)};var isEnabled=function(){return enabled===true};var pushUpdate=function(memberId,memberType,placeData){var modif={update:true,timestamp:(new Date).getTime(),id:memberId,type:memberType,x:placeData.x,y:placeData.y,zone:placeData.zone,floor:placeData.floor};var existingIndex;for(var i=0;i<modifications.length&&typeof existingIndex!=="number";i++){if(modifications[i].id===memberId&&modifications[i].type===memberType){existingIndex=i}}if(typeof existingIndex==="number"){modifications[existingIndex]=modif}else{modifications.push(modif)}};var updatePlaceOfMember=function(member,oldPlace,newPlace){var toUnlocalize=hasOnlyZoneFloorData(newPlace);clearPreviousPosition(member,oldPlace);mgData.updateMemberPlaces(member.id,member.type,oldPlace,newPlace);if(toUnlocalize===false){var updatedMember=mgData.getById(mgData.getTableNameFromType(member.type),member.id);var position=mgPositionManager.getPositionsMatchingTag(newPlace.tag)[0];position.addMember(updatedMember)}pushUpdate(member.id,member.type,toUnlocalize?newPlace:mgData.getPlace(newPlace.id))};var createPlaceForMember=function(member,oldPlace,placeData){clearPreviousPosition(member,oldPlace);var newPlace=mgCreatorService.createPlace(placeData,true);mgData.updateMemberPlaces(member.id,member.type,oldPlace,newPlace);var positionType=mgPositionManager.isLabelOnly(member.type)?mgPositionManager.TYPES.LABEL_ONLY:mgPositionManager.TYPES.ICON;var newPosition=mgPositionFactory(positionType,member.id+"-"+newPlace.id,true);mgPositionManager.push(newPosition);newPosition.setFromTag(newPlace.tag);pushUpdate(member.id,member.type,placeData)};var clearPreviousPosition=function(member,oldPlace){if(hasOnlyZoneFloorData(oldPlace)){return}var oldPosition=mgPositionManager.getPositionsMatchingTag(oldPlace.tag)[0];if(oldPosition.members.length===1){oldPosition.removePlaceMarkerFromMap();mgPositionManager.removePositions({"place.tag":oldPlace.tag})}else{oldPosition.removeMember(member)}};var canStack=function(type){var tableName=mgData.getTableNameFromType(type);return mgMapConfig.get().Ui.editMode.canStack.indexOf(tableName)!==-1};var canStackMembers=function(members){if(Array.isArray(members)!==true||!members.length){return false}var types=members.reduce(function(newArray,member){if(newArray.indexOf(member.type)===-1){newArray.push(member.type)}return newArray},[]);var stackable=true;types.forEach(function(type){stackable=stackable&&canStack(type)});return stackable};var autoFocus=function(){var placeData=null;var firstAuthorizedFloor=mgPermissions.getFirstEditableFloor();if(firstAuthorizedFloor){placeData=firstAuthorizedFloor}else{var authorizedPois=mgPermissions.getAuthorizedPois();if(authorizedPois&&authorizedPois.length){var poi=authorizedPois[0];if(placeData===null&&Array.isArray(poi.places)){poi.places.forEach(function(memberPlaceData){if(placeData===null){if(memberPlaceData.place_id){var place=mgData.getPlace(memberPlaceData.place_id);if(place){placeData={zone:place.zone,floor:place.floor}}}else if(mgJt.notNullNorUndefined(memberPlaceData.zone)&&mgJt.notNullNorUndefined(memberPlaceData.floor)){placeData={zone:memberPlaceData.zone,floor:memberPlaceData.floor}}}})}}}if(placeData){mgMap.zoomOnZone(placeData.zone,placeData.floor)}else{mgEditPanel.update()}};var hasOnlyZoneFloorData=function(placeData){return placeData&&mgJt.nullOrUndefined(placeData.id)&&mgJt.nullOrUndefined(placeData.tag)&&mgJt.nullOrUndefined(placeData.x)&&mgJt.nullOrUndefined(placeData.y)&&mgJt.notNullNorUndefined(placeData.zone)&&mgJt.notNullNorUndefined(placeData.floor)};var floorChangedHandler=function(){if(isEnabled()!==true||_MobiGeoMap.ready!==true){return}mgEditPanel.update();var currentZone=mgZoneManager.getCurrentZone().getId(),currentFloor=mgZoneManager.getCurrentZone().getCurrentFloor().id;var authorizedPois=mgPoiPermissionsInternal.getAuthorizedPois(currentZone,currentFloor);if(Array.isArray(authorizedPois)&&authorizedPois.length<mgMapConfig.get().Ui.editMode.maxBlink){authorizedPois.forEach(function(member){mgDraggablePins.blink(member.id,member.type)})}};PubSub.subscribe("mobigeo-zoneFloor-changed",floorChangedHandler);var _iterateOnFloors=function(zoneId,floorId){if(mgRegionPermissionsInternal.canEditFloor(zoneId,floorId)){mgZoneManager.getZone(zoneId).setDroppableFloor(floorId);mgDraggablePins.initDroppableListeners(mgMapUiSVG.getFloorContainer(zoneId,floorId))}};var _iterateOnZones=function(zone){if(zone.hasElevator()){zone.iterateOnFloors(_iterateOnFloors)}};var setDroppableElevators=function(){if(isEnabled()){mgZoneManager.iterate(_iterateOnZones)}};PubSub.subscribe("mobigeo-mapsDisplayed",setDroppableElevators);return{getModifications:function(){return modifications},parseOptions:parseOptions,isEnabled:isEnabled,canStack:canStack,canStackMembers:canStackMembers,updatePlaceOfMember:updatePlaceOfMember,createPlaceForMember:createPlaceForMember,hasOnlyZoneFloorData:hasOnlyZoneFloorData,autoFocus:autoFocus}}();var mgEditPanel=function(){"use strict";var module=mgLogger.modules.Edit,initialized=false,isOpen,PANEL_EL_ID="mg-edit-panel",DROP_MASK_ID="mg-ep-drop-mask",FROM_PANEL_CLASS="mg-from-ep",TOGGLE_CLASS="mg-panel-opened",TRANSITION_DURATION=400,panelEl,maskEl,toggleButtonEl,contentContainerEl;var reset=function(){initialized=false;panelEl=null;toggleButtonEl=null;contentContainerEl=null};var initialize=function(){panelEl=document.createElement("div");panelEl.id=PANEL_EL_ID;panelEl.innerHTML=mgTemplates["edit-panel"].render({title:mgI18N.t("panelTitle","edit"),toggleBtnTitle:mgI18N.t("open","misc")});maskEl=panelEl.querySelector("#"+DROP_MASK_ID);toggleButtonEl=panelEl.querySelector("#mg-ep-toggle-btn");mgDt.addTapEvent(toggleButtonEl,toggle);contentContainerEl=panelEl.querySelector("#mg-ep-content-container");mgDraggablePins.initDroppableListeners(maskEl,{ondragenter:AutoOpen.setTimer,ondragleave:AutoOpen.clearTimer,ondrop:AutoOpen.clearTimer});isOpen=panelEl.classList.contains(TOGGLE_CLASS);mgMapUi.getMapDisplayEl().appendChild(panelEl);initialized=true};var toggle=function(){if(isOpen){close()}else{open()}};var open=function(){panelEl.classList.add(TOGGLE_CLASS);toggleButtonEl.title=mgI18N.t("close","misc");window.setTimeout(_setIsOpen,TRANSITION_DURATION,true)};var close=function(){panelEl.classList.remove(TOGGLE_CLASS);toggleButtonEl.title=mgI18N.t("open","misc");window.setTimeout(_setIsOpen,TRANSITION_DURATION,false)};var _setIsOpen=function(value){isOpen=value};var AutoOpen=function(){var DELAY=500,timeout,hasAutoOpened;var setTimer=function(){if(!panelEl||isOpen){return}hasAutoOpened=false;timeout=window.setTimeout(function autoOpen(){open();hasAutoOpened=true},DELAY)};var clearTimer=function(evt){if(isOpen!==true){return}if(timeout){window.clearTimeout(timeout);timeout=null}if(hasAutoOpened&&evt.type==="dragleave"){close()}};return{setTimer:setTimer,clearTimer:clearTimer}}();var resize=function(){if(contentContainerEl){var availableHeight=mgMapUi.mapContainerOffsets.height-panelEl.offsetTop-contentContainerEl.offsetTop-mgMapUi.getBottomBarHeight()-30;contentContainerEl.style.maxHeight=availableHeight+"px"}};var DRAGGING_CLASS="mg-ep-dragging";var setDragging=function(value,el){mgLogger.debug(module,"Set dragging: "+value);var draggedFromPanel=el.classList.contains(FROM_PANEL_CLASS);if(draggedFromPanel){if(value){close()}else{open()}}else{if(value){panelEl.classList.add(DRAGGING_CLASS)}else{panelEl.classList.remove(DRAGGING_CLASS)}}};var update=function(){if(!initialized){return}var zone=mgZoneManager.getCurrentZone().getId(),floor=mgZoneManager.getCurrentZone().getCurrentFloor().id;maskEl.dataset.zone=zone;maskEl.dataset.floor=floor;var data={zone:zone,floor:floor,emptyLabel:mgI18N.t("emptyList","misc"),types:[],fromPanelClass:FROM_PANEL_CLASS};mgData.COLLECTIONS_WITH_PLACES_ATTRIBUTE.forEach(function(tableName){var unlocalizedMembers=[];mgData.query(tableName).forEach(function(member){if(mgData.memberHasPlaces(member)===true){member.places.forEach(function(place){if(!place.place_id&&place.zone===zone&&String(place.floor)===String(floor)){var iconPath;if(member.icon_id){var icon=mgData.getById(mgData.TABLES.ICONS,member.icon_id);if(icon){iconPath=icon.icon}}unlocalizedMembers.push({id:member.id,type:member.type,title:mgData.getMemberTitle(member),lump:member.lump,icon:iconPath,isDraggable:mgPermissions.canEditMember(member)})}})}});if(unlocalizedMembers.length>0){var memberType=mgData.getMemberTypeFromTableName(tableName);data.types.push({typeTitle:mgI18N.t(tableName,"data"),typeValue:memberType,members:mgData.sortMembers(unlocalizedMembers)})}});contentContainerEl.innerHTML=mgTemplates["edit-panel-content"].render(data);resize();var lis=contentContainerEl.querySelectorAll("li."+mgDraggableLabel.DRAGGABLE_LABEL_CLASS);Array.prototype.forEach.call(lis,mgDraggablePins.initDraggableListeners)};var show=function(){if(mgEditMode.isEnabled()!==true){return}if(!initialized){initialize()}};PubSub.subscribe("mobigeo-mapsDisplayed",show);return{get DROP_MASK_ID(){return DROP_MASK_ID},get FROM_PANEL_CLASS(){return FROM_PANEL_CLASS},reset:reset,open:open,close:close,update:update,resize:resize,setDragging:setDragging}}();var mgRegionPermissionsInternal=function(){"use strict";var module=mgLogger.modules.Permissions;var FULL_PERMISSIONS="rw";var _perm;var reset=function(){_perm=null};reset();var parse=function(region){if(Array.isArray(region)){_perm={zones:{}};setZonePermissions(mgZoneManager.getRootZoneId(),"r");setFloorPermissions(mgZoneManager.getRootZoneId(),"0","r");region.forEach(function(region){setZonePermissions(region.zone,"rw");region.floors.forEach(function(floor){setFloorPermissions(region.zone,floor,"rw")})})}};var getFirstEditableFloor=function(){if(_perm){var zoneIds=Object.keys(_perm.zones);if(zoneIds){for(var i=0;i<zoneIds.length;i++){var zoneId=zoneIds[i],zoneData=_perm.zones[zoneId];if(zoneData.permissions.indexOf("w")!==-1){var floorIds=Object.keys(zoneData.floors);if(floorIds){for(var j=0;j<floorIds.length;j++){var floorId=floorIds[j];if(zoneData.floors[floorId].permissions.indexOf("w")!==-1){return{zone:zoneId,floor:floorId}}}}}}}}};var _checkZoneArgument=function(zone){if(typeof zone==="string"){return parseInt(zone,10)}if(typeof zone!=="number"){var errorMsg="Unexpected `zone` argument ["+(zone===null?"null":typeof zone)+"]";mgLogger.error(module,errorMsg,zone);throw new TypeError(errorMsg)}return zone};var _checkFloorArgument=function(floor){if(typeof floor==="number"){return String(floor)}if(typeof floor!=="string"){var errorMsg="Unexpected `floor` argument ["+(floor===null?"null":typeof floor)+"]";mgLogger.error(module,errorMsg,floor);throw new TypeError(errorMsg)}return floor};var _initZoneIfNeeded=function(zone){if(!_perm.zones[zone]){_perm.zones[zone]={permissions:null,floors:{}}}};var setZonePermissions=function(zone,value){var _zone=_checkZoneArgument(zone);_initZoneIfNeeded(_zone);_perm.zones[_zone].permissions=value};var setFloorPermissions=function(zone,floor,value){var _zone=_checkZoneArgument(zone),_floor=_checkFloorArgument(floor);_initZoneIfNeeded(_zone);if(!_perm.zones[_zone].floors[_floor]){_perm.zones[_zone].floors[_floor]={permissions:null}}_perm.zones[_zone].floors[_floor].permissions=value};var getZonePermissions=function(zone){var _zoneId=_checkZoneArgument(zone);return _perm.zones&&_perm.zones[_zoneId]&&typeof _perm.zones[_zoneId].permissions==="string"?_perm.zones[_zoneId].permissions:""};var getFloorPermissions=function(zone,floor){var _zoneId=_checkZoneArgument(zone),_floor=_checkFloorArgument(floor);return _perm.zones&&_perm.zones[_zoneId]&&_perm.zones[_zoneId].floors&&_perm.zones[_zoneId].floors[_floor]&&typeof _perm.zones[_zoneId].floors[_floor].permissions==="string"?_perm.zones[_zoneId].floors[_floor].permissions:""};var hasRegionRestrictions=function(){return mgEditMode.isEnabled()&&_perm!==null};var canSeeZone=function(zone){if(hasRegionRestrictions()===false){return true}var zonePermissions=mgRegionPermissionsInternal.getZonePermissions(zone);return zonePermissions.indexOf("r")!==-1};var _canEditZone=function(zone){if(hasRegionRestrictions()===false){return true}return mgRegionPermissionsInternal.getZonePermissions(zone).indexOf("w")!==-1};var canSeeFloor=function(zone,floor){if(hasRegionRestrictions()===false){return true}return canSeeZone(zone)&&mgRegionPermissionsInternal.getFloorPermissions(zone,floor).indexOf("r")!==-1};var canEditFloor=function(zone,floor){if(hasRegionRestrictions()===false){return true}return _canEditZone(zone)&&mgRegionPermissionsInternal.getFloorPermissions(zone,floor).indexOf("w")!==-1};if(window.MOBIGEODEV===true){window.getRegionPerm=function(){return _perm}}return{reset:reset,parse:parse,getZonePermissions:getZonePermissions,getFloorPermissions:getFloorPermissions,getFirstEditableFloor:getFirstEditableFloor,canSeeZone:canSeeZone,canSeeFloor:canSeeFloor,canEditFloor:canEditFloor}}();var mgPoiPermissionsInternal=function(){"use strict";var module=mgLogger.modules.Permissions,_perm,typesRestrictions,catRestrPerType,idRestrPerType;var reset=function(){_perm=null};reset();var parse=function(poi){if(Array.isArray(poi)&&poi.length){mgPermissions.enable();_perm=poi;typesRestrictions=[];catRestrPerType={};idRestrPerType={};poi.map(function(restrictionData){if(!restrictionData.type){mgLogger.error(module,"Invalid POI restriction data: 'type' property is missing",restrictionData);return}var type=restrictionData.type.toLowerCase();typesRestrictions.push(type);catRestrPerType[type]=Array.isArray(restrictionData.categories)&&restrictionData.categories.length?restrictionData.categories:null;if(Array.isArray(idRestrPerType[type])!==true){idRestrPerType[type]=[]}if(mgJt.isStringOrNumber(restrictionData.id)){idRestrPerType[type].push(restrictionData.id)}if(Array.isArray(restrictionData.ids)){idRestrPerType[type]=idRestrPerType[type].concat(restrictionData.ids)}})}};var canEdit=function(member){return true};var getAuthorizedPois=function(zone,floor){var members=[];if(typeof idRestrPerType!=="object"||idRestrPerType===null){return members}var hasZoneFloorRestriction=mgJt.notNullNorUndefined(zone)&&mgJt.notNullNorUndefined(floor);Object.keys(idRestrPerType).forEach(function(type){if(Array.isArray(idRestrPerType[type])){idRestrPerType[type].forEach(function(memberId){var member=mgData.getById(mgData.getTableNameFromType(type),memberId);if(mgData.memberHasPlaces(member)===true){var alreadyAdded=false;var add=function(m){members.push(m);alreadyAdded=true};member.places.forEach(function(placeData){if(alreadyAdded){return}if(!hasZoneFloorRestriction){add(member);return}if(placeData.zone===zone&&placeData.floor===floor){add(member)}else if(placeData.place_id){var place=mgData.getPlace(placeData.place_id);if(place&&place.zone===zone&&place.floor===floor){add(member)}}})}})}});return members};return{reset:reset,parse:parse,canEdit:canEdit,getAuthorizedPois:getAuthorizedPois}}();var mgPermissions=function(){"use strict";var module=mgLogger.modules.Permissions,enabled;var reset=function(){enabled=false;mgRegionPermissionsInternal.reset();mgPoiPermissionsInternal.reset()};reset();var isEnabled=function(){return enabled===true};var parseParameters=function(opts){if(opts!==null&&typeof opts==="object"){mgRegionPermissionsInternal.parse(opts.region);mgPoiPermissionsInternal.parse(opts.poi)}};var handleZoneAccessRestricted=function(zoneId){console.warn("Zone "+zoneId+" access is restricted.");var zone=mgZoneManager.getZone(zoneId),zoneLabel=zone.getName()||zone.getShortName()||"";mgMessage.displayNotification(mgI18N.t("zoneRestricted","permissions",[zoneLabel]))};var handleFloorAccessRestricted=function(zoneId,floorId){console.warn("Floor "+floorId+" (zone "+zoneId+") access is restricted.");var floorLabel=mgZoneManager.getZone(zoneId).getFloorLabel(floorId);mgMessage.displayNotification(mgI18N.t("floorRestricted","permissions",[floorLabel.substr(0,1).toLowerCase()+floorLabel.substr(1)]))};var canEditMember=function(member){return isEnabled()!==true||mgPoiPermissionsInternal.canEdit(member)};return{enable:function(){enabled=true},disable:function(){enabled=false},isEnabled:isEnabled,reset:reset,parseParameters:parseParameters,canSeeZone:mgRegionPermissionsInternal.canSeeZone,canSeeFloor:mgRegionPermissionsInternal.canSeeFloor,canEditFloor:mgRegionPermissionsInternal.canEditFloor,handleZoneAccessRestricted:handleZoneAccessRestricted,handleFloorAccessRestricted:handleFloorAccessRestricted,canEditMember:canEditMember,getFirstEditableFloor:mgRegionPermissionsInternal.getFirstEditableFloor,getAuthorizedPois:mgPoiPermissionsInternal.getAuthorizedPois}}();var mgFavoritePositions=function(){var module=mgLogger.modules.Favorite;var STORAGE_KEY="mg-favorites",TITLE_MAX_LENGTH=24;var favorites=JSON.parse(window.localStorage.getItem(STORAGE_KEY))||[];var placeValidationFunctions={x:function(data){return typeof data.x==="number"},y:function(data){return typeof data.y==="number"},zone:function(data){return typeof data.zone==="number"},floor:function(data){return typeof data.floor==="string"&&data.floor.length>0}};function reset(){}function initialize(){recreatePlaces()}function validatePlaceData(data){if(!data){mgLogger.error(module,"Missing favorite data",data);return false}var invalidFields=[];Object.keys(placeValidationFunctions).forEach(function(field){if(placeValidationFunctions[field](data)!==true){invalidFields.push(field)}});if(invalidFields.length>0){mgLogger.error(module,"These place fields are invalid: "+invalidFields.join(", "),data);return false}return true}function askForTitleBeforeCreate(data,next,options){var placeholder=data.placeholder||mgI18N.t("defaultTitle","favorites")+" "+(favorites.length+1);var okButton=mgModalButton.ok;okButton.cb=function(input){var text=input.value;if(!text.trim()){text=placeholder}mgModal.hide();data.title=text;_onFavoriteTitleSet(data,next)};mgModal.showInput({title:mgI18N.t(options&&options.label||"setLabel","favorites"),placeholder:placeholder,maxlength:TITLE_MAX_LENGTH,buttons:[mgModalButton.cancel,okButton]})}function create(data,next,options){if(!data.title){askForTitleBeforeCreate(data,next,options)}else{_onFavoriteTitleSet(data,next)}}function _onFavoriteTitleSet(data,next){var place;if(data.place_id){place=mgData.getPlace(data.place_id)}if(!place){if(!validatePlaceData(data)){mgMessage.displayNotification(mgI18N.t("invalidData","favorites"));if(typeof next==="function"){next(_MobiGeoFavorite.ERRORS.INVALID_DATA)}return}var tag=mgCreatorService.getTag(data.zone,data.floor,data.x,data.y);place=mgData.getPlaceFromTag(tag)}if(place){var existingFavorite=getByPlaceId(place.id);if(existingFavorite){mgLogger.info(module,"Skip favorite creation because a favorite already exists at the same place",existingFavorite);next(_MobiGeoFavorite.ERRORS.ALREADY_EXISTS,existingFavorite);return}}else{place=mgCreatorService.createPlace(data,true,true)}var newFavId=data.id||(new Date).getTime(),newFavorite={id:newFavId,title:data.title,type:mgData.TABLES.FAVORITE_POSITIONS,places:[{place_id:place.id,x:place.x,y:place.y,zone:place.zone_id,floor:place.floor}]};favorites.push(newFavorite);_MobiGeoFavorite.broadcastAddEvent(newFavorite);next(null,newFavorite)}function persist(){window.localStorage.setItem(STORAGE_KEY,JSON.stringify(favorites))}function recreatePlaces(){if(Array.isArray(favorites)&&favorites.length>0){var hasCreated=false;favorites.forEach(function(favorite){var place=mgData.getPlace(favorite.place_id);if(!place){place=mgCreatorService.createPlace({id:favorite.places[0].id,x:favorite.places[0].x,y:favorite.places[0].y,zone:favorite.places[0].zone,floor:favorite.places[0].floor},true,false);hasCreated=true}});if(hasCreated){mgData.buildIndexes()}}}function get(favId){return favorites.find(function(fav){return fav.id===favId})}function getByPlaceId(placeId){return favorites.find(function(fav){return fav.places[0].place_id===placeId})}function getByZoneAndFloor(zone,floor){return favorites.filter(function(fav){return fav.places[0].zone===zone&&fav.places[0].floor===floor})}function getAll(){return favorites}function remove(favId){var indexToDelete=favorites.findIndex(function(fav){return fav.id===favId});if(indexToDelete===-1){mgLogger.error(module,"Cannot find favorite matching id: "+favId);return false}var favorite=favorites[indexToDelete];if(_MobiGeoMap.ready){var place=mgData.getPlace(favorite.places[0].place_id);mgPositionManager.removePositions({type:mgPositionManager.TYPES.FAVORITE,x_m:place.x,y_m:place.y,zone:place.zone,foor:place.foor})}favorites.splice(indexToDelete,1);_MobiGeoFavorite.broadcastRemoveEvent(favorite);return true}function removeAll(){favorites.forEach(function(fav){remove(fav.id)})}function show(favId,focus){favId=parseInt(favId);if(focus){MobiGeo.Map.POI.show([{id:favId,type:MobiGeo.Map.POI.types.favorite}])}else{mgPositionManager.displayPinForMember(get(favId),mgPositionManager.TYPES.FAVORITE)}}function showAll(focus){}return{initialize:initialize,reset:reset,create:create,get:get,getAll:getAll,getByPlaceId:getByPlaceId,getByZoneAndFloor:getByZoneAndFloor,show:show,showAll:showAll,remove:remove,removeAll:removeAll}}();var _MobiGeo=function(){"use strict";var module=mgLogger.modules.Core,hasValidKey=false,lang=mgLang.getUserLanguage("en"),currentKey=null,currentOptions=null,isMobiGeoRunning=false,hasLoadedCss=false,isMainConfigLoaded=false,initLang=null,initCb=null,initSkipRestart=null,cssPathProvider;var updateServer=null,naoCloudServer=null;PubSub.immediateExceptions=false;var ERRORS={INVALID_DATA_KEY:"MOBIGEO_ERROR_INVALID_DATA_KEY",UNSUPPORTED_LANG:"MOBIGEO_ERROR_UNSUPPORTED_LANG",INVALID_UPDATE_SERVER_URL:"MOBIGEO_ERROR_INVALID_UPDATE_SERVER_URL",UPDATE_CHECK_FAILED:"MOBIGEO_ERROR_UPDATE_CHECK_FAILED",EDIT_MODE_DISABLED:"MOBIGEO_ERROR_EDIT_MODE_DISABLED"};var hasFeature=function(feature,cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isEnabled(feature))};var hasFeatureLocation=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isLocationEnabled())};var hasFeatureGeoGroup=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isGeoGroupEnabled())};var hasFeatureGeoPush=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isGeoPushEnabled())};var hasFeatureRoute=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isRouteEnabled())};var hasFeatureUpdate=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isAssetsUpdateEnabled())};var hasFeatureAroundMe=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isAroundMeEnabled())};var hasFeatureBackend=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isBackendEnabled())};var hasFeatureRealTime=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isRealTimeEnabled())};var hasFeaturePoiStates=function(cb){if(typeof cb!=="function"){mgLogger.error(module,"Missing callback argument");return}if(hasValidKey!==true){cb(ERRORS.INVALID_DATA_KEY);return}cb(null,mgFeatures.isPoiStatesEnabled())};var setUpdateServer=function(value,cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.publish("error",err)}}}if(typeof value==="string"){if(value.trim().length===0){mgLogger.error(module,"Invalid 'updateServer' value, empty string received");cb(ERRORS.INVALID_UPDATE_SERVER_URL);return}updateServer=value;if(mgJt.isCordovaDefined()&&mgFeatures.isLocationEnabled()){mgLocation.setUpdateServer(updateServer)}cb()}else{mgLogger.error(module,"Invalid 'updateServer' value, expected a string but got "+value+" ("+typeof value+")");cb(ERRORS.INVALID_UPDATE_SERVER_URL);return}};var setNaoCloudServer=function(value){naoCloudServer=value};var _setLang=function(newLang,cb,skipRestart){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.publish("error",err)}}}if(Config.validLangs&&Array.isArray(Config.validLangs)){if(Config.validLangs.indexOf(newLang)<0){newLang=Config.validLangs&&Config.validLangs[0]||"en"}lang=newLang}else{mgLogger.error(module,"MogiGeo: could not set this language",newLang);cb(ERRORS.UNSUPPORTED_LANG);return}if(skipRestart!==true&&isMobiGeoRunning===true){if(load(currentKey,currentOptions)===true){PubSub.publish("mobigeo-restart")}}cb()};var setLang=function(newLang,cb,skipRestart){if(!isMainConfigLoaded){initLang=newLang;initCb=cb;initSkipRestart=skipRestart}else{_setLang(newLang,cb,skipRestart)}};PubSub.subscribe("mainConfig-loaded",function(){isMainConfigLoaded=true;if(initLang){_setLang(initLang,initCb,initSkipRestart)}});var getLang=function(){return lang};var load=function(key,options,cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.publish("error",err)}}}hasValidKey=true;if(options&&typeof options!=="object"){console.warn("Expected 'options' to be an object but got: ",key)}if(!hasLoadedCss){mgDt.loadAsyncCss(typeof cssPathProvider==="function"?cssPathProvider():mgSupport.env.mobigeoPath+"mobigeo-web.css",function(err){if(err){mgLogger.error(module,err)}else{mgLogger.info(module,"CSS file loaded");hasLoadedCss=true}})}resetAllModules();currentKey=key||"";currentOptions=options;if(mgJt.isEmpty(options)===false&&mgJt.isEmpty(options.lang)===false){setLang(options.lang,cb,true)}else{cb()}};var getModifications=function(cb){if(mgEditMode.isEnabled()!==true){if(typeof cb==="function"){cb(ERRORS.EDIT_MODE_DISABLED)}else{MobiGeo.publish("error",ERRORS.EDIT_MODE_DISABLED)}}else{if(typeof cb==="function"){cb(null,mgEditMode.getModifications())}else{return mgEditMode.getModifications()}}};var resetAllModules=function(){mgLogger.info(module,"reset current map");if(mgFeatures.isLocationEnabled()===true&&(mgJt.isCordovaDefined()||window.MOBIGEODEV)){mgLocationUi.reset()}if(mgFeatures.isGeoGroupEnabled()===true){mgGroupTrackeeManager.clear()}if(mgFeatures.isRouteEnabled()===true){mgItineraryUi.reset()}if(mgFeatures.isBackendEnabled()===true){mgBackendAPI.reset()}if(mgFeatures.isRealTimeEnabled()===true){mgRealTime.reset()}if(mgFeatures.isPoiStatesEnabled()===true){mgPoiStates.reset()}if(mgFeatures.isFavoritesEnabled()===true){mgFavoritePositions.reset()}mgUpdateMain.reset();mgData.reset();mgMapUi.reset();mgMap.resetVars();mgMapConfig.reset();mgMapTransform.reset();mgVignette.reset();mgSynopticView.reset();mgPinManager.reset();mgPositionManager.reset();mgZoneManager.reset();mgModal.reset();mgLegend.reset();mgEditPanel.reset();mgDraggablePins.reset()};var setProviders=function(providers){if(typeof providers!=="object"){mgLogger.error(module,"Supplied `providers` argument is not an object",providers);return}if(providers.map){mgData.setMapProvider(providers.map)}if(providers.thumbnail){mgData.setThumbnailProvider(providers.thumbnail)}if(providers.data){mgData.setDataProvider(providers.data)}if(providers.routingGraphUrl){mgData.setRoutingGraphUrlProvider(providers.routingGraphUrl)}if(providers.icon){mgData.setIconsProvider(providers.icon)}if(providers.mapConfig){mgMapConfig.setProvider(providers.mapConfig)}if(providers.css){cssPathProvider=providers.css}if(providers.coordinatesMapping){if(typeof mgLocation==="undefined"){console.warn("No location feature configured, so ignoring coordinates mapping file provider")}else{mgLocation.setCoordinatesMappingProvider(providers.coordinatesMapping)}}};var setKeyboardStatus=function(isOpen,size){mgModal.resize(null,true,isOpen,size)};PubSub.subscribe("mobigeo-domReady",function(){isMobiGeoRunning=true});return{get ERRORS(){return ERRORS},get key(){return currentKey},get projectVersion(){return mgUpdateMain.projectVersion},set updateServer(value){setUpdateServer(value)},get updateServer(){return updateServer},set naoCloudServer(value){setNaoCloudServer(value)},get naoCloudServer(){return naoCloudServer},hasFeature:hasFeature,hasFeatureLocation:hasFeatureLocation,hasFeatureGeoGroup:hasFeatureGeoGroup,hasFeatureGeoPush:hasFeatureGeoPush,hasFeatureRoute:hasFeatureRoute,hasFeatureUpdate:hasFeatureUpdate,hasFeatureAroundMe:hasFeatureAroundMe,hasFeatureBackend:hasFeatureBackend,hasFeatureRealTime:hasFeatureRealTime,hasFeaturePoiStates:hasFeaturePoiStates,hasValidKey:function(){return hasValidKey===true},setLang:setLang,getLang:getLang,load:load,setProviders:setProviders,setLogLevel:mgLogger.setLevel,disableLogColors:mgLogger.disableColors,getModifications:getModifications,setKeyboardStatus:setKeyboardStatus}}();window.MobiGeo=function(){"use strict";return Object.assign({_events:[],get lang(){return _MobiGeo.getLang()},set lang(value){return _MobiGeo.setLang(value)},get version(){return Config.version},get projectVersion(){return _MobiGeo.projectVersion},set updateServer(value){_MobiGeo.updateServer=value},get updateServer(){return _MobiGeo.updateServer},set naoCloudServer(value){_MobiGeo.naoCloudServer=value},get naoCloudServer(){return _MobiGeo.naoCloudServer},load:function(key,options,cb){_MobiGeo.load(key,options,cb)},hasFeature:function(feature,cb){_MobiGeo.hasFeature(feature,cb)},hasFeatureLocation:function(cb){_MobiGeo.hasFeatureLocation(cb)},hasFeatureGeoGroup:function(cb){_MobiGeo.hasFeatureGeoGroup(cb)},hasFeatureGeoPush:function(cb){_MobiGeo.hasFeatureGeoPush(cb)},hasFeatureRoute:function(cb){_MobiGeo.hasFeatureRoute(cb)},hasFeatureUpdate:function(cb){_MobiGeo.hasFeatureUpdate(cb)},hasFeatureAroundMe:function(cb){_MobiGeo.hasFeatureAroundMe(cb)},hasFeatureBackend:function(cb){_MobiGeo.hasFeatureBackend(cb)},hasFeatureRealTime:function(cb){_MobiGeo.hasFeatureRealTime(cb)},hasFeaturePoiStates:function(cb){_MobiGeo.hasFeaturePoiStates(cb)},getModifications:function(cb){return _MobiGeo.getModifications(cb)},setLogLevel:function(level,module){return _MobiGeo.setLogLevel(level,module)},set logLevel(level){return _MobiGeo.setLogLevel(level)},disableLogColors:function(){return _MobiGeo.disableLogColors()},setProviders:function(providers){_MobiGeo.setProviders(providers)},setKeyboardStatus:function(isOpen,size){_MobiGeo.setKeyboardStatus(isOpen,size)}},mgEventPublisherFactory())}();var _MobiGeoMap=function(){"use strict";var module=mgLogger.modules.Map,currentNode=null,currentOptions=null,ready=false,ERRORS={INVALID_DATA_KEY:"MAP_ERROR_INVALID_DATA_KEY",INVALID_PARENT_ELEMENT:"MAP_ERROR_INVALID_PARENT_ELEMENT",INVALID_PARENT_SIZE:"MAP_ERROR_INVALID_PARENT_SIZE",LOADING_FAILED:"MAP_ERROR_LOADING_FAILED",LOCATION_FEATURE_NOT_ACTIVATED:"MAP_ERROR_LOCATION_FEATURE_NOT_ACTIVATED",USER_HAS_NO_POSITION:"MAP_ERROR_USER_HAS_NO_POSITION"};var create=function(node,options,cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.publish("error",err)}}}if(_MobiGeo.hasValidKey()!==true){cb(ERRORS.INVALID_DATA_KEY);return}ready=false;mgLogger.startFullLoadingTime();if(mgDt.isDOMElement(node)===true){currentNode=node}else if(typeof node==="string"){currentNode=document.querySelector(node);if(!currentNode){mgLogger.error(module,"Could not get DOM element matching selector: "+node);cb(ERRORS.INVALID_PARENT_ELEMENT);return}}else{mgLogger.error(module,"'node' argument is neither a DOM element nor a selector",node);cb(ERRORS.INVALID_PARENT_ELEMENT);return}window.setTimeout(function(){if(mgMapUi.isContainerSizeEnough(currentNode)===false){mgLogger.error(module,"DOM container is too small");cb(ERRORS.INVALID_PARENT_SIZE);return}for(var i=0;i<currentNode.children;i++){currentNode.removeChild(currentNode.children[i])}currentOptions=options;if(currentOptions){mgEditMode.parseOptions(currentOptions.edit)}PubSub.publish("mobigeo-domReady",{node:currentNode});cb()},1)};var setOptions=function(){mgMapUi.setOptions(currentOptions)};PubSub.subscribe("mobigeo-mapConfigLoaded",setOptions);var clear=function(){mgPositionManager.clearAll();if(typeof mgItineraryUi==="object"&&typeof mgItineraryUi.clear==="function"){mgItineraryUi.clear()}if(mgSynopticView.isEnabled()){mgSynopticPins.clearAll()}};var clearAndResetZoom=function(){clear();mgMap.focusOnRootZone()};var resetZoom=function(){mgMap.focusOnRootZone()};var handleSdkInitialized=function(){resize();mgMapUi.hideLoader();mgLogger.stopFullLoadingTime();ready=true;window.setTimeout(mgOnboard.performIfNeeded,1e3);if(mgFeatures.isBackendEnabled()){mgBackendAPI.url=Config.backend.url;mgBackendAPI.authUser=Config.backend.user;mgBackendAPI.authPassword=Config.backend.password}if(mgFeatures.isRealTimeEnabled()){mgRealTime.connect(Config.realtimeUrl)}if(mgEditMode.isEnabled()){mgEditMode.autoFocus()}if(mgFeatures.isFavoritesEnabled()){mgFavoritePositions.initialize()}mgPointerEventsHelper.enableAfterDelay();MobiGeo.Map.publish("ready",{node:mgMapUi.getClientContainerEl(),key:_MobiGeo.key})};var resize=function(){return mgMapUi.resize()};var focusOnUser=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.publish("error",err)}}}if(mgFeatures.isLocationEnabled()===false){cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}var userPos=mgPositionManager.getUserPosition();if(_MobiGeoLocation.isUserOnSite()===false&&!(mgMapConfig.get().location&&mgMapConfig.get().location.useGpsLocation)||typeof userPos.zone!=="number"||typeof userPos.floor!=="string"){cb(ERRORS.USER_HAS_NO_POSITION);return}mgMap.focusOnUserPosition();cb()};PubSub.subscribe("mobigeo-restart",function(){create(currentNode,currentOptions)});return{get ready(){return ready},ERRORS:ERRORS,create:create,zoomOnZone:mgMap.zoomOnZone,clear:clear,clearAndResetZoom:clearAndResetZoom,resetZoom:resetZoom,handleSdkInitialized:handleSdkInitialized,resize:resize,focusOnUser:focusOnUser}}();MobiGeo.Map=function(){"use strict";return Object.assign({_events:[],create:function(node,options,cb){_MobiGeoMap.create(node,options,cb)},zoomOnZone:function(zoneId,floor){return _MobiGeoMap.zoomOnZone(zoneId,floor)},resize:function(){return _MobiGeoMap.resize()},focusOnUser:function(cb){_MobiGeoMap.focusOnUser(cb)}},mgEventPublisherFactory())}();var _MobiGeoMapPOI=function(){"use strict";var module=mgLogger.modules.POI,disablePopups=false,ERRORS={INVALID_POI_TYPE:"POI_ERROR_INVALID_POI_TYPE",POI_STATES_NOT_ACTIVATED:"POI_ERROR_STATES_FEATURE_NOT_ACTIVATED",AM_FEATURE_NOT_ACTIVATED:"AROUND_ERROR_FEATURE_NOT_ACTIVATED",AM_LOCATION_FEATURE_DISABLED:"AROUND_ERROR_LOCATION_FEATURE_NOT_ACTIVATED",AM_INVALID_POI_CATEGORY:"AROUND_ERROR_INVALID_POI_CATEGORY",AM_INVALID_POI_STATE_PROPERTY:"AROUND_ERROR_INVALID_POI_STATE_PROPERTY",AM_CATEGORY_IS_EMPTY:"AROUND_ERROR_CATEGORY_IS_EMPTY",AM_USER_HAS_NO_POSITION:"AROUND_ERROR_USER_HAS_NO_POSITION",AM_INVALID_MAX_NB_RESULTS:"AROUND_ERROR_INVALID_MAX_NB_RESULTS"};var USER_RECORDED_POSITION="USER_RECORDED_POSITION";var previousUserPositionPin;var showUserRecordedPosition=function(){var site=mgData.getName(),record=_MobiGeoLocation.getUserRecordedPosition(),pos,pinPosition;if(record!==null&&record.site===site){hideUserRecordedPosition();pos=record.position;if(pos===null){return false}else{pinPosition=mgPositionFactory(mgPositionManager.TYPES.SPOT);previousUserPositionPin=pinPosition;pinPosition.setFromL12n(pos);mgMap.focusOnPosition([pos]);return true}}else{return false}};var hideUserRecordedPosition=function(){if(previousUserPositionPin){try{previousUserPositionPin.removePin()}catch(e){mgLogger.error(module,"Error while hiding the recorded position")}}return true};var isUserLocationPoi=function(POIs){return POIs&&(USER_RECORDED_POSITION===POIs||POIs.length===1&&POIs[0]===USER_RECORDED_POSITION)};var ACTIONS={show:"show",hide:"hide"};var _iterate=function(POIs,actionType){if(Array.isArray(POIs)!==true){mgLogger.error(module,"Invalid POIs: expected an array",POIs);return false}else if(POIs.length===0){mgLogger.error(module,"Invalid POIs: array is empty",POIs);return false}if(mgFeatures.isLocationEnabled()){mgPositionTracking.disable()}var func;if(actionType===ACTIONS.show){func=mgPositionManager.displayPinForMember}else if(actionType===ACTIONS.hide){func=mgPositionManager.hidePinForMember}else{mgLogger.error(module,"Wrong action type: "+actionType);status=false;return}var status=true,positions=[];POIs.forEach(function(POI){if(!POI){mgLogger.error(module,"Invalid POI",POI);return}var originalId=POI.id,type=POI.type,places=POI.places;if(mgJt.isEmpty(originalId)===true){mgLogger.error(module,"Missing POI id",POI);status=false;return}if(mgData.ORIGINAL_ID_SUPPORTED_TYPES.indexOf(typeof originalId)===-1){mgLogger.error(module,"Unsupported POI id, expected "+mgData.ORIGINAL_ID_SUPPORTED_TYPES.join(" or ")+", but got: "+typeof originalId,POI);status=false;return}if(mgJt.isEmpty(type)===true){mgLogger.error(module,"Missing POI type",POI);status=false;return}if(mgData.isTypeValid(type)!==true){mgLogger.error(module,"Invalid POI type: "+type+". See MobiGeo.Map.POI.types for supported values.",POI);status=false;return}var positionType;if(type===mgData.POI_TYPES.favorite){positionType=mgPositionManager.TYPES.FAVORITE}else{positionType=mgPositionManager.TYPES.SPOT}var member=mgData.getMemberFromIdAndType(originalId,type);if(!member){mgLogger.error(module,"Could not find this "+type,POI);status=false;return}else{var memberPlaces=[],synoPlaces=[];if(Array.isArray(member.places)){member.places.forEach(function(placeData){if(mgJt.isStringOrNumber(placeData.place_id)){var place=mgData.getById(mgData.TABLES.PLACES,placeData.place_id);if(place){(mgData.isSynopticTag(place.tag)?synoPlaces:memberPlaces).push(place)}}})}if(actionType===ACTIONS.show&&POIs.length===1&&memberPlaces.length===0&&synoPlaces.length>0&&mgSynopticView.isEnabled()){var place=synoPlaces[0];mgSynopticPins[actionType](positionType,place.zone,place.floor);mgMap.zoomOnZone(place.zone,place.floor);if(mgFeatures.isRouteEnabled()){var closeButton=mgModalButton.close;closeButton.title=mgI18N.t("displayFloor","map");var okButton=mgModalButton.ok;okButton.title=mgI18N.t("goToThisFloor","itinerary");okButton.cb=function okHandler(){mgModal.hide({next:function(){_MobiGeoMapRoute.dispatch({id:member.id,originalId:member.original_id,type:POI.type,placeId:place.id})}})};mgModal.showMessage({content:mgI18N.t("unlocalizedPoi","itinerary",[mgData.getMemberTitle(member),place.label]),buttons:[closeButton,okButton]})}return}}var options={};if(POI.noLabel===true){options.noLabel=true}if(places&&places.length>0){places.forEach(function(place){var placeId=null;var foundedPlace=null;if(typeof place==="string"||place.place_id){var placeTag=place.place_id?place.place_id:place;foundedPlace=mgData.getPlaceFromTag(placeTag);if(foundedPlace){placeId=foundedPlace.id}}else if(typeof place==="number"){placeId=place}else{var tagPlace=mgCreatorService.getTag(place.zone,place.floor,place.x,place.y);foundedPlace=mgData.getPlaceFromTag(tagPlace);if(foundedPlace){placeId=foundedPlace.id}}var iPositions=func(member,positionType,placeId,options);if(!iPositions||iPositions.length===0){status=false}else{positions=positions.concat(iPositions)}})}else{var placeId=typeof places==="number"?places:undefined;var iPositions=func(member,positionType,placeId,options);if(!iPositions||iPositions.length===0){status=false}else{positions=positions.concat(iPositions)}}});return{positions:positions,status:status}};var show=function(POIs,options){if(isUserLocationPoi(POIs)){return showUserRecordedPosition()}if(mgMapConfig.get().Ui.options&&mgMapConfig.get().Ui.options.clearBefore===true){_MobiGeoMap.clear()}var result=_iterate(POIs,ACTIONS.show);if(result&&Array.isArray(result.positions)&&result.positions.length>0){mgMap.focusOnPosition(result.positions)}return result.status};var hide=function(POIs){if(isUserLocationPoi(POIs)){return hideUserRecordedPosition()}var result=_iterate(POIs,ACTIONS.hide);return result.status};var performWhenPoisDataAreReady=function(iconsPois,labelsPois){mgPositionManager.showMembersOnMap(iconsPois,labelsPois)};var add=function(POIs){var index=0;POIs.forEach(function(poi){var poiExist=mgData.checkPoiAlreadyExists(poi.id);if(poiExist){overridePoi(poiExist)}poi.type=MobiGeo.Map.POI.types.poi;var poiCategories=poi.categories;poi.places=poi.places.map(function(placeData){if(placeData.place_id&&typeof placeData.place_id==="string"){var pl=mgData.getPlaceFromTag(placeData.place_id);if(!pl){return{place_id:null}}return Object.assign(placeData,{place_id:pl.id})}else{var tagPlace=mgData.getPlaceFromTag(mgCreatorService.getTag(placeData.zone,placeData.floor,placeData.x,placeData.y));if(tagPlace){return Object.assign(placeData,{place_id:tagPlace.id})}else{var place=mgCreatorService.createPlace({x:placeData.x,y:placeData.y,zone:placeData.zone,floor:placeData.floor},true,false);return{place_id:place.id,label:placeData.label}}}});if(poiCategories&&poiCategories.length>0){poiCategories.forEach(function(cat){cat.id=cat.original_id;cat.lump={pois:[poi.id]};mgData.updateCategory(mgData.TABLES.POI_CATEGORIES,cat,poi.id)})}if(poi.icon_id){poi.icon=poi.icon_id}mgData.add(mgData.TABLES.POIS,poi.id,poi)});mgData.buildIndexes(mgPositionManager.showMembersOnMap());return true};var overridePoi=function(poi){var fi=mgData.Attr[mgData.TABLES.POIS];var poiCategories=poi[fi.categories];for(var i=0;i<poiCategories.length;i++){var cat=poiCategories[i];mgData.updateCategory(mgData.TABLES.POI_CATEGORIES,cat,poi[fi.id],"remove")}remove([{id:poi[fi.id],type:"Poi"}]);return true};var remove=function(POIs){POIs.forEach(function(poi){var member=mgData.getMemberFromIdAndType(poi.id,"Poi");mgData.deleteFromTable(mgData.TABLES.POIS,poi.id);mgPositionManager.removePinForMember(member,"icon")});return true};var removeAll=function(clear){getAll("Poi").forEach(function(poi){if(mgData.getMemberFromIdAndType(poi.id,"Poi")){mgPositionManager.removePinForMember(mgData.getMemberFromIdAndType(poi.id,"Poi"),"icon")}});mgData.emptyTable(mgData.TABLES.POIS);mgData.emptyTable(mgData.TABLES.ICONS);mgData.emptyTable(mgData.TABLES.POI_CATEGORIES);if(clear){_MobiGeoMap.clear()}return true};var getAll=function(type){if(typeof type!=="string"||mgData.isTypeValid(type)!==true){mgLogger.error(module,"Invalid type",type);return}var pois=[],tableName=mgData.getTableNameFromType(type),list=mgData.getCollection(tableName);if(list&&list.data){var fi=mgData.Attr[tableName];var categoriesTable=mgData.getCategoriesTableNameFromType(type),categories=mgData.getCollection(categoriesTable)&&mgData.getCollection(categoriesTable).data,catfi=mgData.Attr[categoriesTable];Object.keys(list.data).forEach(function(memberId){var member=list.data[memberId],places=member[fi.places];if(Array.isArray(places)&&places.length>0){places.forEach(function(placeData){var place=mgData.getPlace(placeData.place_id);if(typeof place.tag!=="undefined"){var categoriesTitle=[],lump=member[fi.lump];if(lump&&categories){if(Array.isArray(member[fi.lump].cats)){member[fi.lump].cats.forEach(function(catId){if(categories[catId]){categoriesTitle.push(categories[catId][catfi.title])}})}}pois.push({id:member[fi.id],name:member[fi.title],collection:member[fi.collection],type:type,floor:place.floor,zoneLabel:mgZoneManager.getZone(place.zone).getShortName(),zone:place.zone,icon:member[fi.icon],tag:place.tag,placeId:place.id,placeLabel:place.label})}})}})}return pois};var getCategoryOriginalIds=function(type){if(typeof type!=="string"||mgData.isTypeValid(type)!==true){mgLogger.error(module,"Invalid type",type);return}var categoriesTable=mgData.getCategoriesTableNameFromType(type),collection=mgData.getCollection(categoriesTable);if(!collection){return}var categories=mgData.getCollection(categoriesTable).data,catfi=mgData.Attr[categoriesTable];var catIds=Object.keys(categories),catOriginalIds=[];for(var i=0;i<catIds.length;i++){var cat=categories[catIds[i]];if(catOriginalIds.indexOf(cat[catfi.original_id])===-1){catOriginalIds.push(cat[catfi.original_id])}}catOriginalIds.sort(function(idA,idB){return idA.localeCompare(idB)});return catOriginalIds};var aroundMe=function(params,cb){if(typeof cb!=="function"){mgLogger.error(module,"Around-me: missing callback, got: ",cb);return}if(mgFeatures.isAroundMeEnabled()!==true){mgLogger.error(module,"Around-me feature is not activated");cb(ERRORS.AM_FEATURE_NOT_ACTIVATED);return}if(!params){mgLogger.error(module,"Missing parameter");cb(ERRORS.INVALID_POI_TYPE);return}return mgAroundMe.search(params.type,params.category,params.state,params.maxNbResults,cb)};var setState=function(array,cb){var error;try{if(mgFeatures.isPoiStatesEnabled()!==true){throw new Error(ERRORS.POI_STATES_NOT_ACTIVATED)}mgPoiStates.setState(array)}catch(e){error=e.message;mgLogger.error(module,"POI statuses error: "+error)}if(typeof cb==="function"){cb(error)}else if(error){MobiGeo.Map.POI.publish("error",error)}};var getAvailableStates=function(cb){var error,statuses;try{if(mgFeatures.isPoiStatesEnabled()!==true){throw new Error(ERRORS.POI_STATES_NOT_ACTIVATED)}statuses=mgMapConfig.get().poiStates}catch(e){error=e.message;mgLogger.error(module,"POI statuses error: "+error)}if(typeof cb==="function"){cb(error,statuses)}else if(error){MobiGeo.Map.POI.publish("error",error)}else{return statuses}};return{ERRORS:ERRORS,POI_TYPES:mgData.POI_TYPES,USER_RECORDED_POSITION:USER_RECORDED_POSITION,disablePopups:disablePopups,show:show,hide:hide,aroundMe:aroundMe,getAll:getAll,add:add,remove:remove,removeAll:removeAll,getCategoryOriginalIds:getCategoryOriginalIds,setState:setState,getAvailableStates:getAvailableStates,showUserRecordedPosition:showUserRecordedPosition,hideUserRecordedPosition:hideUserRecordedPosition}}();MobiGeo.Map.POI=Object.assign({_events:[],show:function(POIs,options){"use strict";return _MobiGeoMapPOI.show(POIs,options)},hide:function(POIs){"use strict";return _MobiGeoMapPOI.hide(POIs)},clear:function(scope){"use strict";return _MobiGeoMap.clear(scope)},get disablePopups(){"use strict";return _MobiGeoMapPOI.disablePopups},set disablePopups(value){"use strict";if(typeof value!=="boolean"){console.error("Invalid value",value);return}_MobiGeoMapPOI.disablePopups=value},add:function(POIs){return _MobiGeoMapPOI.add(POIs,true,true)},remove:function(POIs){return _MobiGeoMapPOI.remove(POIs,true,true)},removeAll:function(clear){return _MobiGeoMapPOI.removeAll(clear)},getAll:function(type){return _MobiGeoMapPOI.getAll(type)},getCategoryIds:function(type){return _MobiGeoMapPOI.getCategoryOriginalIds(type)},get types(){return _MobiGeoMapPOI.POI_TYPES},showUserRecordedPosition:function(){_MobiGeoMapPOI.showUserRecordedPosition()},hideUserRecordedPosition:function(){_MobiGeoMapPOI.hideUserRecordedPosition()},aroundMe:function(params,cb){return _MobiGeoMapPOI.aroundMe(params,cb)},setState:function(array,cb){_MobiGeoMapPOI.setState(array,cb)},getAvailableStates:function(cb){return _MobiGeoMapPOI.getAvailableStates(cb)},USER_RECORDED_POSITION:_MobiGeoMapPOI.USER_RECORDED_POSITION},mgEventPublisherFactory());var _MobiGeoMapIcon=function(){"use strict";var module=mgLogger.modules.Icon;var add=function(Icons){for(var i=0;i<Icons.length;i++){var icon=Icons[i];var iconExist=mgData.checkIconAlreadyExists(icon.id);if(iconExist){mgLogger.info(module,"ICON DO EXIST ")}else{var newIcon={id:icon.id,title:icon.label,path:icon.path,icon:icon&&icon.path,lump:{rank:icon.rank,icon:{isSecure:icon.isSecure,path:icon.path,headers:icon.headers,isSvg:icon.isSvg}}};newIcon.icon=mgData.getIconUrl(newIcon.lump);mgData.add(mgData.TABLES.ICONS,icon.id,newIcon);mgLogger.info(module,"ICON DONT EXIST AND ADDED")}}mgLegend.reset();mgLegend.init();return true};var getAll=function(){var list=mgData.getCollection("icons");mgLogger.info(module,"ICONS LIST : ",list);return list};var remove=function(Icons){Icons.forEach(function(icon){mgData.deleteFromTable(mgData.TABLES.ICONS,icon.id)});return true};return{getAll:getAll,add:add,remove:remove}}();MobiGeo.Map.Icon=function(){"use strict";return Object.assign({add:function(Icons){return _MobiGeoMapIcon.add(Icons,true,true)},set:function(Icons){return _MobiGeoMapIcon.set(Icons,true,true)},getAll:function(type){return _MobiGeoMapIcon.getAll(type)},remove:function(Icons){return _MobiGeoMapIcon.remove(Icons,true,true)}},mgEventPublisherFactory())}();var _MobiGeoLocation=function(){"use strict";var module=mgLogger.modules.Location,showMessages=true,autoStart=true,ERRORS={LOCATION_FEATURE_NOT_ACTIVATED:"LOCATION_ERROR_FEATURE_NOT_ACTIVATED",LOCATION_NOT_SUPPORTED:"LOCATION_ERROR_NOT_SUPPORTED",LOCATION_SERVICES_DENIED:"LOCATION_ERROR_SERVICES_DENIED",LOCATION_BLUETOOTH_DISABLED:"LOCATION_ERROR_BLUETOOTH_DISABLED",LOCATION_WIFI_DISABLED:"LOCATION_ERROR_WIFI_DISABLED",RECORD_USER_NOT_LOCATED:"LOCATION_RECORD_ERROR_USER_NOT_LOCATED",RECORD_FAILED:"LOCATION_RECORD_ERROR",INITIALIZATION_FAILURE:"LOCATION_ERROR_INITIALIZATION_FAILURE",UNKNOWN_ERROR:"LOCATION_ERROR_UNKNOWN"};var start=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Location.publish("error",err)}}}if(mgFeatures.isLocationEnabled()!==true){mgLogger.error(module,"Cannot start: Location feature is disabled");cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}mgLocation.start(cb)};var stop=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Location.publish("error",err)}}}if(mgFeatures.isLocationEnabled()!==true){mgLogger.error(module,"Cannot stop: Location feature is disabled");cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}mgLocation.stop(null,cb)};var setAutoStart=function(value){if(typeof value!=="boolean"){mgLogger.error(module,"Cannot set autoStart, expected a boolean but got "+value);return}autoStart=value};var getPosition=function(){if(typeof mgLocation!=="object"||typeof mgLocation.getCurrentPosition!=="function"){broadcastLocationNotActivated();return null}var position=mgLocation.getCurrentPosition();if(mgJt.isEmpty(position)===false){position={x:position.x_m,y:position.y_m}}return position};var isUserOnSite=function(){if(typeof mgLocation!=="object"){broadcastLocationNotActivated();return false}return mgLocation.isUserOnSite===true};var broadcastLocationNotActivated=function(){MobiGeo.Location.publish("error",ERRORS.LOCATION_FEATURE_NOT_ACTIVATED)};var broadcastLocationNotSupported=function(){MobiGeo.Location.publish("error",ERRORS.LOCATION_NOT_SUPPORTED)};var broadcastLocationDenied=function(){MobiGeo.Location.publish("error",ERRORS.LOCATION_SERVICES_DENIED)};var broadcastBluetoothDisabled=function(){MobiGeo.Location.publish("error",ERRORS.LOCATION_BLUETOOTH_DISABLED)};var broadcastWifiDisabled=function(){MobiGeo.Location.publish("error",ERRORS.LOCATION_WIFI_DISABLED)};var broadcastInitializationFailure=function(){MobiGeo.Location.publish("error",ERRORS.INITIALIZATION_FAILURE)};var userPositionLocalStorageKey="MOBIGEO-LOCATION/RECORDED-USER-POSITION";var recordUserPosition=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Location.publish("error",err)}}}if(mgFeatures.isLocationEnabled()!==true){mgLogger.error(module,"Cannot record user position because location feature is not activated");cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}var position=mgLocation.getCurrentPosition();if(position===null||!position.xy_m){mgLogger.error(module,"Cannot record user position because user is currently not located.");cb(ERRORS.RECORD_USER_NOT_LOCATED);return false}else{try{window.localStorage.setItem(userPositionLocalStorageKey,JSON.stringify({position:position,site:mgData.getName()}));cb();return true}catch(e){mgLogger.error(module,"Could not store user position in localStorage",e);cb(ERRORS.RECORD_FAILED);return false}}};var isSavedPositionValid=function(position){return position!==null&&typeof position==="object"&&typeof position.site==="string"&&position.position!==null&&typeof position.position==="object"};var getUserRecordedPosition=function(){var storedPosition=window.localStorage.getItem(userPositionLocalStorageKey);if(storedPosition){try{var position=JSON.parse(storedPosition);if(isSavedPositionValid(position)){return position}}catch(e){mgLogger.error(module,"Failed to read recorded user position",e)}}};return{get ERRORS(){return ERRORS},get autoStart(){return autoStart},setAutoStart:setAutoStart,start:start,stop:stop,getPosition:getPosition,isUserOnSite:isUserOnSite,recordUserPosition:recordUserPosition,getUserRecordedPosition:getUserRecordedPosition,broadcastLocationNotActivated:broadcastLocationNotActivated,broadcastLocationNotSupported:broadcastLocationNotSupported,broadcastLocationDenied:broadcastLocationDenied,broadcastBluetoothDisabled:broadcastBluetoothDisabled,broadcastWifiDisabled:broadcastWifiDisabled,broadcastInitializationFailure:broadcastInitializationFailure}}();MobiGeo.Location=function(){"use strict";return Object.assign({_events:[],start:function(cb){_MobiGeoLocation.start(cb)},stop:function(cb){_MobiGeoLocation.stop(cb)},set autoStart(value){_MobiGeoLocation.setAutoStart(value)},get isUserOnSite(){return _MobiGeoLocation.isUserOnSite()},recordUserPosition:_MobiGeoLocation.recordUserPosition},mgEventPublisherFactory())}();var _MobiGeoPush=function(){"use strict";var module=mgLogger.modules.GeoPush,showMessages=false;return{set showMessages(value){if(typeof value!=="boolean"){mgLogger.error(module,"GeoPush.showMessages must be a boolean, instead was "+typeof value)}showMessages=value},get showMessages(){return showMessages}}}();MobiGeo.Location.GeoPush=Object.assign({set showMessages(value){console.warn("MobiGeo.Location.GeoPush.showMessages is read-only")},get showMessages(){return _MobiGeoPush.showMessages}},mgEventPublisherFactory());var _MobiGeoGroup=function(){"use strict";var setUser=function(name){};var createGroup=function(){};var joinGroup=function(groupId){};var exitGroup=function(groupId){};var showGroupMembers=function(userIds){};var hideGroupMembers=function(userIds){};var showGroupMembersPanel=function(){return mgGroupUi.showSharedPositionsPage()};return{setUser:setUser,createGroup:createGroup,joinGroup:joinGroup,exitGroup:exitGroup,showGroupMembers:showGroupMembers,hideGroupMembers:hideGroupMembers,showGroupMembersPanel:showGroupMembersPanel}}();MobiGeo.Location.GeoGroup=Object.assign({_events:[],get username(){},set username(name){},createGroup:function(){},joinGroup:function(groupId){},exitGroup:function(groupId){},showGroupMembers:function(userIds){},hideGroupMembers:function(userIds){},showGroupMembersPanel:function(){"use strict";return _MobiGeoGroup.showGroupMembersPanel()}},mgEventPublisherFactory());var _MobiGeoPush=function(){"use strict";var module=mgLogger.modules.GeoPush,showMessages=false;return{set showMessages(value){if(typeof value!=="boolean"){mgLogger.error(module,"GeoPush.showMessages must be a boolean, instead was "+typeof value)}showMessages=value},get showMessages(){return showMessages}}}();MobiGeo.Location.GeoPush=Object.assign({set showMessages(value){console.warn("MobiGeo.Location.GeoPush.showMessages is read-only")},get showMessages(){return _MobiGeoPush.showMessages}},mgEventPublisherFactory());var _MobiGeoMapRoute=function(){"use strict";var module=mgLogger.modules.Route,END_TYPES=[mgPositionManager.TYPES.ITI_START,mgPositionManager.TYPES.ITI_TARGET],ERRORS={INVALID_DATA_KEY:"ROUTE_ERROR_INVALID_DATA_KEY",FEATURE_NOT_ACTIVATED:"ROUTE_ERROR_FEATURE_NOT_ACTIVATED",LOCATION_FEATURE_NOT_ACTIVATED:"ROUTE_ERROR_LOCATION_FEATURE_NOT_ACTIVATED",INVALID_START:"ROUTE_ERROR_INVALID_START",INVALID_DESTINATION:"ROUTE_ERROR_INVALID_DESTINATION",NO_ROUTE_FOUND:"ROUTE_ERROR_NO_ROUTE_FOUND",ALREADY_AT_DESTINATION:"ROUTE_ERROR_ALREADY_AT_DESTINATION",USER_HAS_NO_POSITION:"ROUTE_ERROR_USER_HAS_NO_POSITION",NO_RECORDED_POSITION:"ROUTE_ERROR_NO_RECORDED_POSITION",INTERNAL_ERROR:"ROUTE_ERROR_INTERNAL"};var PMRStatus=null;var PMRStatusPristine=null;var setPMRStatus=function(value){PMRStatus=value};var setPMRStatusPristine=function(value){PMRStatusPristine=value};var showErrorModal=function(endType){var routingStatus;switch(endType){case mgPositionManager.TYPES.ITI_START:routingStatus=mgItinerary.ROUTING_EXIT_STATUS.NO_START_POSITION;break;case mgPositionManager.TYPES.ITI_TARGET:routingStatus=mgItinerary.ROUTING_EXIT_STATUS.NO_TARGET_POSITION;break}if(routingStatus){mgModal.showMessage({title:mgI18N.t("_name_","itinerary"),content:mgItinerary.getError({status:routingStatus}).message,buttons:[mgModalButton.close]})}};var checkRoutingEndAndGetPlaceAndMember=function(POI,endType,cb){if(END_TYPES.indexOf(endType)===-1){mgLogger.error(module,"Type is neither "+END_TYPES.join(" nor "));cb(ERRORS.INTERNAL_ERROR);return}var errorCode=endType===mgPositionManager.TYPES.ITI_START?ERRORS.INVALID_START:ERRORS.INVALID_DESTINATION;if(!POI){mgLogger.error(module,"Missing "+endType+" POI",POI);cb(errorCode);return}if(mgJt.isEmpty(POI.id)===true){mgLogger.error(module,"Missing "+endType+" POI id",POI);cb(errorCode);return}if(mgJt.isEmpty(POI.type)===true){mgLogger.error(module,"Missing "+endType+" POI type",POI);cb(errorCode);return}if(mgData.isTypeValid(POI.type)!==true){mgLogger.error(module,"Invalid "+endType+" POI type. See MobiGeo.Map.POI.types for supported values.",POI);cb(errorCode);return}var member=mgData.getMemberFromIdAndType(POI.id,POI.type);if(!member){mgLogger.error(module,"Could not find member for "+endType+" POI of type "+POI.type,POI);showErrorModal(endType);cb(errorCode);return}var poiPlaceId;if(POI.place&&typeof POI.place.placeId==="string"){var foundedPlace=mgData.getPlaceFromTag(POI.place.placeId);if(foundedPlace){poiPlaceId=foundedPlace.id}}else if(POI.place&&typeof POI.place.placeId==="number"){poiPlaceId=POI.place.placeId}else if(POI.place&&typeof POI.place.zone==="number"&&typeof POI.place.floor==="number"&&typeof POI.place.x==="number"&&typeof POI.place.y==="number"){var tagPlace=mgCreatorService.getTag(POI.place.zone,POI.place.floor.toString(),POI.place.x,POI.place.y);foundedPlace=mgData.getPlaceFromTag(tagPlace);if(foundedPlace){poiPlaceId=foundedPlace.id}}if(poiPlaceId){POI.placeId=poiPlaceId}var poiHasPlaceId=mgJt.isEmpty(POI.placeId)===false,placesIds=[],placeId=null,placeIdFound=false;if(mgData.memberHasPlaces(member)===true){member.places.forEach(function(placeData){if(poiHasPlaceId&&placeData.place_id===POI.placeId){placeIdFound=true}placesIds.push(placeData.place_id)})}if(placesIds.length===0){mgLogger.error(module,endType+" POI: no place found in data (invalid data).",POI);showErrorModal(endType);cb(errorCode);return}if(poiHasPlaceId){if(placeIdFound===false){mgLogger.error(module,endType+" POI has "+placesIds.length+" places ["+placesIds.join(",")+"] but specified placeId "+POI.placeId+" is not among them.",POI);showErrorModal(endType);cb(errorCode);return}placeId=POI.placeId}else{if(placesIds.length>1){mgLogger.error(module,endType+" POI has "+placesIds.length+" places ["+placesIds.join(",")+"] but no placeId specified to choose among them.",POI);showErrorModal(endType);cb(errorCode);return}placeId=placesIds[0]}cb(null,{place:mgData.getById("places",placeId),member:member})};var checkStatus=function(cb){if(_MobiGeo.hasValidKey()!==true){mgLogger.error(module,"Missing MobiGeo API key (see MobiGeo module)");cb(ERRORS.INVALID_DATA_KEY)}else if(mgFeatures.isRouteEnabled()===false){mgLogger.error(module,"Route feature is not enabled");cb(ERRORS.FEATURE_NOT_ACTIVATED)}else{cb()}};var display=function(startPOI,destPOI,cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.Route.publish("error",err)}}}checkStatus(function(err){if(err){cb(err);return}checkRoutingEndAndGetPlaceAndMember(startPOI,mgPositionManager.TYPES.ITI_START,function(err,start){if(err){cb(err);return}checkRoutingEndAndGetPlaceAndMember(destPOI,mgPositionManager.TYPES.ITI_TARGET,function(err,target){if(err){cb(err);return}mgPositionManager.start.setFromMemberPlace(start);mgPositionManager.target.setFromMemberPlace(target);mgItineraryUi.display(getRoutingOptions(),null,cb)})})})};var goTo=function(destPOI,cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.Route.publish("error",err)}}}checkStatus(function(err){if(err){cb(err);return}if(mgFeatures.isLocationEnabled()===false){cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}var userPos=mgPositionManager.getUserPosition();if(_MobiGeoLocation.isUserOnSite()===false&&!(mgMapConfig.get().location&&mgMapConfig.get().location.useGpsLocation)||typeof userPos.zone!=="number"||typeof userPos.floor!=="string"){cb(ERRORS.USER_HAS_NO_POSITION);return}checkRoutingEndAndGetPlaceAndMember(destPOI,mgPositionManager.TYPES.ITI_TARGET,function(err,target){if(err){cb(err);return}mgPositionManager.start.setFromL12n({xy_m:userPos.xy_m,zone:userPos.zone,floor:userPos.floor});mgPositionManager.target.setFromMemberPlace(target);mgItineraryUi.display(getRoutingOptions(),function enableTracking(){mgPositionTracking.enable({showMessage:true})},function(err){if(err){mgPositionManager.start.hide()}cb(err)})})})};var goToRecordedPosition=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.Route.publish("error",err)}}}if(mgFeatures.isRouteEnabled()===false){mgLogger.error(module,"Cannot go to recorded position, route feature is not enabled");cb(ERRORS.FEATURE_NOT_ACTIVATED);return}if(mgFeatures.isLocationEnabled()===false){mgLogger.error(module,"Cannot go to recorded position, location feature is not enabled");cb(ERRORS.LOCATION_FEATURE_NOT_ACTIVATED);return}var userPosition=mgPositionManager.getUserPosition();if(_MobiGeoLocation.isUserOnSite()===false||!userPosition||!userPosition.xy_m){mgLogger.error(module,"Cannot go to recorded position, user is not located on site");cb(ERRORS.USER_HAS_NO_POSITION);return}var position=_MobiGeoLocation.getUserRecordedPosition();if(!position){mgLogger.error(module,"There is no recorded position");cb(ERRORS.NO_RECORDED_POSITION);return}var _location={xy_m:{x:userPosition.xy_m.x,y:userPosition.xy_m.y},zone:userPosition.zone,floor:userPosition.floor};mgPositionManager.start.setFromL12n(_location);mgPositionManager.target.setFromL12n(position.position);mgItineraryUi.display(getRoutingOptions(),function enableTracking(){mgPositionTracking.enable({showMessage:true})},function(err){if(err){mgPositionManager.start.hide()}cb(err)})};var hide=function(cb){if(typeof cb!=="function"){cb=function(err){if(err){MobiGeo.Map.Route.publish("error",err)}}}checkStatus(function(err){if(err){cb(err);return}mgItineraryUi.clear();cb()})};var getRoutingOptions=function(){return{userType:PMRStatus?"PMR":"all"}};var dispatch=function(poiData){if(PMRStatusPristine){MobiGeo.Map.Route.publish("showPMRStatusPristineModal",poiData)}else{if(mgFeatures.isLocationEnabled()&&mgLocation.hasPosition()){goTo({id:poiData.id,type:poiData.type,place:poiData.place},getRoutingOptions())}else{MobiGeo.Map.Route.publish("destinationSelected",poiData)}}};return{ERRORS:ERRORS,display:display,goTo:goTo,dispatch:dispatch,hide:hide,goToRecordedPosition:goToRecordedPosition,setPMRStatus:setPMRStatus,setPMRStatusPristine:setPMRStatusPristine}}();MobiGeo.Map.Route=function(){"use strict";return Object.assign({_events:[],setPMRStatus:function(value){_MobiGeoMapRoute.setPMRStatus(value)},setPMRStatusPristine:function(value){_MobiGeoMapRoute.setPMRStatusPristine(value)},display:function(startPOI,destPOI,options,cb){_MobiGeoMapRoute.display(startPOI,destPOI,options,cb)},goTo:function(destPOI,options,cb){_MobiGeoMapRoute.goTo(destPOI,options,cb)},dispatch:function(poi){_MobiGeoMapRoute.dispatch(poi)},hide:function(cb){_MobiGeoMapRoute.hide(cb)},goToRecordedPosition:function(cb){_MobiGeoMapRoute.goToRecordedPosition(null,cb)}},mgEventPublisherFactory())}();var _MobiGeoFavorite=function(){"use strict";var ERRORS={FEATURE_NOT_ACTIVATED:"FAV_ERROR_FEATURE_NOT_ACTIVATED",NO_MAP_LOADED:"FAV_ERROR_NO_MAP_LOADED",INVALID_DATA:"FAV_ERROR_INVALID_DATA",ALREADY_EXISTS:"FAV_ERROR_ALREADY_EXISTS"};function _getCallback(next){return typeof next==="function"?next:function(error){if(error){MobiGeo.Favorite.publish("error",error)}}}function create(data,next){var _next=_getCallback(next);if(mgFeatures.isFavoritesEnabled()!==true){_next(ERRORS.FEATURE_NOT_ACTIVATED);return}if(_MobiGeoMap.ready!==true){_next(ERRORS.NO_MAP_LOADED);return}mgFavoritePositions.create(data,function(err,favorite){if(err){_next(err,favorite);return}if(favorite){show(favorite.id)}_next(null,favorite)})}function show(favId,next){var _next=_getCallback(next);if(mgFeatures.isFavoritesEnabled()!==true){_next(ERRORS.FEATURE_NOT_ACTIVATED);return}if(_MobiGeoMap.ready!==true){_next(ERRORS.NO_MAP_LOADED);return}mgFavoritePositions.show(favId,true)}function remove(favId){if(mgFeatures.isFavoritesEnabled()!==true){MobiGeo.Favorite.publish("error",ERRORS.FEATURE_NOT_ACTIVATED);return}return mgFavoritePositions.remove(favId)}function getAll(){if(mgFeatures.isFavoritesEnabled()!==true){MobiGeo.Favorite.publish("error",ERRORS.FEATURE_NOT_ACTIVATED);return}return mgFavoritePositions.getAll()}function broadcastAddEvent(favorite){MobiGeo.Favorite.publish("favorite-added",favorite)}function broadcastRemoveEvent(favorite){MobiGeo.Favorite.publish("favorite-removed",favorite)}function broadcastShareEvent(favorite){MobiGeo.Favorite.publish("favorite-share",favorite)}return{ERRORS:ERRORS,create:create,show:show,remove:remove,getAll:getAll,broadcastAddEvent:broadcastAddEvent,broadcastRemoveEvent:broadcastRemoveEvent,broadcastShareEvent:broadcastShareEvent}}();MobiGeo.Favorite=function(){"use strict";return Object.assign({_events:[],create:_MobiGeoFavorite.create,show:_MobiGeoFavorite.show,remove:_MobiGeoFavorite.remove,getAll:_MobiGeoFavorite.getAll},mgEventPublisherFactory())}();var mgFullNativeFactory=function(){"use strict";var module=mgLogger.modules.Native;var initialize=function(){};document.addEventListener("pause",function(){propagateAppStatus(mgNativeInterface.STATUSES.background)});document.addEventListener("resume",function(){propagateAppStatus(mgNativeInterface.STATUSES.active)});var propagateAppStatus=function(status){PubSub.publish("mobigeo-app-status-update",status)};var hasKeyboardAbility=function(){return!!fullNative.keyboard};var hasBluetoothStatusAbility=function(){return!!fullNative.bluetooth};var hasNotificationAbility=function(){return!!fullNative.notification};var checkPermissions=function(){window.naoClient.checkPermissions()};var registerNaoCloud=function(apiKey,registerLocation,registerGeofencing,forceSynchronize){window.naoClient.register(apiKey,registerLocation,registerGeofencing,forceSynchronize)};var drawKeyboard=function(){fullNative.keyboard.show()};var hideKeyboard=function(){fullNative.keyboard.hide()};var enableBLE=function(){fullNative.bluetooth.enable()};var isBLECapable=function(){return fullNative.bluetooth.isAvailable()&&fullNative.bluetooth.hasLowEnergy()};var isBLEEnabled=function(){return fullNative.bluetooth.isEnabled()};window.addEventListener("BluetoothStatus.disabled",function(){mgNativeInterface.broadcastBleDisabled()});window.addEventListener("BluetoothStatus.enabled",function(){mgNativeInterface.broadcastBleEnabled()});var clearBadges=function(){fullNative.notification.clear()};var displayNotification=function(notif){fullNative.notification.display(notif)};initialize();return{drawKeyboard:drawKeyboard,hideKeyboard:hideKeyboard,enableBLE:enableBLE,isBLECapable:isBLECapable,isBLEEnabled:isBLEEnabled,checkPermissions:checkPermissions,hasKeyboardAbility:hasKeyboardAbility,hasBluetoothStatusAbility:hasBluetoothStatusAbility,hasNotificationAbility:hasNotificationAbility,registerNaoCloud:registerNaoCloud,clearBadges:clearBadges,displayNotification:displayNotification}};var mgCordovaNativeFactory=function(){"use strict";var module=mgLogger.modules.Native,pluginNames={keyboard:"Keyboard",bleStatus:"BluetoothStatus",notification:"notification"},isBlePluginInitialized=false;var initialize=function(){if(hasBluetoothStatusAbility()){if(!isBlePluginInitialized){cordova.plugins.BluetoothStatus.initPlugin();isBlePluginInitialized=true}window.addEventListener("BluetoothStatus.disabled",function(){mgNativeInterface.broadcastBleDisabled()});window.addEventListener("BluetoothStatus.enabled",function(){mgNativeInterface.broadcastBleEnabled()})}};document.addEventListener("pause",function(){propagateAppStatus(mgNativeInterface.STATUSES.background)});document.addEventListener("resume",function(){propagateAppStatus(mgNativeInterface.STATUSES.active)});var propagateAppStatus=function(status){mgLogger.debug(module,"App status is now: "+status);PubSub.publish("mobigeo-app-status-update",status)};var testPlugin=function(pluginName){return mgJt.isCordovaDefined()&&typeof window.cordova.plugins!=="undefined"&&typeof window.cordova.plugins[pluginName]!=="undefined"};var hasKeyboardAbility=function(){return testPlugin(pluginNames.keyboard)};var hasBluetoothStatusAbility=function(){return testPlugin(pluginNames.bleStatus)};var hasNotificationAbility=function(){return testPlugin(pluginNames.notification)&&window.cordova.plugins.notification.local!==undefined};var checkPermissions=function(){if(mgLocation.isLocationTypeNao()===true){window.naoClient.checkPermissions()}else{console.warn(module,"No permissions check implementation for this location type",Config.location.type)}};var registerNaoCloud=function(apiKey,registerLocation,registerGeofencing,forceSynchronize){window.naoClient.register(apiKey,registerLocation,registerGeofencing,forceSynchronize)};var drawKeyboard=function(){if(hasKeyboardAbility()){window.cordova.plugins.Keyboard.show()}};var hideKeyboard=function(){if(hasKeyboardAbility()){window.cordova.plugins.Keyboard.close()}};var enableBLE=function(){if(hasBluetoothStatusAbility()){cordova.plugins.BluetoothStatus.enableBT()}};var isBLECapable=function(){if(hasBluetoothStatusAbility()){return cordova.plugins.BluetoothStatus.hasBTLE}};var isBLEEnabled=function(){if(hasBluetoothStatusAbility()){return cordova.plugins.BluetoothStatus.BTenabled}};var clearBadges=function(){if(hasNotificationAbility()){window.cordova.plugins.notification.local.clearAll()}};var displayNotification=function(notif){if(hasNotificationAbility()){window.cordova.plugins.notification.local.schedule(notif)}};if(mgJt.isCordovaDefined()){document.addEventListener("deviceready",initialize,false)}return{drawKeyboard:drawKeyboard,hideKeyboard:hideKeyboard,enableBLE:enableBLE,isBLECapable:isBLECapable,isBLEEnabled:isBLEEnabled,checkPermissions:checkPermissions,hasKeyboardAbility:hasKeyboardAbility,hasBluetoothStatusAbility:hasBluetoothStatusAbility,hasNotificationAbility:hasNotificationAbility,registerNaoCloud:registerNaoCloud,clearBadges:clearBadges,displayNotification:displayNotification}};var mgWebNativeFactory=function(){"use strict";var module=mgLogger.modules.Native;var hasKeyboardAbility=function(){return false};var hasBluetoothStatusAbility=function(){return false};var hasNotificationAbility=function(){return false};var checkPermissions=function(){};var drawKeyboard=function(){};var hideKeyboard=function(){};var enableBLE=function(){};var isBLECapable=function(){};var isBLEEnabled=function(){};var registerNaoCloud=function(apiKey){};var clearBadges=function(){};var displayNotification=function(notif){};return{drawKeyboard:drawKeyboard,hideKeyboard:hideKeyboard,enableBLE:enableBLE,isBLECapable:isBLECapable,isBLEEnabled:isBLEEnabled,checkPermissions:checkPermissions,hasKeyboardAbility:hasKeyboardAbility,hasBluetoothStatusAbility:hasBluetoothStatusAbility,hasNotificationAbility:hasNotificationAbility,registerNaoCloud:registerNaoCloud,clearBadges:clearBadges,displayNotification:displayNotification}};var mgNativeInterface=function(){"use strict";var module=mgLogger.modules.Native,impl,isNative,STATUSES={active:"active",background:"background",inactive:"inactive"},appStatus=STATUSES.active,isBleModalDisplayed=false;var initialize=function(){if(Config.cordova===true){impl=mgCordovaNativeFactory();isNative=true}else if(Config.fullNative===true){impl=mgFullNativeFactory();isNative=true}else{impl=mgWebNativeFactory();isNative=false}};var statusUpdateHandler=function(eventName,value){appStatus=value};PubSub.subscribe("mobigeo-app-status-update",statusUpdateHandler);var isActive=function(){return appStatus===STATUSES.active};var isBackground=function(){return appStatus===STATUSES.background};var showModalEnableBLE=function(){if(impl.hasBluetoothStatusAbility()!==true){mgLogger.error(module,"Does not have BLE status ability")}else if(isBleModalDisplayed!==true){var okButton=mgModalButton.ok;okButton.cb=function(){mgModal.hide();impl.enableBLE()};mgModal.showMessage({title:"Bluetooth",content:mgI18N.t("no_bluetooth","mapPosition"),buttons:[okButton,mgModalButton.cancel],onHide:toggleModalBleNotVisible});isBleModalDisplayed=true}};var toggleModalBleNotVisible=function(){isBleModalDisplayed=false};var broadcastBleEnabled=function(){PubSub.publish("mobigeo-ble-enabled")};var broadcastBleDisabled=function(){PubSub.publish("mobigeo-ble-disabled")};var registerNaoCloud=function(apiKey,registerLocation,registerGeofencing,forceSynchronize){mgLogger.info(module,"Registering NAO service... [location:"+registerLocation+"] "+"[geofencing:"+registerGeofencing+"] [forceSynchronize:"+forceSynchronize+"]");impl.registerNaoCloud(apiKey,registerLocation,registerGeofencing,forceSynchronize)};initialize();return{get status(){return appStatus},get isNative(){return isNative},STATUSES:STATUSES,isActive:isActive,isBackground:isBackground,showModalEnableBLE:showModalEnableBLE,broadcastBleEnabled:broadcastBleEnabled,broadcastBleDisabled:broadcastBleDisabled,registerNaoCloud:registerNaoCloud,checkPermissions:impl.checkPermissions,isBLECapable:impl.isBLECapable,isBLEEnabled:impl.isBLEEnabled,drawKeyboard:impl.drawKeyboard,hideKeyboard:impl.hideKeyboard,hasKeyboardAbility:impl.hasKeyboardAbility,hasBluetoothStatusAbility:impl.hasBluetoothStatusAbility,hasNotificationAbility:impl.hasNotificationAbility,clearBadges:impl.clearBadges,displayNotification:impl.displayNotification}}();var mgLegend=function(){"use strict";var ICON_SIZE=32;var module=mgLogger.modules.Legend,halls,icons,flags,poiStylesData,contentLegend;var reset=function(){halls=[];icons=[];flags=[];poiStylesData=[];contentLegend=null};var init=function(){var data=mgData.query(mgData.TABLES.ICONS);if(mgJt.isEmpty(data)===false){var i,total;var all=data.sort(function(a,b){if(a.lump&&b.lump&&a.lump.rank&&b.lump.rank){if(a.lump.rank<b.lump.rank){return-1}if(a.lump.rank>b.lump.rank){return 1}}else{if(a.title<b.title){return-1}if(a.title>b.title){return 1}}return 0});for(i=0;i<all.length;i++){icons.push(all[i]);var iconType=all[i].lump&&all[i].lump.type?all[i].lump.type:all[i].category_id;switch(iconType){case 1:case"icons":icons.push(all[i]);break;case 2:case"flags":flags.push(all[i]);break;case 3:case"halls":halls.push(all[i]);break;case 4:case"hidden":break;default:mgLogger.debug(module,"Invalid icon category",all[i].category_id);break}}if(mgFeatures.isPoiStatesEnabled()){var poiStyles=mgMapConfig.get().Ui.poiStyles;if(poiStyles){Object.keys(poiStyles).forEach(function(cssSelector){if(poiStyles[cssSelector].legend.order===-1){return}poiStylesData.push({order:poiStyles[cssSelector].legend.order,style:mgDt.stringifyStyle(poiStyles[cssSelector].style),label:poiStyles[cssSelector].label[MobiGeo.lang],size:ICON_SIZE})})}poiStylesData.sort(function(data1,data2){if(data1.order<data2.order){return-1}if(data1.order>data2.order){return 1}return 0})}if(icons.length===0&&flags.length===0&&halls.length===0&&poiStylesData.length===0){}else{mgMapUi.showLegendButton()}}};PubSub.subscribe("mobigeo-dataLoaded",init);var ROW_CSS_CLASS="legend-row-container";function rowElMatcher(el){return el&&el.classList.contains(ROW_CSS_CLASS)}function onClickOnRow(event){var rowEl;if(rowElMatcher(event.target)){rowEl=event.target}else{rowEl=mgDt.findParentNode(event.target,rowElMatcher)}if(!rowEl){mgLogger.error(module,"Failed to get the clicked row element");return}var icon=mgData.getById(mgData.TABLES.ICONS,rowEl.dataset.iconId);if(icon&&icon.lump&&icon.lump.cats){var pois;if(mgPositionManager.getUserPosition().displayed){MobiGeo.Map.POI.aroundMe({type:"Poi",category:icon.lump.cats},function(err,results){if(err){mgLogger.error(module,"Failed to call around-me: ",err);return}pois=results})}else{var catTableName=mgData.getCategoriesTableNameFromType("Poi");for(var index=0;index<icon.lump.cats.length;index++){var element=icon.lump.cats[index];var children=mgData.getChildren(catTableName,{original_id:element});if(Array.isArray(children)){var searchPois=children.map(function(item){return{id:item.id,type:"Poi"}});if(pois){Array.prototype.push.apply(pois,searchPois)}else{pois=searchPois}}}}MobiGeo.Map.POI.clear();if(pois){MobiGeo.Map.POI.show(pois)}}mgModal.hide()}var show=function(){contentLegend=mgTemplates.legend.render({hasHalls:Array.isArray(halls)&&halls.length>0,legendHalls:halls,hasPoiStateFeature:mgFeatures.isPoiStatesEnabled(),poiStateTitle:mgI18N.t("poiStyles","legend"),poiStyles:poiStylesData,hasIcons:Array.isArray(icons)&&icons.length>0,legendIcons:icons,hasFlags:Array.isArray(flags)&&flags.length>0,legendFlags:flags});var modalEl=mgModal.show({title:mgI18N.t("_name_","legend"),content:contentLegend,buttons:[mgModalButton.close]});modalEl.querySelectorAll(".legend-row-clickable").forEach(function(clickableRowEl){mgDt.addTapEvent(clickableRowEl,onClickOnRow)})};return{init:init,show:show,reset:reset}}();var mgNotificationPerformer=function(){"use strict";var module=mgLogger.modules.GeoPush,MODAL_NOTIFS_COUNT=10,osBadgesCount=0,noNotificationMessageModal,currentlyDisplayedModalEl,templateData={getFormatedDateTime:function(){return mgI18N.formatDateTime(this.timestamp)}};var initialize=function(){if(mgNativeInterface.hasNotificationAbility()!==true){mgLogger.error(module,"Unable to send local notifications");return}clearBadges()};var display=function(notif){if(mgNativeInterface.isBackground()===true){mgNativeInterface.displayNotification(notif)}mgNotificationPerformer.displayMobigeo()};var displayOS=function(data){if(mgNativeInterface.hasNotificationAbility()){if(mgNativeInterface.isBackground()!==true){mgLogger.error(module,"No OS notification while in foreground mode");return}var notif={id:data.idZone,data:{date:data.timestamp},badge:incrementBadges()};if(mgSupport.env.isAndroid===true){notif.text=data.zoneName+" - "+data.text}else{notif.title=data.zoneName;notif.text=data.text}mgNativeInterface.displayNotification(notif)}};var displayMobigeo=function(){var latestNotifs=mgNotificationFilter.getLatestNotifications(MODAL_NOTIFS_COUNT);if(mgJt.isEmpty(latestNotifs)===true){noNotificationMessageModal=mgModal.showMessage({content:mgI18N.t("noNotification","geopush"),buttons:[mgModalButton.close],onHide:function(){noNotificationMessageModal=null}})}else{if(noNotificationMessageModal){mgModal.hide({el:noNotificationMessageModal})}templateData.notifications=latestNotifs;var html=mgTemplates.notificationlist.render(templateData);if(currentlyDisplayedModalEl){currentlyDisplayedModalEl.querySelector(".mobigeo-modal-content").innerHTML=html;mgModal.resize()}else{currentlyDisplayedModalEl=mgModal.show({title:mgI18N.t("modalTitle","geopush"),content:html,buttons:[mgModalButton.close],onHide:clearModalEl})}}};var clearModalEl=function(){currentlyDisplayedModalEl=null};var incrementBadges=function(){return osBadgesCount+=1};var clearBadges=function(){mgNativeInterface.clearBadges();osBadgesCount=0};var appStatusUpdateHandler=function(eventName,value){if(value===mgNativeInterface.STATUSES.active){clearBadges()}};PubSub.subscribe("mobigeo-app-status-update",appStatusUpdateHandler);PubSub.subscribe("mainConfig-loaded",mgFeatures.isGeoPushEnabled()?initialize:null);return{display:display,displayOS:displayOS,displayMobigeo:displayMobigeo}}();var mgNotificationFilter=function(){"use strict";var module=mgLogger.modules.GeoPush,allNotifications={},DEFAULT_DELAY_IN_MINUTES=60,delayInMs;var initialize=function(){setDelayInMinutes(DEFAULT_DELAY_IN_MINUTES)};var setDelayInMinutes=function(minutes){if(typeof minutes==="string"){minutes=parseInt(minutes,10)}if(typeof minutes!=="number"){mgLogger.error(module,"Invalid value for notification display delay. Got: "+minutes);return}delayInMs=minutes*60*1e3};var handleServerConfigLoaded=function(){setDelayInMinutes(Config.geoGroup.serverConfig.NOTIFICATION_DELAY_BEFORE_NEW_DISPLAY)};PubSub.subscribe("mobigeoGroup-serverConfigLoaded",handleServerConfigLoaded);var getLatestNotifications=function(n){var array=[];for(var alertId in allNotifications){if(allNotifications.hasOwnProperty(alertId)===false){continue}array.push(allNotifications[alertId])}array.sort(sortTimestampDesc);return array.length<n?array:array.slice(0,n)};var sortTimestampDesc=function(notifA,notifB){return notifB.timestamp-notifA.timestamp};var getLastOccurence=function(newNotif){var oldNotif;if(allNotifications[newNotif.alertId]!==undefined){if(allNotifications[newNotif.alertId].text===newNotif.text){oldNotif=allNotifications[newNotif.alertId]}}return oldNotif};var addNotification=function(notif){allNotifications[notif.alertId]=notif};var filterNotification=function(newNotif){var previousNotif=getLastOccurence(newNotif);if(previousNotif===undefined||previousNotif.timestamp+delayInMs<newNotif.timestamp){addNotification(newNotif);mgNotificationPerformer.display(newNotif)}};PubSub.subscribe("mobigeo-naoMicro-receivedAlert",function(msg,data){filterNotification(data)});PubSub.subscribe("mainConfig-loaded",mgFeatures.isGeoPushEnabled()?initialize:null);return{setDelayInMinutes:setDelayInMinutes,getLatestNotifications:getLatestNotifications}}();var mgGroup=function(){"use strict";var module=mgLogger.modules.GeoGroup,_options={STORAGE_PREFIX:"mobiGeoGroup-",pseudoMin:3,pseudoMax:12};var onMapButtonClick=function(){if(getPersistantValue("firstTime")===null){setPersistantValue("firstTime","visited");mgGroupUi.showIntroPage()}else{mgGroupUi.showCreateJoinPage()}};var amIAlreadyJoiningAGroup=function(){return mgJt.isEmpty(getGroupCode())===false&&mgJt.isEmpty(getUserId())===false&&mgJt.isEmpty(getUsername())===false};var setUsername=function(value){setPersistantValue("pseudo",value)};var getUsername=function(){return getPersistantValue("pseudo")};var setUsernameBackup=function(value){setPersistantValue("pseudo_bak",value)};var getUsernameBackup=function(){return getPersistantValue("pseudo_bak")};var setGroupCode=function(value){setPersistantValue("group_code",value)};var getGroupCode=function(){return getPersistantValue("group_code")};var setGroupCodeBak=function(value){setPersistantValue("group_code_bak",value)};var getGroupCodeBak=function(){return getPersistantValue("group_code_bak")};var setUserId=function(value){setPersistantValue("trackee_id",value)};var getUserId=function(){return getPersistantValue("trackee_id")};var resetUser=function(){setUsername(null);setUserId(null);resetGroup()};var resetGroup=function(){setGroupCode(null)};var setPersistantValue=function(name,value){if(value===null){window.localStorage.removeItem(_options.STORAGE_PREFIX+name)}else{window.localStorage.setItem(_options.STORAGE_PREFIX+name,value)}};var getPersistantValue=function(name){return window.localStorage.getItem(_options.STORAGE_PREFIX+name)};var getOption=function(value){switch(value){case"pseudoMin":return _options.pseudoMin;case"pseudoMax":return _options.pseudoMax}mgLogger.error(module,"Could not get this option value",value)};return{events:{usernameSet:"usernameSet",groupCreated:"groupCreated",groupJoined:"groupJoined",groupExited:"groupExited",error:"error"},errorCodes:{LOCATION_NOT_SUPPORTED:"LOCATION_NOT_SUPPORTED",GEOGROUP_NOT_SUPPORTED:"GEOGROUP_NOT_SUPPORTED",GEOGROUP_TIMEOUT:"GEOGROUP_TIMEOUT",GEOGROUP_USER_INVALID_NAME:"GEOGROUP_USER_INVALID_NAME",GEOGROUP_USER_ALREADY_EXIST:"GEOGROUP_USER_ALREADY_EXIST",GEOGROUP_GROUP_INVALID:"GEOGROUP_GROUP_INVALID",GEOGROUP_GROUP_FULL:"GEOGROUP_GROUP_FULL"},onMapButtonClick:onMapButtonClick,amIAlreadyJoiningAGroup:amIAlreadyJoiningAGroup,resetUser:resetUser,resetGroup:resetGroup,getOption:getOption,getUsername:getUsername,setUsername:setUsername,getUsernameBackup:getUsernameBackup,setUsernameBackup:setUsernameBackup,getGroupCode:getGroupCode,setGroupCode:setGroupCode,getGroupCodeBak:getGroupCodeBak,setGroupCodeBak:setGroupCodeBak,getUserId:getUserId,setUserId:setUserId}}();var mgGroupUi=function(){"use strict";var module=mgLogger.modules.GeoGroup,sharingButtonEl=null,updateGroupMemberListIntervalId=null,groupListParentEl=null,hasNetworkActivity=true,cssSheet;var _options={refreshInterval:1*1e3,groupNumberLength:5};var initialize=function(){mgGroupTrackeeManager.displayTrackeesOnMap(mgGroup.getGroupCode())};var showIntroPage=function(){var html=mgTemplates["geogroup-intro"].render({intro:mgI18N.t("intro","geoGroup")});var startButton=mgModalButton.ok;startButton.title=mgI18N.t("start","misc");startButton.cb=function(){mgModal.hide();showCreateJoinPage()};mgModal.show({title:mgI18N.t("myGroup","geoGroup"),content:html,buttons:[startButton]})};var showCreateJoinPage=function(){if(mgJt.isEmpty(mgGroup.getUsername())===true){showSetUsernamePage();return}if(mgGroup.amIAlreadyJoiningAGroup()===true){showSharedPositionsPage();return}var html=mgTemplates["geogroup-createjoin"].render({_labels:{createGroup:mgI18N.t("createGroup","geoGroup"),joinGroup:mgI18N.t("joinGroup","geoGroup"),changePseudo:mgI18N.t("changePseudo","geoGroup")},pseudo:mgGroup.getUsername()});var modalEl=mgModal.show({title:mgI18N.t("createJoinGroup","geoGroup"),content:html});mgGroupController.onCreateJoinDisplay(modalEl,function win(){mgModal.hide()},function fail(error){mgModal.hide();switch(error){case"network_error":displayNetworkErrorPage();break;default:showCreateJoinPage()}})};var showSetUsernamePage=function(){if(mgJt.isEmpty(mgGroup.getUsername())===false){showSharedPositionsPage();return}var html=mgTemplates["geogroup-setusername"].render({_labels:{legend:mgI18N.t("setUsernameLegend","geoGroup",[mgGroup.getOption("pseudoMin"),mgGroup.getOption("pseudoMax")]),placeholder:mgI18N.t("setUsernamePlaceholder","geoGroup")},pseudo:mgGroup.getUsernameBackup(),pseudoMax:mgGroup.getOption("pseudoMax")});var modalEl,okButton=mgModalButton.ok;okButton.cb=function(event){event.preventDefault();mgGroupController.handleUsernameSubmit(event.target,modalEl,function(){mgModal.hide();showCreateJoinPage()},function(){mgModal.hide();displayNetworkErrorPage()})};modalEl=mgModal.show({title:mgI18N.t("setUsernameTitle","geoGroup"),content:html,buttons:[okButton,mgModalButton.cancel]});var form=modalEl.querySelector("[data-id=set_username]");form.onsubmit=okButton.cb;window.setTimeout(function(){form.querySelector("input[type=text]").focus()},100)};var displayNetworkErrorPage=function(){var retryButton=mgModalButton.ok;retryButton.title=mgI18N.t("retry_now","misc");retryButton.cb=mgGroupController.onNetworkErrorRetryClicked;mgModal.showMessage({title:mgI18N.t("myGroup","geoGroup"),content:mgI18N.t("network_error_desc","misc"),buttons:[retryButton,mgModalButton.cancel]})};var showCreateGroupPage=function(){if(mgGroup.amIAlreadyJoiningAGroup()===true){showSharedPositionsPage();return}var modalEl=mgModal.showMessage({title:mgI18N.t("myGroup","geoGroup"),content:mgI18N.t("creatingGroup","geoGroup"),hideCrossClose:true});mgGroupController.onCreateGroupDisplay(modalEl,function win(){mgModal.hide();showSharedPositionsPage()},function fail(error){mgModal.hide();switch(error){case"network_error":displayNetworkErrorPage();break;default:showCreateJoinPage()}})};var showJoinGroupPage=function(){if(mgGroup.amIAlreadyJoiningAGroup()===true){showSharedPositionsPage();return}var modalEl,okButton=mgModalButton.ok;okButton.cb=function(event){mgGroupController.onJoinGroupDisplay(event,modalEl)};var html=mgTemplates["geogroup-joingroup"].render({_labels:{joinGroupLegend:mgI18N.t("joinGroupLegend","geoGroup")},code:mgGroup.getGroupCodeBak()});modalEl=mgModal.show({title:mgI18N.t("myGroup","geoGroup"),content:html,buttons:[okButton]});var inputEl=modalEl.querySelector("input[type=number]");inputEl.oninput=function(){if(this.value.length>_options.groupNumberLength){this.value=this.value.slice(0,_options.groupNumberLength)}};window.setTimeout(function(){inputEl.focus()},100);var form=modalEl.querySelector("[data-id=join-group]");form.onsubmit=okButton.cb};var getShareButtonDefinition=function(){return mgModalButton.create("invite",mgI18N.t("inviteGroup","geoGroup"),function(){navigator.share(mgI18N.t("inviteContent","geoGroup",[mgGroup.getGroupCode(),Config.native.name]),mgI18N.t("inviteTitle","geoGroup"))})};var showSharedPositionsPage=function(){if(mgGroup.amIAlreadyJoiningAGroup()===false){showCreateJoinPage();return}var html=mgTemplates["geogroup-sharedpositions"].render({_labels:{networkError:mgI18N.t("networkErrorOnList","geoGroup")},pseudo:mgGroup.getUsername(),content:mgTemplates["geogroup-memberlist-groupelement"].render({_labels:{group:mgI18N.t("all","misc")},id:mgGroup.getGroupCode()}),canShare:typeof navigator.share==="function"});var buttons=[];buttons.push(mgModalButton.create("leave",mgI18N.t("leaveGroup","geoGroup"),function(event){mgGroupController.onLeaveGroupClicked(event,groupListParentEl)}));if(typeof navigator.share==="function"){buttons.push(getShareButtonDefinition())}groupListParentEl=mgModal.show({title:mgI18N.t("sharedPositionsFor","geoGroup",[mgGroup.getGroupCode()]),content:html,buttons:buttons,onShow:_startUpdateGroupMemberList,onHide:function(){_stopUpdateGroupMemberList();mgGroupTrackeeManager.displayTrackeesOnMap()}})};var getMemberListUlEl=function(){return groupListParentEl?groupListParentEl.querySelector("[data-id=geogroup-members-list]"):null};var clearMemberList=function(){var groupListParentEl=getMemberListUlEl();if(groupListParentEl){groupListParentEl.innerHTML=""}};var updateGroupMembersData=function(trackees){hasNetworkActivity=true;mgGroupTrackeeManager.setTrackees(trackees)};var updateSharingButton=function(status){if(sharingButtonEl===null){sharingButtonEl=mgMapUi.getClientContainerEl().querySelector(".mg-button.geogroup");if(sharingButtonEl===null){mgLogger.error(module,"Could not find sharing button");return}}if(status===true){sharingButtonEl.classList.add("on-joining-a-group")}else{sharingButtonEl.classList.remove("on-joining-a-group")}};var activateNetworkErrorMessages=function(){hasNetworkActivity=false};var _startUpdateGroupMemberList=function(){window.clearInterval(updateGroupMemberListIntervalId);window.setTimeout(_displayGroupMembers,0);updateGroupMemberListIntervalId=window.setInterval(_displayGroupMembers,_options.refreshInterval)};var _stopUpdateGroupMemberList=function(){window.clearInterval(updateGroupMemberListIntervalId)};var _displayGroupMembers=function(){if(mgNativeInterface.isNative===true&&mgNativeInterface.isActive()!==true){return}_updateGroupMemberList()};var _updateGroupMemberList=function(){if(mgJt.isEmpty(groupListParentEl)===true){mgLogger.error(module,"Missing group list parent element");return}var listEl=getMemberListUlEl();if(mgJt.isEmpty(listEl)===true){mgLogger.error(module,"Missing group list element");return}var errorEl=groupListParentEl.querySelector(".list-item-error");errorEl.classList.add(mgDt.FORCED_HIDE_CSS_CLASS);if(hasNetworkActivity===false){errorEl.classList.remove(mgDt.FORCED_HIDE_CSS_CLASS)}mgGroupTrackeeManager.updateTrackeesList(listEl)};var getGeogroupTimestampLabel=function(position){return""};var getGeoGroupLabel=function(data){var html=mgTemplates["geogroup-trackee-label"].render({notMyself:data.pseudo!=="Vous",pseudo:data.pseudo,geoGroupeLabel:getGeogroupTimestampLabel(data.position)});return html};var styleElement;var initCssSheet=function(){if(mgJt.isEmpty(cssSheet)===true){console.debug("recreating sheet");cssSheet=mgDt.createStyleSheet(mgMapUi.getMapContainerEl(),{id:"geogroup-style"})}else{mgDt.clearCSSRules(cssSheet)}setCssRules();styleElement=document.querySelector("#geogroup-style")};PubSub.subscribe("mobigeoGroup-serverConfigLoaded",function(){console.debug("server config loaded");initCssSheet()});var setCssRules=function(){var colors=Config.geoGroup.serverConfig.COLORS;if(mgJt.isEmpty(colors)===true||Array.isArray(colors)===false){mgLogger.error(module,"Expected an array of colors but got "+typeof colors+" : "+colors);return}for(var i=0;i<colors.length;i++){mgDt.addCssRule(cssSheet,'.mobigeo-container [data-icon="geogroup-trackee"][data-color="'+colors[i]+'"]:before',"background-color: "+colors[i]+";")}};PubSub.subscribe("mobigeo-mapUiReady",function(){if(mgFeatures.isGeoGroupEnabled()){console.debug("MAP READY");initialize();var currentStyleElement=document.querySelector("#geogroup-style");if(cssSheet&&!currentStyleElement){console.debug("SHOULD REAPPEND CSS");cssSheet=null;initCssSheet()}}});return{showIntroPage:showIntroPage,showCreateJoinPage:showCreateJoinPage,showSetUsernamePage:showSetUsernamePage,showCreateGroupPage:showCreateGroupPage,showJoinGroupPage:showJoinGroupPage,showSharedPositionsPage:showSharedPositionsPage,displayNetworkErrorPage:displayNetworkErrorPage,getShareButtonDefinition:getShareButtonDefinition,updateSharingButton:updateSharingButton,updateGroupMembersData:updateGroupMembersData,activateNetworkErrorMessages:activateNetworkErrorMessages,getGeoGroupLabel:getGeoGroupLabel,clearMemberList:clearMemberList}}();var mgGroupController=function(){"use strict";var module=mgLogger.modules.GeoGroup,runningCssClass="running",loaderTimer;var handleRequestStart=function(modalEl){var domErrorMessage=modalEl.querySelector(".error-message");if(mgJt.isEmpty(domErrorMessage)===false){domErrorMessage.textContent="";domErrorMessage.classList.add("unvisible")}modalEl.classList.add(runningCssClass);loaderTimer=window.setTimeout(mgModal.showLoader,100)};var handleRequestEnd=function(modalEl){if(loaderTimer){window.clearTimeout(loaderTimer)}mgModal.hideLoader();modalEl.classList.remove(runningCssClass)};var onCreateJoinDisplay=function(parentEl,win,fail){var modalEL=parentEl.querySelector(".map-geogroup-createjoin_group-container");if(mgJt.isEmpty(modalEL)===true){mgLogger.error(module,"Invalid modalEl - onCreateJoinDisplay");return}var actionButtonHandler=function(event){event.preventDefault();var _next=event.target.getAttribute("data-next");switch(_next){case"create_group":mgDt.toggleHoverClass(event.target);window.requestAnimationFrame(function createGroupClickHandler(){mgModal.hide();mgGroupUi.showCreateGroupPage()});break;case"join_group":mgDt.toggleHoverClass(event.target);window.requestAnimationFrame(function joinGroupClickHandler(){mgModal.hide();mgGroupUi.showJoinGroupPage()});break;case"logout":mgDt.toggleHoverClass(event.target);window.requestAnimationFrame(function changePseudoClickHandler(){var okButton=mgModalButton.ok;okButton.cb=function(){mgModal.hide();var genericCb=function(){mgModal.hide();mgGroupUi.showSetUsernamePage()};mgGroupNetwork.callLogout(genericCb,genericCb)};mgModal.showMessage({title:mgI18N.t("changePseudo","geoGroup"),content:mgI18N.t("logoutConfirm","geoGroup"),buttons:[okButton,mgModalButton.cancel]})});break}};var buttons=modalEL.querySelectorAll(".actionbutton");for(var i=0;i<buttons.length;i++){mgDt.addTapEvent(buttons[i],actionButtonHandler)}};var handleUsernameSubmit=function(eventTarget,modalEl,win,fail){var hasRequestRunning=modalEl.classList.contains(runningCssClass);if(!hasRequestRunning){handleRequestStart(modalEl)}var pseudo=modalEl.querySelector("input[name=username]").value;var okRU=function(response){handleRequestEnd(modalEl);if(response.success===false){var errorMsg="";if(response.error==="ERR_INVALID_USERNAME"){errorMsg=mgI18N.t("invalid_pseudo","geoGroup");MobiGeo.Location.GeoGroup.publish(mgGroup.events.error,mgGroup.errorCodes.GEOGROUP_USER_INVALID_NAME)}else if(response.error==="ERR_USERNAME_ALREADY_IN_USE"){errorMsg=mgI18N.t("username_unavailable","geoGroup");MobiGeo.Location.GeoGroup.publish(mgGroup.events.error,mgGroup.errorCodes.GEOGROUP_USER_ALREADY_EXIST)}else if(response.error==="ERR_INSERT_USERNAME"){errorMsg=mgI18N.t("internalError","geoGroup")}if(errorMsg!==""){var domErrorMessage=modalEl.querySelector(".error-message");domErrorMessage.innerHTML=errorMsg;domErrorMessage.classList.remove("unvisible");mgModal.resize();return}_reset(response.error);return}MobiGeo.Location.GeoGroup.publish(mgGroup.events.usernameSet,{name:pseudo});win()};var koRU=function(data,textStatus){handleRequestEnd(modalEl);if(textStatus==="error"){var domErrorMessage=modalEl.querySelector(".error-message");domErrorMessage.innerHTML=mgI18N.t("internalError","geoGroup");domErrorMessage.classList.remove("unvisible");mgModal.resize();return}fail()};mgGroupNetwork.callRegisterUser(pseudo,okRU,koRU)};var onCreateGroupDisplay=function(modalEL){window.setTimeout(function(){var okCNG=function(response){if(response.success===false){_reset(response.error);return}var code=mgGroup.getGroupCode();MobiGeo.Location.GeoGroup.publish(mgGroup.events.groupCreated,{id:code});mgModal.hide();_refreshMyPosLabel();var desc=mgI18N.t("new_group_desc","geoGroup",[code]);var okButton=mgModalButton.ok;okButton.cb=function(){mgModal.hide();mgGroupUi.showSharedPositionsPage()};var buttons=[okButton];if(typeof navigator.share==="function"){buttons.push(mgGroupUi.getShareButtonDefinition())}mgModal.showMessage({title:mgI18N.t("myGroup","geoGroup"),content:desc,buttons:buttons})};var koCNG=function(){mgModal.hide();mgGroupUi.displayNetworkErrorPage()};mgGroupNetwork.callCreateGroup(okCNG,koCNG)},200)};var onJoinGroupDisplay=function(event,modalEl){event.preventDefault();if(modalEl.classList.contains(runningCssClass)===true){return}else{handleRequestStart(modalEl)}var code=modalEl.querySelector("input[name=code]").value;var okJG=function(response){handleRequestEnd(modalEl);if(response.success===false){var domErrorMessage=modalEl.querySelector(".error-message");if(response.error==="ERR_INVALID_CODE"){domErrorMessage.innerHTML=mgI18N.t("invalid_code","geoGroup");domErrorMessage.classList.remove("unvisible");MobiGeo.Location.GeoGroup.publish(mgGroup.events.error,mgGroup.errorCodes.GEOGROUP_GROUP_INVALID);return}if(response.error==="ERR_GROUP_FULL"){domErrorMessage.innerHTML=mgI18N.t("group_full","geoGroup");domErrorMessage.classList.remove("unvisible");MobiGeo.Location.GeoGroup.publish(mgGroup.events.error,mgGroup.errorCodes.GEOGROUP_GROUP_FULL);return}_reset(response.error);mgGroupUi.showCreateJoinPage();return}MobiGeo.Location.GeoGroup.publish(mgGroup.events.groupJoined,{id:code});_refreshMyPosLabel();mgModal.hide();mgGroupUi.showSharedPositionsPage()};var koJG=function(){handleRequestEnd(modalEl);mgModal.hide();mgGroupUi.displayNetworkErrorPage()};mgGroupNetwork.callJoinGroup(code,okJG,koJG)};var onLeaveGroupClicked=function(event,modalEl){if(event){event.preventDefault()}var hasRequestRunning=modalEl.classList.contains(runningCssClass);if(!hasRequestRunning){handleRequestStart(modalEl)}var code=mgGroup.getGroupCode(),now=Date.now();var okQG=function(response){handleRequestEnd(modalEl);if(response.success===false){mgModal.hide();_quitGroupError();return}MobiGeo.Location.GeoGroup.publish(mgGroup.events.groupExited,{id:code});mgModal.hide();_MobiGeoMap.clear();_refreshMyPosLabel();mgGroupTrackeeManager.clear()};var koQG=function(){handleRequestEnd(modalEl);mgModal.hide();mgGroupUi.displayNetworkErrorPage()};window.setTimeout(function(){mgGroupNetwork.callQuitGroup(okQG,koQG)},200)};var onTrackeesListUpdate=function(parentEl){var items=parentEl.querySelectorAll(".geogroup-listitem-pinicon, .geogroup-listitem-pingroup");for(var i=0;i<items.length;i++){items[i].removeEventListener(mgSupport.interaction.click,pinClickHandler);items[i].addEventListener(mgSupport.interaction.click,pinClickHandler)}};var pinClickHandler=function(event){event.preventDefault();var trackeeId=event.target.getAttribute("data-trackee-id");var trackee=mgGroupTrackeeManager.getTrackeeById(trackeeId);if(trackee&&trackee.position!==null){mgMap.focusOnPosition(trackee.position)}else{mgMap.focusOnRootZone()}_handlePositionButtonClick(event)};var _handlePositionButtonClick=_.debounce(function(event){mgDt.toggleHoverClass(event.target);window.requestAnimationFrame(function pinIconClickHandler(){mgModal.hide()},20)});var onNetworkErrorRetryClicked=function(){mgModal.hide();mgGroupUi.showCreateJoinPage()};var _reset=function(error){if(error==="ERR_INVALID_ID"){mgGroup.resetUser()}else if(error==="ERR_INVALID_CODE"){mgGroup.resetGroup()}else{mgLogger.error(module,"This error is not managed: "+error)}};var _quitGroupError=function(){mgGroup.resetGroup();mgGroupSharing.onStopShareFeature(true)};var _refreshMyPosLabel=function(){var currentPosition=mgLocation.getCurrentPosition();if(mgJt.isEmpty(currentPosition)===false){mgPositionManager.getUserPosition().setUserPosition(currentPosition)}};return{handleUsernameSubmit:handleUsernameSubmit,onCreateJoinDisplay:onCreateJoinDisplay,onCreateGroupDisplay:onCreateGroupDisplay,onJoinGroupDisplay:onJoinGroupDisplay,onLeaveGroupClicked:onLeaveGroupClicked,onNetworkErrorRetryClicked:onNetworkErrorRetryClicked,onTrackeesListUpdate:onTrackeesListUpdate}}();var mgGroupNetwork=function(){"use strict";var module=mgLogger.modules.GeoGroup,uuid=null,lastPosition,hasGotServerConfig=false;var initialize=function(){if(mgFeatures.isGeoGroupEnabled()){if(mgJt.isEmpty(Config.geoGroup)===true||mgJt.isEmpty(Config.geoGroup.server)===true){mgLogger.error(module,"Fatal error: no geoGroup server defined!");Config.geoGroup={server:""}}getServerConfig()}};var callRegisterUser=function(username,win,fail){if(mgJt.isEmpty(username)===true){win({success:false,error:"ERR_INVALID_USERNAME"});return}if(typeof win!=="function"){mgLogger.error(module,"callRegisterUser: invalid callback",win);return}if(typeof fail!=="function"){mgLogger.error(module,"callRegisterUser: invalid callback",fail);return}var usernameClean=mgJt.removeAccents(username);if(usernameClean.match(/[^0-9a-zA-Z#-_ ]/g,"")!==null){win({success:false,error:"ERR_INVALID_USERNAME"});return}username=username.trim();if(username.length<mgGroup.getOption("pseudoMin")||username.length>mgGroup.getOption("pseudoMax")){win({success:false,error:"ERR_INVALID_USERNAME"});return}mgGroup.setUsernameBackup(username);var okCb=function(response){if(response.success===false){win(response);return}mgGroup.setUsername(username);mgGroup.setUsernameBackup("");mgGroup.setUserId(response.trackee_id);win(response)};var data={action:"register_user",username:username,uuid:uuid};_callApi(data,okCb,fail)};var callLogout=function(win,fail){var okCb=function(){mgGroup.setUsername(null);mgGroup.setUserId(null);win()};var data={id:mgGroup.getUserId(),action:"logout"};_callApi(data,okCb,fail)};var callCreateGroup=function(win,fail){var okCb=function(response){if(response.success===false){win(response);return}mgGroup.setGroupCode(response.code);mgGroupSharing.onStartShareFeature();win(response)};var data={id:mgGroup.getUserId(),action:"create_group"};_callApi(data,okCb,fail)};var callJoinGroup=function(code,win,fail){code=code+"";code=code.trim();if(/[0-9]{4}/.test(code)===false){win({success:false,error:"ERR_INVALID_CODE"});return}var okCb=function(response){if(response.success===false){win(response);return}mgGroup.setGroupCode(code);mgGroup.setGroupCodeBak(null);mgGroupSharing.onStartShareFeature();mgGroupTrackeeManager.displayTrackeesOnMap(mgGroup.getGroupCode());win(response)};mgGroup.setGroupCodeBak(code);var data={id:mgGroup.getUserId(),code:code,action:"join_group"};_callApi(data,okCb,fail)};var callQuitGroup=function(win,fail){console.debug("start quit group");var okCb=function(response){if(response.success===false){win(response);return}lastPosition=null;mgGroupSharing.onStopShareFeature();mgGroup.setGroupCode(null);mgGroup.setGroupCodeBak(null);win(response)};var data={id:mgGroup.getUserId(),code:mgGroup.getGroupCode(),action:"leave_group"};_callApi(data,okCb,fail)};var callSharePosition=function(currentPosition,win,fail){var isValidPosition=mgJt.isEmpty(currentPosition)===false&&mgJt.isEmpty(currentPosition.xy_m)===false;if(isValidPosition){currentPosition={floor:currentPosition.floor,zone:currentPosition.zone,xy_m:currentPosition.xy_m,data:currentPosition.data}}var data={id:mgGroup.getUserId(),action:"share_position",position:JSON.stringify(currentPosition)};function _win(response){if(response.success===true){console.debug("successfully shared")}}function _fail(){}_callApi(data,_win,_fail)};var callListGroupMembers=function(win,fail,timeout){var data={id:mgGroup.getUserId(),code:mgGroup.getGroupCode(),action:"list_members"};_callApi(data,win,fail,timeout)};var callResetMyPosition=function(ok,ko){var data={id:mgGroup.getUserId(),action:"share_position",position:null};_callApi(data,ok,ko)};var getServerConfig=function(){if(hasGotServerConfig!==true){var gotConfig=function(config){if(typeof config==="string"){config=JSON.parse(config)}hasGotServerConfig=true;Config.geoGroup.serverConfig=config;PubSub.publish("mobigeoGroup-serverConfigLoaded")};var couldNotGetConfig=function(){mgLogger.error(module,"Failed to retrieve the config from server")};_callApi({action:"config"},gotConfig,couldNotGetConfig)}};var _throttleFn=function(fn,time){if(isNaN(time)){throw new Error("Debounce, time argument MUST be a number")}var l=fn.length;var lastCalled=null;function resultFn(){var now=(new Date).getTime();if(!lastCalled){lastCalled=now;return fn.apply(undefined,[].slice.call(arguments,0,l))}else if(now-lastCalled<time){}else{lastCalled=now;return fn.apply(undefined,[].slice.call(arguments,0,l))}}return resultFn};var _callApi=function(data,ok,ko,timeout){mgFetchHelper.execute({type:"get",dataType:"jsonp",url:Config.geoGroup.server+"/sharing_controller.php",data:data,cache:false,timeout:timeout||5e3,success:ok,error:ko})};var _generateGUID=function(){if(typeof window.crypto!=="undefined"&&typeof window.crypto.getRandomValues!=="undefined"){var buf=new window.Uint16Array(8);window.crypto.getRandomValues(buf);var S4=function(num){var ret=num.toString(16);while(ret.length<4){ret="0"+ret}return ret};return S4(buf[0])+S4(buf[1])+"-"+S4(buf[2])+"-"+S4(buf[3])+"-"+S4(buf[4])+"-"+S4(buf[5])+S4(buf[6])+S4(buf[7])}else{return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==="x"?r:r&3|8;return v.toString(16)})}};var persistantGUID=window.localStorage.getItem("mobigeo-uuid");if(mgJt.isEmpty(persistantGUID)===false){uuid=persistantGUID}else{uuid=_generateGUID();window.localStorage.setItem("mobigeo-uuid",uuid)}PubSub.subscribe("mobigeo-mapUiReady",initialize);return{callRegisterUser:callRegisterUser,callLogout:callLogout,callCreateGroup:callCreateGroup,callJoinGroup:callJoinGroup,callQuitGroup:callQuitGroup,callSharePosition:callSharePosition,callListGroupMembers:callListGroupMembers,callResetMyPosition:callResetMyPosition,getServerConfig:getServerConfig}}();var mgGroupSharing=function(){"use strict";function setGeogroubButtonActive(bool){console.info("set with "+bool);var button=document.querySelector(".btn-geogroup");var className="geogroup-running";var hasClass=button.classList.contains(className);if(bool&&!hasClass){button.classList.add(className)}else if(!bool){button.classList.remove(className)}}var module=mgLogger.modules.GeoGroup;var _options={shareMyPositionFrequency:60*1e3,gettingMemberListFrequency:5*1e3,instantSharePosition:true};var _vars={currentSharePositionIntervalId:null,timeoutGettingMemberListId:null,groupMemberList:[],sharedPosition:null,cptGroupMemberListNetworkError:0};var onStartShareFeature=function(){mgLogger.info(module,"onStartShareFeature!");if(mgGroup.amIAlreadyJoiningAGroup()===false){return}setGeogroubButtonActive(true);mgGroupUi.updateSharingButton(true);_startSharingMyPosition();_startGettingGroupMemberPositions()};var onStopShareFeature=function(mustResetMyPosition){mgLogger.info(module,"onStopShareFeature!");mgModal.hide();mgGroupUi.updateSharingButton(false);_stopSharingMyPosition();_MobiGeoMap.clear();if(mustResetMyPosition===true){mgGroupNetwork.callResetMyPosition()}_stopGettingGroupMemberPositions();setGeogroubButtonActive(false)};var _startSharingMyPosition=function(){mgLogger.info(module,"startSharingMyPosition!");if(_options.instantSharePosition===true){MobiGeo.Location.on("hasPosition",callSharePosition)}window.clearInterval(_vars.currentSharePositionIntervalId);window.setTimeout(callSharePosition,100);_vars.currentSharePositionIntervalId=window.setInterval(callSharePosition,_options.shareMyPositionFrequency)};var _stopSharingMyPosition=function(){window.clearInterval(_vars.currentSharePositionIntervalId);if(_options.instantSharePosition===true){MobiGeo.Location.off("hasPosition",callSharePosition)}};var _startGettingGroupMemberPositions=function(){mgLogger.info(module,"startGettingGroupMemberPositions!");if(_options.instantSharePosition===true){MobiGeo.Location.on("hasPosition",callListGroupMembersForced)}window.clearInterval(_vars.timeoutGettingMemberListId);window.setTimeout(callListGroupMembers,200);_vars.timeoutGettingMemberListId=window.setInterval(callListGroupMembers,_options.gettingMemberListFrequency)};var _stopGettingGroupMemberPositions=function(){window.clearInterval(_vars.timeoutGettingMemberListId);if(_options.instantSharePosition===true){MobiGeo.Location.off("hasPosition",callListGroupMembersForced)}_vars.groupMemberList=[];_vars.cptGroupMemberListNetworkError=0};function callListGroupMembersForced(){callListGroupMembers(true)}function callListGroupMembers(isForced){if(mgNativeInterface.status!=="active"&&isForced!==true){mgLogger.debug(module,"Did not fetch trackess positions...");return}var okGML=function(response){_vars.cptGroupMemberListNetworkError=0;if(response.success===false){var hasRealError=true;onStopShareFeature();if(response.error==="ERR_INVALID_ID"){mgGroup.resetUser()}else if(response.error==="ERR_INVALID_CODE"){hasRealError=mgJt.isEmpty(mgGroup.getGroupCode()!==true);mgGroup.resetGroup()}if(hasRealError===true){mgModal.showMessage({title:mgI18N.t("myGroup","geoGroup"),content:mgI18N.t("disconnection","geoGroup"),buttons:[mgModalButton.close]})}return}if(typeof response.trackees==="undefined"){mgLogger.error(module,"Invalid request. (request content not expected: no trackees)");return}var memberList=response.trackees;for(var i=0;i<memberList.length;i++){if(mgJt.isEmpty(memberList[i].position)===false&&memberList[i].position!=="[]"){var position;try{position=JSON.parse(memberList[i].position)}catch(ex){mgLogger.error(module,"Invalid remote trackee position data",memberList[i].position);memberList[i].position=null;continue}if(Array.isArray(position)===false){mgLogger.error(module,"Remote trackee position is not an array",position);memberList[i].position=null;continue}memberList[i].position=position.shift()}else{memberList[i].position=null}}_vars.groupMemberList=memberList;mgGroupUi.updateGroupMembersData(_vars.groupMemberList)};var koGML=function(error){_vars.cptGroupMemberListNetworkError++;if(_vars.cptGroupMemberListNetworkError>=3){mgGroupUi.activateNetworkErrorMessages()}};mgGroupNetwork.callListGroupMembers(okGML,koGML,_options.gettingMemberListFrequency-500);mgGroupNetwork.getServerConfig()}function callSharePosition(){mgGroupNetwork.callSharePosition(mgLocation.getCurrentPosition(),function win(){mgLogger.debug(module,"My position was shared!");_vars.sharedPosition=mgLocation.getCurrentPosition()},function fail(error){mgLogger.error(module,"Could not share my position",error)})}var onMobigeoMapDisplayed=function(){if(mgFeatures.isGeoGroupEnabled()===true){onStartShareFeature()}};PubSub.subscribe("mobigeo-mapsDisplayed",onMobigeoMapDisplayed);return{onStartShareFeature:onStartShareFeature,onStopShareFeature:onStopShareFeature}}();var mgGroupTrackeeManager=function(){"use strict";var module=mgLogger.modules.GeoGroup,trackees=[],mapTrackees=[],updateTrackeesOnMapIntervalId=null,nextItemForInserting=null,_options={delayRefreshTrackeesOnMap:3*1e3},ROLES={myself:"myself"};var sort=function(trackeeA,trackeeB){if(trackeeA.role===ROLES.myself){return-1}else if(trackeeB.role===ROLES.myself){return 1}else{return trackeeA.pseudo.localeCompare(trackeeB.pseudo)}};var setTrackees=function(pTrackees){trackees=pTrackees;trackees.sort(sort);PubSub.publish("mobigeoGroup-trackeesUpdated")};var getTrackeeById=function(trackeeId){return mgJt.filterOne(trackees,{id:trackeeId})};var updateTrackeesOnMap=function(){mgLogger.debug(module,"updateTrackeesOnMap...");mapTrackees.forEach(function(mapTrackee){mapTrackee.todelete=true});for(var i=0;i<trackees.length;i++){var trackee=trackees[i];var mapTrackee={};if(typeof mapTrackees[trackee.id]==="undefined"){mapTrackee.position=mgPositionFactory(mgPositionManager.TYPES.TRACKEE,trackee.id);mapTrackee.position.trackeeId=trackee.id}else{mapTrackee=mapTrackees[trackee.id]}mapTrackee.location=null;mapTrackee.todelete=false;mapTrackee.role=trackee.role;if(trackee.position!==null){mapTrackee.location={xy_m:trackee.position.xy_m,zone:trackee.position.zone,floor:trackee.position.floor}}mapTrackees[trackee.id]=mapTrackee}mapTrackees.forEach(function(mapTrackee,index,mapTrackees){showTrackee(index)})};var showTrackee=function(trackeeId){var mapTrackee=mapTrackees[trackeeId];if(mapTrackee){if(mapTrackee.todelete===true||mapTrackee.role===ROLES.myself){mapTrackee.position.hide()}else{mapTrackee.position.setFromL12n(mapTrackee.location)}}};var _insertTrackeeItem=function(listEl,liEl,isMyself){if(isMyself===true){var secondItem=listEl.querySelector("li:nth-child(2)");if(mgJt.isEmpty(secondItem)===false){listEl.insertBefore(liEl,secondItem)}else{listEl.appendChild(liEl)}}else{if(mgJt.isEmpty(nextItemForInserting)===false){listEl.insertBefore(liEl,nextItemForInserting.nextSibling)}else{listEl.appendChild(liEl)}}return liEl};var _updateGroupMemberListItem=function(listEl,trackee){if(trackee.role===ROLES.myself){trackee.position=mgLocation.getCurrentPosition()}var positionLabel;var isLocalized=!mgJt.isEmpty(trackee.position);var date;if(!isLocalized){positionLabel=mgI18N.t("not_localized","geoGroup")}else{positionLabel=mgI18N.t("last_localized","geoGroup");date=new Date(trackee.last_session_time.split(" ").join("T")+"+02:00")}if(isLocalized&&date){positionLabel=positionLabel+moment(date).format("L HH:mm")}var newTrackeeHTML=mgTemplates["geogroup-memberlist-memberelement"].render({id:trackee.id,isMyself:trackee.role===ROLES.myself,color:trackee.color,pseudo:trackee.pseudo,_labels:{you:mgI18N.t("you","mapPosition")},location:"",positionLabel:positionLabel,hasPosition:mgJt.isEmpty(trackee.position)===false});var trackeeEl=listEl.querySelector("#trackee-"+trackee.id);if(mgJt.isEmpty(trackeeEl)===true||newTrackeeHTML!==trackeeEl.outerHTML){var tmpEl=document.createElement("dom");tmpEl.innerHTML=newTrackeeHTML;var liEl=tmpEl.querySelector("li:first-child");if(mgJt.isEmpty(trackeeEl)===true){trackeeEl=_insertTrackeeItem(listEl,liEl,trackee.role===ROLES.myself)}trackeeEl.innerHTML=liEl.innerHTML;return true}else{return false}};var updateTrackeesList=function(listEl){_updateGroupPinIcon(listEl);nextItemForInserting=null;var hasDomBeenUpdated=false;var itemEls=listEl.querySelectorAll("li:not(.geogroup-grouplistitem)");for(var i=0;i<itemEls.length;i++){itemEls[i].readyToBeDeleted=true}if(trackees.length===0){mgModal.showLoader()}else{for(var j=0;j<trackees.length;j++){var trackee=trackees[j];var hasThisTrackeeUpdatedDom=_updateGroupMemberListItem(listEl,trackee);hasDomBeenUpdated=hasDomBeenUpdated||hasThisTrackeeUpdatedDom;var trackeeEl=listEl.querySelector("#trackee-"+trackee.id);if(mgJt.isEmpty(trackeeEl)===true){mgLogger.error(module,"Could not find trackee element",trackee.id);continue}trackeeEl.readyToBeDeleted=false;nextItemForInserting=trackeeEl}}for(var k=0;k<itemEls.length;k++){if(itemEls[k].readyToBeDeleted===true){mgDt.removeElement(itemEls[k]);hasDomBeenUpdated=true}}if(hasDomBeenUpdated===true){mgModal.resize();if(trackees.length>0){mgModal.hideLoader()}mgGroupController.onTrackeesListUpdate(listEl)}};var displayTrackeesOnMap=function(){if(!updateTrackeesOnMapIntervalId){mgLogger.info(module,"Start displaying position on map...");_MobiGeoMap.clear()}else{window.clearInterval(updateTrackeesOnMapIntervalId)}updateTrackeesOnMap();updateTrackeesOnMapIntervalId=window.setInterval(updateTrackeesOnMap,_options.delayRefreshTrackeesOnMap)};var _updateGroupPinIcon=function(listEl){var groupPinIconEl=listEl.querySelector(".geogroup-grouplistitem .geogroup-listitem-pinicon");if(groupPinIconEl){var hasAtLeastOnePosition=false;for(var i=0;i<trackees.length;i++){var trackee=trackees[i];if(trackee.position!==null){hasAtLeastOnePosition=true}}if(hasAtLeastOnePosition===false){mgDt.applyStyle(groupPinIconEl,{visibility:"hidden"})}else{mgDt.applyStyle(groupPinIconEl,{visibility:"visible"})}}};var clear=function(){trackees=mgJt.emptyArray(trackees);mapTrackees=mgJt.emptyArray(mapTrackees)};return{setTrackees:setTrackees,showTrackee:showTrackee,updateTrackeesList:updateTrackeesList,displayTrackeesOnMap:displayTrackeesOnMap,getTrackeeById:getTrackeeById,sort:sort,clear:clear,get ROLES(){return ROLES},getTrackees:function(){return trackees},getMapTrackees:function(){return mapTrackees}}}();var mgDevHelpers=function(){"use strict";if(window.MOBIGEODEV!==true){return}var initialize=function(){exposeModule("_MobiGeo",typeof _MobiGeo!=="undefined"?_MobiGeo:null);exposeModule("_MobiGeoFavorite",typeof _MobiGeoFavorite!=="undefined"?_MobiGeoFavorite:null);exposeModule("_MobiGeoGroup",typeof _MobiGeoGroup!=="undefined"?_MobiGeoGroup:null);exposeModule("_MobiGeoLocation",typeof _MobiGeoLocation!=="undefined"?_MobiGeoLocation:null);exposeModule("_MobiGeoMap",typeof _MobiGeoMap!=="undefined"?_MobiGeoMap:null);exposeModule("_MobiGeoMapPOI",typeof _MobiGeoMapPOI!=="undefined"?_MobiGeoMapPOI:null);exposeModule("_MobiGeoMapRoute",typeof _MobiGeoMapRoute!=="undefined"?_MobiGeoMapRoute:null);exposeModule("_MobiGeoPush",typeof _MobiGeoPush!=="undefined"?_MobiGeoPush:null);exposeModule("Config",typeof Config!=="undefined"?Config:null);exposeModule("mgMainConfig",typeof mgMainConfig!=="undefined"?mgMainConfig:null);exposeModule("mgAroundMe",typeof mgAroundMe!=="undefined"?mgAroundMe:null);exposeModule("mgAroundMeUi",typeof mgAroundMeUi!=="undefined"?mgAroundMeUi:null);exposeModule("mgBackendAPI",typeof mgBackendAPI!=="undefined"?mgBackendAPI:null);exposeModule("mgCordovaNativeFactory",typeof mgCordovaNativeFactory!=="undefined"?mgCordovaNativeFactory:null);exposeModule("mgCreatorService",typeof mgCreatorService!=="undefined"?mgCreatorService:null);exposeModule("mgCrypto",typeof mgCrypto!=="undefined"?mgCrypto:null);exposeModule("mgData",typeof mgData!=="undefined"?mgData:null);exposeModule("mgDragCancelPanel",typeof mgDragCancelPanel!=="undefined"?mgDragCancelPanel:null);exposeModule("mgDraggableLabel",typeof mgDraggableLabel!=="undefined"?mgDraggableLabel:null);exposeModule("mgDraggablePins",typeof mgDraggablePins!=="undefined"?mgDraggablePins:null);exposeModule("mgDt",typeof mgDt!=="undefined"?mgDt:null);exposeModule("mgEditPanel",typeof mgEditPanel!=="undefined"?mgEditPanel:null);exposeModule("mgEditMode",typeof mgEditMode!=="undefined"?mgEditMode:null);exposeModule("mgEventPublisherFactory",typeof mgEventPublisherFactory!=="undefined"?mgEventPublisherFactory:null);exposeModule("mgFavoritePositions",typeof mgFavoritePositions!=="undefined"?mgFavoritePositions:null);exposeModule("mgFeatures",typeof mgFeatures!=="undefined"?mgFeatures:null);exposeModule("mgFetchHelper",typeof mgFetchHelper!=="undefined"?mgFetchHelper:null);exposeModule("mgFileSystem",typeof mgFileSystem!=="undefined"?mgFileSystem:null);exposeModule("mgFullNativeFactory",typeof mgFullNativeFactory!=="undefined"?mgFullNativeFactory:null);exposeModule("mgGroup",typeof mgGroup!=="undefined"?mgGroup:null);exposeModule("mgGroupController",typeof mgGroupController!=="undefined"?mgGroupController:null);exposeModule("mgGroupNetwork",typeof mgGroupNetwork!=="undefined"?mgGroupNetwork:null);exposeModule("mgGroupSharing",typeof mgGroupSharing!=="undefined"?mgGroupSharing:null);exposeModule("mgGroupTrackeeManager",typeof mgGroupTrackeeManager!=="undefined"?mgGroupTrackeeManager:null);exposeModule("mgGroupUi",typeof mgGroupUi!=="undefined"?mgGroupUi:null);exposeModule("mgI18N",typeof mgI18N!=="undefined"?mgI18N:null);exposeModule("mgItinerary",typeof mgItinerary!=="undefined"?mgItinerary:null);exposeModule("mgItineraryInternal",typeof mgItineraryInternal!=="undefined"?mgItineraryInternal:null);exposeModule("_MobiGeoMapIcon",typeof _MobiGeoMapIcon!=="undefined"?_MobiGeoMapIcon:null);exposeModule("mgItineraryPolygonInternal",typeof mgItineraryPolygonInternal!=="undefined"?mgItineraryPolygonInternal:null);exposeModule("mgItineraryUi",typeof mgItineraryUi!=="undefined"?mgItineraryUi:null);exposeModule("mgJt",typeof mgJt!=="undefined"?mgJt:null);exposeModule("mgLang",typeof mgLang!=="undefined"?mgLang:null);exposeModule("mgLegend",typeof mgLegend!=="undefined"?mgLegend:null);exposeModule("mgLocation",typeof mgLocation!=="undefined"?mgLocation:null);exposeModule("mgLocationStatus",typeof mgLocationStatus!=="undefined"?mgLocationStatus:null);exposeModule("mgLocationUi",typeof mgLocationUi!=="undefined"?mgLocationUi:null);exposeModule("mgLogger",typeof mgLogger!=="undefined"?mgLogger:null);exposeModule("mgLongPressHandler",typeof mgLongPressHandler!=="undefined"?mgLongPressHandler:null);exposeModule("mgMap",typeof mgMap!=="undefined"?mgMap:null);exposeModule("mgMapConfig",typeof mgMapConfig!=="undefined"?mgMapConfig:null);exposeModule("mgMapTransform",typeof mgMapTransform!=="undefined"?mgMapTransform:null);exposeModule("mgMapUi",typeof mgMapUi!=="undefined"?mgMapUi:null);exposeModule("mgMapUiSVG",typeof mgMapUiSVG!=="undefined"?mgMapUiSVG:null);exposeModule("mgMessage",typeof mgMessage!=="undefined"?mgMessage:null);exposeModule("mgModal",typeof mgModal!=="undefined"?mgModal:null);exposeModule("mgModalButton",typeof mgModalButton!=="undefined"?mgModalButton:null);exposeModule("mgNaoService",typeof mgNaoService!=="undefined"?mgNaoService:null);exposeModule("mgNativeInterface",typeof mgNativeInterface!=="undefined"?mgNativeInterface:null);exposeModule("mgNotificationFilter",typeof mgNotificationFilter!=="undefined"?mgNotificationFilter:null);exposeModule("mgNotificationPerformer",typeof mgNotificationPerformer!=="undefined"?mgNotificationPerformer:null);exposeModule("mgOnboard",typeof mgOnboard!=="undefined"?mgOnboard:null);exposeModule("mgPage",typeof mgPage!=="undefined"?mgPage:null);exposeModule("mgPermissions",typeof mgPermissions!=="undefined"?mgPermissions:null);exposeModule("mgPoiPermissionsInternal",typeof mgPoiPermissionsInternal!=="undefined"?mgPoiPermissionsInternal:null);exposeModule("mgInteractionHelper",typeof mgInteractionHelper!=="undefined"?mgInteractionHelper:null);exposeModule("mgPinLabel",typeof mgPinLabel!=="undefined"?mgPinLabel:null);exposeModule("mgPinFactory",typeof mgPinFactory!=="undefined"?mgPinFactory:null);exposeModule("mgPinManager",typeof mgPinManager!=="undefined"?mgPinManager:null);exposeModule("mgPlanetIntusService",typeof mgPlanetIntusService!=="undefined"?mgPlanetIntusService:null);exposeModule("mgPointerEventsHelper",typeof mgPointerEventsHelper!=="undefined"?mgPointerEventsHelper:null);exposeModule("mgPoiStates",typeof mgPoiStates!=="undefined"?mgPoiStates:null);exposeModule("mgPositionFactory",typeof mgPositionFactory!=="undefined"?mgPositionFactory:null);exposeModule("mgPositionManager",typeof mgPositionManager!=="undefined"?mgPositionManager:null);exposeModule("mgPositionTracking",typeof mgPositionTracking!=="undefined"?mgPositionTracking:null);exposeModule("mgPushWooshManager",typeof mgPushWooshManager!=="undefined"?mgPushWooshManager:null);exposeModule("mgRealTime",typeof mgRealTime!=="undefined"?mgRealTime:null);exposeModule("mgRegionPermissionsInternal",typeof mgRegionPermissionsInternal!=="undefined"?mgRegionPermissionsInternal:null);exposeModule("mgSupport",typeof mgSupport!=="undefined"?mgSupport:null);exposeModule("mgSynopticView",typeof mgSynopticView!=="undefined"?mgSynopticView:null);exposeModule("mgSynopticPins",typeof mgSynopticPins!=="undefined"?mgSynopticPins:null);exposeModule("mgTemplates",typeof mgTemplates!=="undefined"?mgTemplates:null);exposeModule("mgTouchEventsHelper",typeof mgTouchEventsHelper!=="undefined"?mgTouchEventsHelper:null);exposeModule("mgUpdateMain",typeof mgUpdateMain!=="undefined"?mgUpdateMain:null);exposeModule("mgUpdater",typeof mgUpdater!=="undefined"?mgUpdater:null);exposeModule("mgViewport",typeof mgViewport!=="undefined"?mgViewport:null);exposeModule("mgVignette",typeof mgVignette!=="undefined"?mgVignette:null);exposeModule("mgWebNativeFactory",typeof mgWebNativeFactory!=="undefined"?mgWebNativeFactory:null);exposeModule("mgZoneElevatorFactory",typeof mgZoneElevatorFactory!=="undefined"?mgZoneElevatorFactory:null);exposeModule("mgZoneFactory",typeof mgZoneFactory!=="undefined"?mgZoneFactory:null);exposeModule("mgZoneManager",typeof mgZoneManager!=="undefined"?mgZoneManager:null);PubSub.immediateExceptions=true};var exposeModule=function(name,instance){if(instance!==null&&typeof instance==="object"&&typeof window[name]==="undefined"){window[name]=instance}};var handleGetKeysPrivateEvent=function(){PubSub.publish("mobigeo-private-data-returnKeys",Config.paths)};PubSub.subscribe("mobigeo-private-data-askForKeys",handleGetKeysPrivateEvent);var publishClickPosition=function(event){if(mgFeatures.isLocationEnabled()===true&&event.target.parentElement.classList.contains(mgPositionManager.POSITION_CSS_CLASS[mgPositionManager.TYPES.USER_POS])!==true){var eventCoord={};if(typeof event.layerX!=="undefined"){eventCoord.x=event.layerX;eventCoord.y=event.layerY}else if(typeof event.changedTouches!=="undefined"&&event.changedTouches.length>0){eventCoord.x=event.changedTouches[0].clientX+document.body.scrollLeft+document.documentElement.scrollLeft;eventCoord.y=event.changedTouches[0].clientY+document.body.scrollTop+document.documentElement.scrollTop}else{console.error("Cannot determine click position as event has no layerX/layerY nor changedTouches value.");return}var mCoords=mgMapTransform.v2r(eventCoord),wgsCoords=mgLocation.mToWgs(mCoords.x,mCoords.y),currentFloor=mgZoneManager.getCurrentZone().getCurrentFloor().altitude;var toZoneId=mgZoneManager.getZoneFromXY(mCoords);if(toZoneId!==mgZoneManager.getCurrentZone().getId()&&mgZoneManager.getZone(toZoneId).hasFloor(currentFloor)===false){currentFloor=0}PubSub.publish("mobigeodebug-map-clicked",{latitude:wgsCoords.lat,longitude:wgsCoords.lon,altitude:mgJt.isEmpty(currentFloor)===true?0:currentFloor})}};initialize();return{publishClickPosition:publishClickPosition}}()}if(typeof _module==="object"&&typeof _module.exports==="object"){module=_module;module.exports=MobiGeo}if(typeof _exports==="object"){exports=_exports}})();
